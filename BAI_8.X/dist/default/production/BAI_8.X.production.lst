

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 07 00:57:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0008                     _PORTD	set	8
   205  005C                     _INTE	set	92
   206  0059                     _INTF	set	89
   207  005F                     _GIE	set	95
   208  0095                     _WPUB	set	149
   209  0086                     _TRISB	set	134
   210  0088                     _TRISD	set	136
   211  040E                     _INTEDG	set	1038
   212  040F                     _nRBPU	set	1039
   213  0189                     _ANSELH	set	393
   214  0188                     _ANSEL	set	392
   215                           
   216                           	psect	cinit
   217  000F                     start_initialization:	
   218                           ; #config settings
   219                           
   220  000F                     __initialization:
   221                           
   222                           ; Clear objects allocated to COMMON
   223  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   224  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   225  0011                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  0011                     __end_of__initialization:
   229  0011  0183               	clrf	3
   230  0012  120A  118A  2848   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  0070                     __pbssCOMMON:
   234  0070                     _count:
   235  0070                     	ds	2
   236                           
   237                           	psect	cstackCOMMON
   238  0072                     __pcstackCOMMON:
   239  0072                     ?_declarePort:
   240  0072                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0072                     ?_myIsr:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0072                     ??_myIsr:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251  0072                     	ds	2
   252  0074                     ??_declarePort:
   253  0074                     ??_main:	
   254                           ; 1 bytes @ 0x2
   255                           
   256                           
   257                           	psect	maintext
   258  0048                     __pmaintext:	
   259                           ; 1 bytes @ 0x2
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 40 in file "newmain.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, pclath, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : B00/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called: 2
   285 ;; This function calls:
   286 ;;		_declarePort
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  0048                     _main:
   295  0048                     l653:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   298                           
   299                           
   300                           ;newmain.c: 41:     declarePort();
   301  0048  120A  118A  2033  120A  118A  	fcall	_declarePort
   302  004D                     l655:
   303                           
   304                           ;newmain.c: 43:         PORTD = count;
   305  004D  0870               	movf	_count,w
   306  004E  1283               	bcf	3,5	;RP0=0, select bank0
   307  004F  1303               	bcf	3,6	;RP1=0, select bank0
   308  0050  0088               	movwf	8	;volatile
   309  0051  284D               	goto	l655
   310  0052  120A  118A  280C   	ljmp	start
   311  0055                     __end_of_main:
   312                           
   313                           	psect	text1
   314  0033                     __ptext1:	
   315 ;; *************** function _declarePort *****************
   316 ;; Defined at:
   317 ;;		line 47 in file "newmain.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used: 1
   337 ;; Hardware stack levels required when called: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _declarePort
   347  0033                     _declarePort:
   348  0033                     l639:	
   349                           ;incstack = 0
   350                           ; Regs used in _declarePort: [wreg+status,2]
   351                           
   352                           
   353                           ;newmain.c: 48:     ANSEL = ANSELH = 0;
   354  0033  1683               	bsf	3,5	;RP0=1, select bank3
   355  0034  1703               	bsf	3,6	;RP1=1, select bank3
   356  0035  0189               	clrf	9	;volatile
   357  0036  0188               	clrf	8	;volatile
   358                           
   359                           ;newmain.c: 49:     TRISD = 0;
   360  0037  1683               	bsf	3,5	;RP0=1, select bank1
   361  0038  1303               	bcf	3,6	;RP1=0, select bank1
   362  0039  0188               	clrf	8	;volatile
   363                           
   364                           ;newmain.c: 50:     PORTD = 0;
   365  003A  1283               	bcf	3,5	;RP0=0, select bank0
   366  003B  1303               	bcf	3,6	;RP1=0, select bank0
   367  003C  0188               	clrf	8	;volatile
   368  003D                     l641:
   369                           
   370                           ;newmain.c: 51:     TRISB = WPUB = 0x01;
   371  003D  3001               	movlw	1
   372  003E  1683               	bsf	3,5	;RP0=1, select bank1
   373  003F  1303               	bcf	3,6	;RP1=0, select bank1
   374  0040  0095               	movwf	21	;volatile
   375  0041  0086               	movwf	6	;volatile
   376  0042                     l643:
   377                           
   378                           ;newmain.c: 53:     nRBPU = 0;
   379  0042  1381               	bcf	1,7	;volatile
   380  0043                     l645:
   381                           
   382                           ;newmain.c: 54:     GIE = 1;
   383  0043  178B               	bsf	11,7	;volatile
   384  0044                     l647:
   385                           
   386                           ;newmain.c: 55:     INTF = 0;
   387  0044  108B               	bcf	11,1	;volatile
   388  0045                     l649:
   389                           
   390                           ;newmain.c: 56:     INTE = 1;
   391  0045  160B               	bsf	11,4	;volatile
   392  0046                     l651:
   393                           
   394                           ;newmain.c: 57:     INTEDG = 1;
   395  0046  1701               	bsf	1,6	;volatile
   396  0047                     l37:
   397  0047  0008               	return
   398  0048                     __end_of_declarePort:
   399                           
   400                           	psect	text2
   401  0015                     __ptext2:	
   402 ;; *************** function _myIsr *****************
   403 ;; Defined at:
   404 ;;		line 60 in file "newmain.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          2       0       0       0       0
   421 ;;      Totals:         2       0       0       0       0
   422 ;;Total ram usage:        2 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		Interrupt level 1
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _myIsr
   433  0015                     _myIsr:
   434  0015                     i1l657:
   435                           
   436                           ;newmain.c: 61:     if(INTF) {
   437  0015  1C8B               	btfss	11,1	;volatile
   438  0016  2818               	goto	u1_21
   439  0017  2819               	goto	u1_20
   440  0018                     u1_21:
   441  0018  282C               	goto	i1l47
   442  0019                     u1_20:
   443  0019                     i1l659:
   444                           
   445                           ;newmain.c: 62:         count = count == 90 ? 0 : count + 1;
   446  0019  305A               	movlw	90
   447  001A  0670               	xorwf	_count,w
   448  001B  0471               	iorwf	_count+1,w
   449  001C  1903               	btfsc	3,2
   450  001D  281F               	goto	u2_21
   451  001E  2820               	goto	u2_20
   452  001F                     u2_21:
   453  001F  2829               	goto	i1l663
   454  0020                     u2_20:
   455  0020                     i1l661:
   456  0020  0870               	movf	_count,w
   457  0021  3E01               	addlw	1
   458  0022  00F0               	movwf	_count
   459  0023  0871               	movf	_count+1,w
   460  0024  1803               	skipnc
   461  0025  3E01               	addlw	1
   462  0026  3E00               	addlw	0
   463  0027  00F1               	movwf	_count+1
   464  0028  282B               	goto	i1l665
   465  0029                     i1l663:
   466  0029  01F0               	clrf	_count
   467  002A  01F1               	clrf	_count+1
   468  002B                     i1l665:
   469                           
   470                           ;newmain.c: 63:         INTF = 0;
   471  002B  108B               	bcf	11,1	;volatile
   472  002C                     i1l47:
   473  002C  0873               	movf	??_myIsr+1,w
   474  002D  008A               	movwf	10
   475  002E  0E72               	swapf	??_myIsr,w
   476  002F  0083               	movwf	3
   477  0030  0EFE               	swapf	btemp,f
   478  0031  0E7E               	swapf	btemp,w
   479  0032  0009               	retfie
   480  0033                     __end_of_myIsr:
   481  007E                     btemp	set	126	;btemp
   482  007E                     wtemp0	set	126
   483                           
   484                           	psect	intentry
   485  0004                     __pintentry:	
   486                           ;incstack = 0
   487                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   488                           
   489  0004                     interrupt_function:
   490  007E                     saved_w	set	btemp
   491  0004  00FE               	movwf	btemp
   492  0005  0E03               	swapf	3,w
   493  0006  00F2               	movwf	??_myIsr
   494  0007  080A               	movf	10,w
   495  0008  00F3               	movwf	??_myIsr+1
   496  0009  120A  118A  2815   	ljmp	_myIsr
   497                           
   498                           	psect	config
   499                           
   500                           ;Config register CONFIG1 @ 0x2007
   501                           ;	Oscillator Selection bits
   502                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   503                           ;	Watchdog Timer Enable bit
   504                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   505                           ;	Power-up Timer Enable bit
   506                           ;	PWRTE = OFF, PWRT disabled
   507                           ;	RE3/MCLR pin function select bit
   508                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   509                           ;	Code Protection bit
   510                           ;	CP = OFF, Program memory code protection is disabled
   511                           ;	Data Code Protection bit
   512                           ;	CPD = OFF, Data memory code protection is disabled
   513                           ;	Brown Out Reset Selection bits
   514                           ;	BOREN = OFF, BOR disabled
   515                           ;	Internal External Switchover bit
   516                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   517                           ;	Fail-Safe Clock Monitor Enabled bit
   518                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   519                           ;	Low Voltage Programming Enable bit
   520                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   521                           ;	In-Circuit Debugger Mode bit
   522                           ;	DEBUG = 0x1, unprogrammed default
   523  2007                     	org	8199
   524  2007  20F2               	dw	8434
   525                           
   526                           ;Config register CONFIG2 @ 0x2008
   527                           ;	Brown-out Reset Selection bit
   528                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   529                           ;	Flash Program Memory Self Write Enable bits
   530                           ;	WRT = OFF, Write protection off
   531  2008                     	org	8200
   532  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 07 00:57:32 2021

                     l37 0047                      l641 003D                      l651 0046  
                    l643 0042                      l645 0043                      l653 0048  
                    l647 0044                      l639 0033                      l655 004D  
                    l649 0045                      _GIE 005F                     _INTE 005C  
                   _INTF 0059                     i1l47 002C                     _WPUB 0095  
                   u1_20 0019                     u1_21 0018                     u2_20 0020  
                   u2_21 001F                     _main 0048                     btemp 007E  
                   start 000C                    ?_main 0072                    _ANSEL 0188  
                  i1l661 0020                    i1l663 0029                    i1l665 002B  
                  i1l657 0015                    i1l659 0019                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _nRBPU 040F  
   __size_of_declarePort 0015                    _count 0070                    _myIsr 0015  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0055                   ??_main 0074  
                 ?_myIsr 0072                   _ANSELH 0189                   _INTEDG 040E  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0072  
          __end_of_myIsr 0033                  ??_myIsr 0072               __pmaintext 0048  
             __pintentry 0004                  __ptext1 0033                  __ptext2 0015  
          ??_declarePort 0074     end_of_initialization 0011      __end_of_declarePort 0048  
    start_initialization 000F              _declarePort 0033              __pbssCOMMON 0070  
              ___latbits 0002           __size_of_myIsr 001E        interrupt_function 0004  
          __size_of_main 000D             ?_declarePort 0072                 intlevel1 0000  
