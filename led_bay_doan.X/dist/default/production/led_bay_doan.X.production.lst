

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 31 02:02:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  06AE                     __pidataBANK0:
   210                           
   211                           ;initializer for main@F1266
   212  06AE  34C0               	retlw	192
   213  06AF  34F9               	retlw	249
   214  06B0  34A4               	retlw	164
   215  06B1  34B0               	retlw	176
   216  06B2  3499               	retlw	153
   217  06B3  3492               	retlw	146
   218  06B4  3482               	retlw	130
   219  06B5  34F8               	retlw	248
   220  06B6  3480               	retlw	128
   221  06B7  3490               	retlw	144
   222  0007                     _PORTC	set	7
   223  0008                     _PORTD	set	8
   224  0087                     _TRISC	set	135
   225  0088                     _TRISD	set	136
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	cinit
   230  07EE                     start_initialization:	
   231                           ; #config settings
   232                           
   233  07EE                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236  07EE  1383               	bcf	3,7	;select IRP bank0
   237  07EF  303A               	movlw	low (__pdataBANK0+10)
   238  07F0  00FD               	movwf	btemp+-1
   239  07F1  3006               	movlw	high __pidataBANK0
   240  07F2  00FE               	movwf	btemp
   241  07F3  30AE               	movlw	low __pidataBANK0
   242  07F4  00FF               	movwf	btemp+1
   243  07F5  3030               	movlw	low __pdataBANK0
   244  07F6  0084               	movwf	4
   245  07F7  120A  118A  26CA  120A  118A  	fcall	init_ram0
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2F57   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	dataBANK0
   254  0030                     __pdataBANK0:
   255  0030                     main@F1266:
   256  0030                     	ds	10
   257                           
   258                           	psect	inittext
   259  06C6                     init_fetch0:	
   260                           ;	Called with low address in FSR and high address in W
   261                           
   262  06C6  087E               	movf	btemp,w
   263  06C7  008A               	movwf	10
   264  06C8  087F               	movf	btemp+1,w
   265  06C9  0082               	movwf	2
   266  06CA                     init_ram0:	
   267                           ;Called with:
   268                           ;	high address of idata address in btemp 
   269                           ;	low address of idata address in btemp+1 
   270                           ;	low address of data in FSR
   271                           ;	high address + 1 of data in btemp-1
   272                           
   273  06CA  120A  118A  26C6  120A  118A  	fcall	init_fetch0
   274  06CF  0080               	movwf	0
   275  06D0  0A84               	incf	4,f
   276  06D1  0804               	movf	4,w
   277  06D2  067D               	xorwf	btemp+-1,w
   278  06D3  1903               	btfsc	3,2
   279  06D4  3400               	retlw	0
   280  06D5  0AFF               	incf	btemp+1,f
   281  06D6  1903               	btfsc	3,2
   282  06D7  0AFE               	incf	btemp,f
   283  06D8  2ECA               	goto	init_ram0
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_declarePort:
   288  0070                     ??_declarePort:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?___lwdiv:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?___lwmod:	
   298                           ; 2 bytes @ 0x0
   299                           
   300  0070                     ___lwdiv@divisor:	
   301                           ; 2 bytes @ 0x0
   302                           
   303  0070                     ___lwmod@divisor:	
   304                           ; 2 bytes @ 0x0
   305                           
   306                           
   307                           ; 2 bytes @ 0x0
   308  0070                     	ds	2
   309  0072                     ___lwdiv@dividend:
   310  0072                     ___lwmod@dividend:	
   311                           ; 2 bytes @ 0x2
   312                           
   313                           
   314                           ; 2 bytes @ 0x2
   315  0072                     	ds	2
   316  0074                     ??___lwdiv:
   317  0074                     ??___lwmod:	
   318                           ; 1 bytes @ 0x4
   319                           
   320                           
   321                           ; 1 bytes @ 0x4
   322  0074                     	ds	1
   323  0075                     ___lwmod@counter:
   324  0075                     ___lwdiv@quotient:	
   325                           ; 1 bytes @ 0x5
   326                           
   327                           
   328                           ; 2 bytes @ 0x5
   329  0075                     	ds	2
   330  0077                     ___lwdiv@counter:
   331                           
   332                           ; 1 bytes @ 0x7
   333  0077                     	ds	1
   334  0078                     ??_main:
   335                           
   336                           ; 1 bytes @ 0x8
   337  0078                     	ds	4
   338                           
   339                           	psect	cstackBANK0
   340  0020                     __pcstackBANK0:
   341  0020                     main@listNumber:
   342                           
   343                           ; 10 bytes @ 0x0
   344  0020                     	ds	10
   345  002A                     main@dozen:
   346                           
   347                           ; 2 bytes @ 0xA
   348  002A                     	ds	2
   349  002C                     main@unit:
   350                           
   351                           ; 2 bytes @ 0xC
   352  002C                     	ds	2
   353  002E                     main@seconds:
   354                           
   355                           ; 2 bytes @ 0xE
   356  002E                     	ds	2
   357                           
   358                           	psect	maintext
   359  0757                     __pmaintext:	
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 39 in file "newmain.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  listNumber     10    0[BANK0 ] unsigned char [10]
   370 ;;  seconds         2   14[BANK0 ] unsigned int 
   371 ;;  unit            2   12[BANK0 ] unsigned int 
   372 ;;  dozen           2   10[BANK0 ] unsigned int 
   373 ;;  hold            2    0        unsigned int 
   374 ;;  minutes         2    0        unsigned int 
   375 ;;  hours           2    0        unsigned int 
   376 ;;  numberLed7Se    2    0        unsigned int 
   377 ;;  i               2    0        unsigned int 
   378 ;;  testLed         1    0        unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0      16       0       0       0
   390 ;;      Temps:          4       0       0       0       0
   391 ;;      Totals:         4      16       0       0       0
   392 ;;Total ram usage:       20 bytes
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		___lwdiv
   396 ;;		___lwmod
   397 ;;		_declarePort
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  0757                     _main:
   406  0757                     l772:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409                           
   410                           
   411                           ;newmain.c: 40:     declarePort();
   412  0757  120A  118A  26B8  120A  118A  	fcall	_declarePort
   413  075C                     l774:
   414                           
   415                           ;newmain.c: 41:     unsigned char listNumber[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0
      +                          xF8,0x80,0x90};
   416  075C  3020               	movlw	main@listNumber& (0+255)
   417  075D  0084               	movwf	4
   418  075E  3030               	movlw	low main@F1266
   419  075F  00F8               	movwf	??_main
   420  0760  0804               	movf	4,w
   421  0761  00F9               	movwf	??_main+1
   422  0762  300A               	movlw	10
   423  0763  00FA               	movwf	??_main+2
   424  0764                     u300:
   425  0764  0878               	movf	??_main,w
   426  0765  0084               	movwf	4
   427  0766  1383               	bcf	3,7	;select IRP bank0
   428  0767  0800               	movf	0,w
   429  0768  00FB               	movwf	??_main+3
   430  0769  0AF8               	incf	??_main,f
   431  076A  0879               	movf	??_main+1,w
   432  076B  0084               	movwf	4
   433  076C  087B               	movf	??_main+3,w
   434  076D  0080               	movwf	0
   435  076E  0AF9               	incf	??_main+1,f
   436  076F  0BFA               	decfsz	??_main+2,f
   437  0770  2F64               	goto	u300
   438  0771                     l776:
   439  0771                     l778:
   440  0771                     l780:
   441  0771                     l782:
   442  0771                     l784:
   443  0771  1283               	bcf	3,5	;RP0=0, select bank0
   444  0772  1303               	bcf	3,6	;RP1=0, select bank0
   445  0773  01AE               	clrf	main@seconds
   446  0774  01AF               	clrf	main@seconds+1
   447  0775                     l786:
   448  0775                     l788:
   449                           
   450                           ;newmain.c: 47:         if(seconds == 60) {
   451  0775  303C               	movlw	60
   452  0776  062E               	xorwf	main@seconds,w
   453  0777  042F               	iorwf	main@seconds+1,w
   454  0778  1D03               	btfss	3,2
   455  0779  2F7B               	goto	u311
   456  077A  2F7C               	goto	u310
   457  077B                     u311:
   458  077B  2F7E               	goto	l792
   459  077C                     u310:
   460  077C                     l790:
   461                           
   462                           ;newmain.c: 48:             seconds = 0;
   463  077C  01AE               	clrf	main@seconds
   464  077D  01AF               	clrf	main@seconds+1
   465  077E                     l792:
   466                           
   467                           ;newmain.c: 51:             if(seconds >= 10) {
   468  077E  3000               	movlw	0
   469  077F  022F               	subwf	main@seconds+1,w
   470  0780  300A               	movlw	10
   471  0781  1903               	skipnz
   472  0782  022E               	subwf	main@seconds,w
   473  0783  1C03               	skipc
   474  0784  2F86               	goto	u321
   475  0785  2F87               	goto	u320
   476  0786                     u321:
   477  0786  2FAE               	goto	l796
   478  0787                     u320:
   479  0787                     l794:
   480                           
   481                           ;newmain.c: 52:                 dozen = seconds / 10;
   482  0787  300A               	movlw	10
   483  0788  00F0               	movwf	___lwdiv@divisor
   484  0789  3000               	movlw	0
   485  078A  00F1               	movwf	___lwdiv@divisor+1
   486  078B  082F               	movf	main@seconds+1,w
   487  078C  00F3               	movwf	___lwdiv@dividend+1
   488  078D  082E               	movf	main@seconds,w
   489  078E  00F2               	movwf	___lwdiv@dividend
   490  078F  120A  118A  2713  120A  118A  	fcall	___lwdiv
   491  0794  0871               	movf	?___lwdiv+1,w
   492  0795  1283               	bcf	3,5	;RP0=0, select bank0
   493  0796  1303               	bcf	3,6	;RP1=0, select bank0
   494  0797  00AB               	movwf	main@dozen+1
   495  0798  0870               	movf	?___lwdiv,w
   496  0799  00AA               	movwf	main@dozen
   497                           
   498                           ;newmain.c: 53:                 unit = seconds % 10;
   499  079A  300A               	movlw	10
   500  079B  00F0               	movwf	___lwmod@divisor
   501  079C  3000               	movlw	0
   502  079D  00F1               	movwf	___lwmod@divisor+1
   503  079E  082F               	movf	main@seconds+1,w
   504  079F  00F3               	movwf	___lwmod@dividend+1
   505  07A0  082E               	movf	main@seconds,w
   506  07A1  00F2               	movwf	___lwmod@dividend
   507  07A2  120A  118A  26D9  120A  118A  	fcall	___lwmod
   508  07A7  0871               	movf	?___lwmod+1,w
   509  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   510  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   511  07AA  00AD               	movwf	main@unit+1
   512  07AB  0870               	movf	?___lwmod,w
   513  07AC  00AC               	movwf	main@unit
   514                           
   515                           ;newmain.c: 54:             }else {
   516  07AD  2FB4               	goto	l800
   517  07AE                     l796:
   518                           
   519                           ;newmain.c: 55:                 dozen = seconds;
   520  07AE  082F               	movf	main@seconds+1,w
   521  07AF  00AB               	movwf	main@dozen+1
   522  07B0  082E               	movf	main@seconds,w
   523  07B1  00AA               	movwf	main@dozen
   524  07B2                     l798:
   525                           
   526                           ;newmain.c: 56:                 unit = 0;
   527  07B2  01AC               	clrf	main@unit
   528  07B3  01AD               	clrf	main@unit+1
   529  07B4                     l800:
   530                           
   531                           ;newmain.c: 58:             PORTD = 0x08;
   532  07B4  3008               	movlw	8
   533  07B5  0088               	movwf	8	;volatile
   534  07B6                     l802:
   535                           
   536                           ;newmain.c: 59:             PORTC = listNumber[unit];
   537  07B6  082C               	movf	main@unit,w
   538  07B7  3E20               	addlw	(low (main@listNumber| 0))& (0+255)
   539  07B8  0084               	movwf	4
   540  07B9  1383               	bcf	3,7	;select IRP bank0
   541  07BA  0800               	movf	0,w
   542  07BB  0087               	movwf	7	;volatile
   543  07BC                     l804:
   544                           
   545                           ;newmain.c: 60:             _delay((unsigned long)((5)*(4000000/4000.0)));
   546  07BC  3007               	movlw	7
   547  07BD  00F9               	movwf	??_main+1
   548  07BE  307D               	movlw	125
   549  07BF  00F8               	movwf	??_main
   550  07C0                     u337:
   551  07C0  0BF8               	decfsz	??_main,f
   552  07C1  2FC0               	goto	u337
   553  07C2  0BF9               	decfsz	??_main+1,f
   554  07C3  2FC0               	goto	u337
   555  07C4                     l806:
   556                           
   557                           ;newmain.c: 61:             PORTD = PORTD >> 1;
   558  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   559  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   560  07C6  0808               	movf	8,w	;volatile
   561  07C7  00F8               	movwf	??_main
   562  07C8  1003               	clrc
   563  07C9  0C78               	rrf	??_main,w
   564  07CA  0088               	movwf	8	;volatile
   565  07CB                     l808:
   566                           
   567                           ;newmain.c: 62:             PORTC = listNumber[dozen];
   568  07CB  082A               	movf	main@dozen,w
   569  07CC  3E20               	addlw	(low (main@listNumber| 0))& (0+255)
   570  07CD  0084               	movwf	4
   571  07CE  1383               	bcf	3,7	;select IRP bank0
   572  07CF  0800               	movf	0,w
   573  07D0  0087               	movwf	7	;volatile
   574  07D1                     l810:
   575                           
   576                           ;newmain.c: 63:             _delay((unsigned long)((5)*(4000000/4000.0)));
   577  07D1  3007               	movlw	7
   578  07D2  00F9               	movwf	??_main+1
   579  07D3  307D               	movlw	125
   580  07D4  00F8               	movwf	??_main
   581  07D5                     u347:
   582  07D5  0BF8               	decfsz	??_main,f
   583  07D6  2FD5               	goto	u347
   584  07D7  0BF9               	decfsz	??_main+1,f
   585  07D8  2FD5               	goto	u347
   586  07D9                     l812:
   587                           
   588                           ;newmain.c: 65:         _delay((unsigned long)((50)*(4000000/4000.0)));
   589  07D9  3041               	movlw	65
   590  07DA  00F9               	movwf	??_main+1
   591  07DB  30EE               	movlw	238
   592  07DC  00F8               	movwf	??_main
   593  07DD                     u357:
   594  07DD  0BF8               	decfsz	??_main,f
   595  07DE  2FDD               	goto	u357
   596  07DF  0BF9               	decfsz	??_main+1,f
   597  07E0  2FDD               	goto	u357
   598  07E1  0000               	nop
   599  07E2                     l814:
   600                           
   601                           ;newmain.c: 66:         seconds += 1;
   602  07E2  3001               	movlw	1
   603  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   604  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   605  07E5  07AE               	addwf	main@seconds,f
   606  07E6  1803               	skipnc
   607  07E7  0AAF               	incf	main@seconds+1,f
   608  07E8  3000               	movlw	0
   609  07E9  07AF               	addwf	main@seconds+1,f
   610  07EA  2F75               	goto	l788
   611  07EB  120A  118A  2800   	ljmp	start
   612  07EE                     __end_of_main:
   613                           
   614                           	psect	text1
   615  06B8                     __ptext1:	
   616 ;; *************** function _declarePort *****************
   617 ;; Defined at:
   618 ;;		line 70 in file "newmain.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _declarePort
   647  06B8                     _declarePort:
   648  06B8                     l720:	
   649                           ;incstack = 0
   650                           ; Regs used in _declarePort: [wreg+status,2]
   651                           
   652                           
   653                           ;newmain.c: 71:     ANSEL = ANSELH = 0;
   654  06B8  1683               	bsf	3,5	;RP0=1, select bank3
   655  06B9  1703               	bsf	3,6	;RP1=1, select bank3
   656  06BA  0189               	clrf	9	;volatile
   657  06BB  0188               	clrf	8	;volatile
   658                           
   659                           ;newmain.c: 72:     TRISD = 0;
   660  06BC  1683               	bsf	3,5	;RP0=1, select bank1
   661  06BD  1303               	bcf	3,6	;RP1=0, select bank1
   662  06BE  0188               	clrf	8	;volatile
   663                           
   664                           ;newmain.c: 73:     TRISC = 0;
   665  06BF  0187               	clrf	7	;volatile
   666                           
   667                           ;newmain.c: 74:     PORTC = 0;
   668  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   669  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   670  06C2  0187               	clrf	7	;volatile
   671  06C3                     l722:
   672                           
   673                           ;newmain.c: 75:     PORTD = 0xff;
   674  06C3  30FF               	movlw	255
   675  06C4  0088               	movwf	8	;volatile
   676  06C5                     l32:
   677  06C5  0008               	return
   678  06C6                     __end_of_declarePort:
   679                           
   680                           	psect	text2
   681  06D9                     __ptext2:	
   682 ;; *************** function ___lwmod *****************
   683 ;; Defined at:
   684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  divisor         2    0[COMMON] unsigned int 
   687 ;;  dividend        2    2[COMMON] unsigned int 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  counter         1    5[COMMON] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2    0[COMMON] unsigned int 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         4       0       0       0       0
   700 ;;      Locals:         1       0       0       0       0
   701 ;;      Temps:          1       0       0       0       0
   702 ;;      Totals:         6       0       0       0       0
   703 ;;Total ram usage:        6 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function ___lwmod
   714  06D9                     ___lwmod:
   715  06D9                     l750:	
   716                           ;incstack = 0
   717                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   718                           
   719  06D9  0870               	movf	___lwmod@divisor,w
   720  06DA  0471               	iorwf	___lwmod@divisor+1,w
   721  06DB  1903               	btfsc	3,2
   722  06DC  2EDE               	goto	u241
   723  06DD  2EDF               	goto	u240
   724  06DE                     u241:
   725  06DE  2F0E               	goto	l768
   726  06DF                     u240:
   727  06DF                     l752:
   728  06DF  01F5               	clrf	___lwmod@counter
   729  06E0  0AF5               	incf	___lwmod@counter,f
   730  06E1  2EED               	goto	l758
   731  06E2                     l754:
   732  06E2  3001               	movlw	1
   733  06E3                     u255:
   734  06E3  1003               	clrc
   735  06E4  0DF0               	rlf	___lwmod@divisor,f
   736  06E5  0DF1               	rlf	___lwmod@divisor+1,f
   737  06E6  3EFF               	addlw	-1
   738  06E7  1D03               	skipz
   739  06E8  2EE3               	goto	u255
   740  06E9                     l756:
   741  06E9  3001               	movlw	1
   742  06EA  00F4               	movwf	??___lwmod
   743  06EB  0874               	movf	??___lwmod,w
   744  06EC  07F5               	addwf	___lwmod@counter,f
   745  06ED                     l758:
   746  06ED  1FF1               	btfss	___lwmod@divisor+1,7
   747  06EE  2EF0               	goto	u261
   748  06EF  2EF1               	goto	u260
   749  06F0                     u261:
   750  06F0  2EE2               	goto	l754
   751  06F1                     u260:
   752  06F1                     l760:
   753  06F1  0871               	movf	___lwmod@divisor+1,w
   754  06F2  0273               	subwf	___lwmod@dividend+1,w
   755  06F3  1D03               	skipz
   756  06F4  2EF7               	goto	u275
   757  06F5  0870               	movf	___lwmod@divisor,w
   758  06F6  0272               	subwf	___lwmod@dividend,w
   759  06F7                     u275:
   760  06F7  1C03               	skipc
   761  06F8  2EFA               	goto	u271
   762  06F9  2EFB               	goto	u270
   763  06FA                     u271:
   764  06FA  2F01               	goto	l764
   765  06FB                     u270:
   766  06FB                     l762:
   767  06FB  0870               	movf	___lwmod@divisor,w
   768  06FC  02F2               	subwf	___lwmod@dividend,f
   769  06FD  0871               	movf	___lwmod@divisor+1,w
   770  06FE  1C03               	skipc
   771  06FF  03F3               	decf	___lwmod@dividend+1,f
   772  0700  02F3               	subwf	___lwmod@dividend+1,f
   773  0701                     l764:
   774  0701  3001               	movlw	1
   775  0702                     u285:
   776  0702  1003               	clrc
   777  0703  0CF1               	rrf	___lwmod@divisor+1,f
   778  0704  0CF0               	rrf	___lwmod@divisor,f
   779  0705  3EFF               	addlw	-1
   780  0706  1D03               	skipz
   781  0707  2F02               	goto	u285
   782  0708                     l766:
   783  0708  3001               	movlw	1
   784  0709  02F5               	subwf	___lwmod@counter,f
   785  070A  1D03               	btfss	3,2
   786  070B  2F0D               	goto	u291
   787  070C  2F0E               	goto	u290
   788  070D                     u291:
   789  070D  2EF1               	goto	l760
   790  070E                     u290:
   791  070E                     l768:
   792  070E  0873               	movf	___lwmod@dividend+1,w
   793  070F  00F1               	movwf	?___lwmod+1
   794  0710  0872               	movf	___lwmod@dividend,w
   795  0711  00F0               	movwf	?___lwmod
   796  0712                     l400:
   797  0712  0008               	return
   798  0713                     __end_of___lwmod:
   799                           
   800                           	psect	text3
   801  0713                     __ptext3:	
   802 ;; *************** function ___lwdiv *****************
   803 ;; Defined at:
   804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  divisor         2    0[COMMON] unsigned int 
   807 ;;  dividend        2    2[COMMON] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  quotient        2    5[COMMON] unsigned int 
   810 ;;  counter         1    7[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  2    0[COMMON] unsigned int 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         4       0       0       0       0
   821 ;;      Locals:         3       0       0       0       0
   822 ;;      Temps:          1       0       0       0       0
   823 ;;      Totals:         8       0       0       0       0
   824 ;;Total ram usage:        8 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function ___lwdiv
   835  0713                     ___lwdiv:
   836  0713                     l724:	
   837                           ;incstack = 0
   838                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   839                           
   840  0713  01F5               	clrf	___lwdiv@quotient
   841  0714  01F6               	clrf	___lwdiv@quotient+1
   842  0715                     l726:
   843  0715  0870               	movf	___lwdiv@divisor,w
   844  0716  0471               	iorwf	___lwdiv@divisor+1,w
   845  0717  1903               	btfsc	3,2
   846  0718  2F1A               	goto	u171
   847  0719  2F1B               	goto	u170
   848  071A                     u171:
   849  071A  2F52               	goto	l746
   850  071B                     u170:
   851  071B                     l728:
   852  071B  01F7               	clrf	___lwdiv@counter
   853  071C  0AF7               	incf	___lwdiv@counter,f
   854  071D  2F29               	goto	l734
   855  071E                     l730:
   856  071E  3001               	movlw	1
   857  071F                     u185:
   858  071F  1003               	clrc
   859  0720  0DF0               	rlf	___lwdiv@divisor,f
   860  0721  0DF1               	rlf	___lwdiv@divisor+1,f
   861  0722  3EFF               	addlw	-1
   862  0723  1D03               	skipz
   863  0724  2F1F               	goto	u185
   864  0725                     l732:
   865  0725  3001               	movlw	1
   866  0726  00F4               	movwf	??___lwdiv
   867  0727  0874               	movf	??___lwdiv,w
   868  0728  07F7               	addwf	___lwdiv@counter,f
   869  0729                     l734:
   870  0729  1FF1               	btfss	___lwdiv@divisor+1,7
   871  072A  2F2C               	goto	u191
   872  072B  2F2D               	goto	u190
   873  072C                     u191:
   874  072C  2F1E               	goto	l730
   875  072D                     u190:
   876  072D                     l736:
   877  072D  3001               	movlw	1
   878  072E                     u205:
   879  072E  1003               	clrc
   880  072F  0DF5               	rlf	___lwdiv@quotient,f
   881  0730  0DF6               	rlf	___lwdiv@quotient+1,f
   882  0731  3EFF               	addlw	-1
   883  0732  1D03               	skipz
   884  0733  2F2E               	goto	u205
   885  0734  0871               	movf	___lwdiv@divisor+1,w
   886  0735  0273               	subwf	___lwdiv@dividend+1,w
   887  0736  1D03               	skipz
   888  0737  2F3A               	goto	u215
   889  0738  0870               	movf	___lwdiv@divisor,w
   890  0739  0272               	subwf	___lwdiv@dividend,w
   891  073A                     u215:
   892  073A  1C03               	skipc
   893  073B  2F3D               	goto	u211
   894  073C  2F3E               	goto	u210
   895  073D                     u211:
   896  073D  2F45               	goto	l742
   897  073E                     u210:
   898  073E                     l738:
   899  073E  0870               	movf	___lwdiv@divisor,w
   900  073F  02F2               	subwf	___lwdiv@dividend,f
   901  0740  0871               	movf	___lwdiv@divisor+1,w
   902  0741  1C03               	skipc
   903  0742  03F3               	decf	___lwdiv@dividend+1,f
   904  0743  02F3               	subwf	___lwdiv@dividend+1,f
   905  0744                     l740:
   906  0744  1475               	bsf	___lwdiv@quotient,0
   907  0745                     l742:
   908  0745  3001               	movlw	1
   909  0746                     u225:
   910  0746  1003               	clrc
   911  0747  0CF1               	rrf	___lwdiv@divisor+1,f
   912  0748  0CF0               	rrf	___lwdiv@divisor,f
   913  0749  3EFF               	addlw	-1
   914  074A  1D03               	skipz
   915  074B  2F46               	goto	u225
   916  074C                     l744:
   917  074C  3001               	movlw	1
   918  074D  02F7               	subwf	___lwdiv@counter,f
   919  074E  1D03               	btfss	3,2
   920  074F  2F51               	goto	u231
   921  0750  2F52               	goto	u230
   922  0751                     u231:
   923  0751  2F2D               	goto	l736
   924  0752                     u230:
   925  0752                     l746:
   926  0752  0876               	movf	___lwdiv@quotient+1,w
   927  0753  00F1               	movwf	?___lwdiv+1
   928  0754  0875               	movf	___lwdiv@quotient,w
   929  0755  00F0               	movwf	?___lwdiv
   930  0756                     l390:
   931  0756  0008               	return
   932  0757                     __end_of___lwdiv:
   933  007E                     btemp	set	126	;btemp
   934  007E                     wtemp0	set	126
   935                           
   936                           	psect	config
   937                           
   938                           ;Config register CONFIG1 @ 0x2007
   939                           ;	Oscillator Selection bits
   940                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   941                           ;	Watchdog Timer Enable bit
   942                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   943                           ;	Power-up Timer Enable bit
   944                           ;	PWRTE = OFF, PWRT disabled
   945                           ;	RE3/MCLR pin function select bit
   946                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   947                           ;	Code Protection bit
   948                           ;	CP = OFF, Program memory code protection is disabled
   949                           ;	Data Code Protection bit
   950                           ;	CPD = OFF, Data memory code protection is disabled
   951                           ;	Brown Out Reset Selection bits
   952                           ;	BOREN = OFF, BOR disabled
   953                           ;	Internal External Switchover bit
   954                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   955                           ;	Fail-Safe Clock Monitor Enabled bit
   956                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   957                           ;	Low Voltage Programming Enable bit
   958                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   959                           ;	In-Circuit Debugger Mode bit
   960                           ;	DEBUG = 0x1, unprogrammed default
   961  2007                     	org	8199
   962  2007  20F2               	dw	8434
   963                           
   964                           ;Config register CONFIG2 @ 0x2008
   965                           ;	Brown-out Reset Selection bit
   966                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   967                           ;	Flash Program Memory Self Write Enable bits
   968                           ;	WRT = OFF, Write protection off
   969  2008                     	org	8200
   970  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     16      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0     838
                                              8 COMMON     4     4      0
                                              0 BANK0     16    16      0
                            ___lwdiv
                            ___lwmod
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
   _declarePort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 31 02:02:10 2021

                      pc 0002                       l32 06C5                       fsr 0004  
                    l400 0712                      l390 0756                      l720 06B8  
                    l800 07B4                      l730 071E                      l722 06C3  
                    l810 07D1                      l802 07B6                      l740 0744  
                    l732 0725                      l724 0713                      l812 07D9  
                    l804 07BC                      l742 0745                      l734 0729  
                    l726 0715                      l750 06D9                      l814 07E2  
                    l806 07C4                      l744 074C                      l736 072D  
                    l728 071B                      l760 06F1                      l752 06DF  
                    l808 07CB                      l738 073E                      l746 0752  
                    l762 06FB                      l754 06E2                      l764 0701  
                    l756 06E9                      l780 0771                      l772 0757  
                    l766 0708                      l758 06ED                      l790 077C  
                    l782 0771                      l774 075C                      l768 070E  
                    l792 077E                      l784 0771                      l776 0771  
                    l794 0787                      l786 0775                      l778 0771  
                    l796 07AE                      l788 0775                      l798 07B2  
                    u210 073E                      u211 073D                      u300 0764  
                    u205 072E                      u230 0752                      u310 077C  
                    u231 0751                      u215 073A                      u311 077B  
                    u240 06DF                      u320 0787                      u225 0746  
                    u241 06DE                      u321 0786                      u170 071B  
                    u171 071A                      u260 06F1                      u261 06F0  
                    u190 072D                      u270 06FB                      u191 072C  
                    u271 06FA                      u255 06E3                      u185 071F  
                    u337 07C0                      u290 070E                      u291 070D  
                    u275 06F7                      u347 07D5                      u285 0702  
                    u357 07DD                      fsr0 0004                      indf 0000  
            main@seconds 002E                     _main 0757                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0757          __end_of___lwmod 0713                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
   __size_of_declarePort 000E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0078                   _ANSELH 0189                ??___lwdiv 0074  
              ??___lwmod 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06AE               __pmaintext 0757           main@listNumber 0020  
                ___lwdiv 0713                  ___lwmod 06D9                  __ptext1 06B8  
                __ptext2 06D9                  __ptext3 0713            ??_declarePort 0070  
   end_of_initialization 07FC      __end_of_declarePort 06C6      start_initialization 07EE  
             init_fetch0 06C6              __pdataBANK0 0030              _declarePort 06B8  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070         ___lwdiv@quotient 0075  
              main@F1266 0030                main@dozen 002A         __size_of___lwdiv 0044  
       __size_of___lwmod 003A          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0097                 main@unit 002C             ?_declarePort 0070  
               init_ram0 06CA         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
