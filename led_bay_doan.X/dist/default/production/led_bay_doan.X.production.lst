

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 10 08:21:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataBANK0
   207  076A                     __pidataBANK0:
   208                           
   209                           ;initializer for main@F1266
   210  076A  34C0               	retlw	192
   211  076B  34F9               	retlw	249
   212  076C  34A4               	retlw	164
   213  076D  34B0               	retlw	176
   214  076E  3499               	retlw	153
   215  076F  3492               	retlw	146
   216  0770  3482               	retlw	130
   217  0771  34F8               	retlw	248
   218  0772  3480               	retlw	128
   219  0773  3490               	retlw	144
   220  0007                     _PORTC	set	7
   221  0008                     _PORTD	set	8
   222  0087                     _TRISC	set	135
   223  0088                     _TRISD	set	136
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           	psect	cinit
   228  07EE                     start_initialization:	
   229                           ; #config settings
   230                           
   231  07EE                     __initialization:
   232                           
   233                           ; Initialize objects allocated to BANK0
   234  07EE  1383               	bcf	3,7	;select IRP bank0
   235  07EF  3038               	movlw	low (__pdataBANK0+10)
   236  07F0  00FD               	movwf	btemp+-1
   237  07F1  3007               	movlw	high __pidataBANK0
   238  07F2  00FE               	movwf	btemp
   239  07F3  306A               	movlw	low __pidataBANK0
   240  07F4  00FF               	movwf	btemp+1
   241  07F5  302E               	movlw	low __pdataBANK0
   242  07F6  0084               	movwf	4
   243  07F7  120A  118A  2785  120A  118A  	fcall	init_ram0
   244  07FC                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  07FC                     __end_of__initialization:
   248  07FC  0183               	clrf	3
   249  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	dataBANK0
   252  002E                     __pdataBANK0:
   253  002E                     main@F1266:
   254  002E                     	ds	10
   255                           
   256                           	psect	inittext
   257  0781                     init_fetch0:	
   258                           ;	Called with low address in FSR and high address in W
   259                           
   260  0781  087E               	movf	btemp,w
   261  0782  008A               	movwf	10
   262  0783  087F               	movf	btemp+1,w
   263  0784  0082               	movwf	2
   264  0785                     init_ram0:	
   265                           ;Called with:
   266                           ;	high address of idata address in btemp 
   267                           ;	low address of idata address in btemp+1 
   268                           ;	low address of data in FSR
   269                           ;	high address + 1 of data in btemp-1
   270                           
   271  0785  120A  118A  2781  120A  118A  	fcall	init_fetch0
   272  078A  0080               	movwf	0
   273  078B  0A84               	incf	4,f
   274  078C  0804               	movf	4,w
   275  078D  067D               	xorwf	btemp+-1,w
   276  078E  1903               	btfsc	3,2
   277  078F  3400               	retlw	0
   278  0790  0AFF               	incf	btemp+1,f
   279  0791  1903               	btfsc	3,2
   280  0792  0AFE               	incf	btemp,f
   281  0793  2F85               	goto	init_ram0
   282                           
   283                           	psect	cstackCOMMON
   284  0070                     __pcstackCOMMON:
   285  0070                     ?_declarePort:
   286  0070                     ??_declarePort:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_main:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	4
   298                           
   299                           	psect	cstackBANK0
   300  0020                     __pcstackBANK0:
   301  0020                     main@listNumber:
   302                           
   303                           ; 10 bytes @ 0x0
   304  0020                     	ds	10
   305  002A                     main@j:
   306                           
   307                           ; 2 bytes @ 0xA
   308  002A                     	ds	2
   309  002C                     main@i:
   310                           
   311                           ; 2 bytes @ 0xC
   312  002C                     	ds	2
   313                           
   314                           	psect	maintext
   315  0794                     __pmaintext:	
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 38 in file "newmain.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  listNumber     10    0[BANK0 ] unsigned char [10]
   326 ;;  i               2   12[BANK0 ] unsigned int 
   327 ;;  j               2   10[BANK0 ] unsigned int 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0      14       0       0       0
   339 ;;      Temps:          4       0       0       0       0
   340 ;;      Totals:         4      14       0       0       0
   341 ;;Total ram usage:       18 bytes
   342 ;; Hardware stack levels required when called: 1
   343 ;; This function calls:
   344 ;;		_declarePort
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _main
   352  0794                     _main:
   353  0794                     l650:	
   354                           ;incstack = 0
   355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   356                           
   357                           
   358                           ;newmain.c: 39:     declarePort();
   359  0794  120A  118A  2774  120A  118A  	fcall	_declarePort
   360  0799                     l652:
   361                           
   362                           ;newmain.c: 40:     unsigned char listNumber[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0
      +                          xF8,0x80,0x90};
   363  0799  3020               	movlw	main@listNumber& (0+255)
   364  079A  0084               	movwf	4
   365  079B  302E               	movlw	low main@F1266
   366  079C  00F0               	movwf	??_main
   367  079D  0804               	movf	4,w
   368  079E  00F1               	movwf	??_main+1
   369  079F  300A               	movlw	10
   370  07A0  00F2               	movwf	??_main+2
   371  07A1                     u40:
   372  07A1  0870               	movf	??_main,w
   373  07A2  0084               	movwf	4
   374  07A3  1383               	bcf	3,7	;select IRP bank0
   375  07A4  0800               	movf	0,w
   376  07A5  00F3               	movwf	??_main+3
   377  07A6  0AF0               	incf	??_main,f
   378  07A7  0871               	movf	??_main+1,w
   379  07A8  0084               	movwf	4
   380  07A9  0873               	movf	??_main+3,w
   381  07AA  0080               	movwf	0
   382  07AB  0AF1               	incf	??_main+1,f
   383  07AC  0BF2               	decfsz	??_main+2,f
   384  07AD  2FA1               	goto	u40
   385  07AE                     l654:
   386  07AE                     l656:
   387  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   388  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   389  07B0  01AA               	clrf	main@j
   390  07B1  01AB               	clrf	main@j+1
   391                           
   392                           ;newmain.c: 42:     while(j < 10) {
   393  07B2  2FE2               	goto	l23
   394  07B3                     l658:
   395                           
   396                           ;newmain.c: 43:         PORTD = listNumber[j];
   397  07B3  082A               	movf	main@j,w
   398  07B4  3E20               	addlw	(low (main@listNumber| 0))& (0+255)
   399  07B5  0084               	movwf	4
   400  07B6  1383               	bcf	3,7	;select IRP bank0
   401  07B7  0800               	movf	0,w
   402  07B8  0088               	movwf	8	;volatile
   403  07B9                     l660:
   404                           
   405                           ;newmain.c: 44:         i = 0;
   406  07B9  01AC               	clrf	main@i
   407  07BA  01AD               	clrf	main@i+1
   408                           
   409                           ;newmain.c: 45:         while(i < 10) {
   410  07BB  2FD3               	goto	l668
   411  07BC                     l662:
   412                           
   413                           ;newmain.c: 46:             PORTC = listNumber[i];
   414  07BC  082C               	movf	main@i,w
   415  07BD  3E20               	addlw	(low (main@listNumber| 0))& (0+255)
   416  07BE  0084               	movwf	4
   417  07BF  1383               	bcf	3,7	;select IRP bank0
   418  07C0  0800               	movf	0,w
   419  07C1  0087               	movwf	7	;volatile
   420  07C2                     l664:
   421                           
   422                           ;newmain.c: 47:             _delay((unsigned long)((50)*(4000000/4000.0)));
   423  07C2  3041               	movlw	65
   424  07C3  00F1               	movwf	??_main+1
   425  07C4  30EE               	movlw	238
   426  07C5  00F0               	movwf	??_main
   427  07C6                     u77:
   428  07C6  0BF0               	decfsz	??_main,f
   429  07C7  2FC6               	goto	u77
   430  07C8  0BF1               	decfsz	??_main+1,f
   431  07C9  2FC6               	goto	u77
   432  07CA  0000               	nop
   433  07CB                     l666:
   434                           
   435                           ;newmain.c: 48:             i++;
   436  07CB  3001               	movlw	1
   437  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   438  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   439  07CE  07AC               	addwf	main@i,f
   440  07CF  1803               	skipnc
   441  07D0  0AAD               	incf	main@i+1,f
   442  07D1  3000               	movlw	0
   443  07D2  07AD               	addwf	main@i+1,f
   444  07D3                     l668:
   445                           
   446                           ;newmain.c: 45:         while(i < 10) {
   447  07D3  3000               	movlw	0
   448  07D4  022D               	subwf	main@i+1,w
   449  07D5  300A               	movlw	10
   450  07D6  1903               	skipnz
   451  07D7  022C               	subwf	main@i,w
   452  07D8  1C03               	skipc
   453  07D9  2FDB               	goto	u51
   454  07DA  2FDC               	goto	u50
   455  07DB                     u51:
   456  07DB  2FBC               	goto	l662
   457  07DC                     u50:
   458  07DC                     l670:
   459                           
   460                           ;newmain.c: 50:         j++;
   461  07DC  3001               	movlw	1
   462  07DD  07AA               	addwf	main@j,f
   463  07DE  1803               	skipnc
   464  07DF  0AAB               	incf	main@j+1,f
   465  07E0  3000               	movlw	0
   466  07E1  07AB               	addwf	main@j+1,f
   467  07E2                     l23:	
   468                           ;newmain.c: 51:     }
   469                           
   470                           
   471                           ;newmain.c: 42:     while(j < 10) {
   472  07E2  3000               	movlw	0
   473  07E3  022B               	subwf	main@j+1,w
   474  07E4  300A               	movlw	10
   475  07E5  1903               	skipnz
   476  07E6  022A               	subwf	main@j,w
   477  07E7  1C03               	skipc
   478  07E8  2FEA               	goto	u61
   479  07E9  2FEB               	goto	u60
   480  07EA                     u61:
   481  07EA  2FB3               	goto	l658
   482  07EB                     u60:
   483  07EB                     l29:
   484  07EB  120A  118A  2800   	ljmp	start
   485  07EE                     __end_of_main:
   486                           
   487                           	psect	text1
   488  0774                     __ptext1:	
   489 ;; *************** function _declarePort *****************
   490 ;; Defined at:
   491 ;;		line 54 in file "newmain.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		status,2
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _declarePort
   520  0774                     _declarePort:
   521  0774                     l648:	
   522                           ;incstack = 0
   523                           ; Regs used in _declarePort: [status,2]
   524                           
   525                           
   526                           ;newmain.c: 55:     ANSEL = ANSELH = 0;
   527  0774  1683               	bsf	3,5	;RP0=1, select bank3
   528  0775  1703               	bsf	3,6	;RP1=1, select bank3
   529  0776  0189               	clrf	9	;volatile
   530  0777  0188               	clrf	8	;volatile
   531                           
   532                           ;newmain.c: 56:     TRISD = 0;
   533  0778  1683               	bsf	3,5	;RP0=1, select bank1
   534  0779  1303               	bcf	3,6	;RP1=0, select bank1
   535  077A  0188               	clrf	8	;volatile
   536                           
   537                           ;newmain.c: 57:     TRISC = 0;
   538  077B  0187               	clrf	7	;volatile
   539                           
   540                           ;newmain.c: 58:     PORTC = 0;
   541  077C  1283               	bcf	3,5	;RP0=0, select bank0
   542  077D  1303               	bcf	3,6	;RP1=0, select bank0
   543  077E  0187               	clrf	7	;volatile
   544                           
   545                           ;newmain.c: 59:     PORTD = 0;
   546  077F  0188               	clrf	8	;volatile
   547  0780                     l32:
   548  0780  0008               	return
   549  0781                     __end_of_declarePort:
   550  007E                     btemp	set	126	;btemp
   551  007E                     wtemp0	set	126
   552                           
   553                           	psect	config
   554                           
   555                           ;Config register CONFIG1 @ 0x2007
   556                           ;	Oscillator Selection bits
   557                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   558                           ;	Watchdog Timer Enable bit
   559                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   560                           ;	Power-up Timer Enable bit
   561                           ;	PWRTE = OFF, PWRT disabled
   562                           ;	RE3/MCLR pin function select bit
   563                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   564                           ;	Code Protection bit
   565                           ;	CP = OFF, Program memory code protection is disabled
   566                           ;	Data Code Protection bit
   567                           ;	CPD = OFF, Data memory code protection is disabled
   568                           ;	Brown Out Reset Selection bits
   569                           ;	BOREN = OFF, BOR disabled
   570                           ;	Internal External Switchover bit
   571                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   572                           ;	Fail-Safe Clock Monitor Enabled bit
   573                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   574                           ;	Low Voltage Programming Enable bit
   575                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   576                           ;	In-Circuit Debugger Mode bit
   577                           ;	DEBUG = 0x1, unprogrammed default
   578  2007                     	org	8199
   579  2007  20F2               	dw	8434
   580                           
   581                           ;Config register CONFIG2 @ 0x2008
   582                           ;	Brown-out Reset Selection bit
   583                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   584                           ;	Flash Program Memory Self Write Enable bits
   585                           ;	WRT = OFF, Write protection off
   586  2008                     	org	8200
   587  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     14      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0     140
                                              0 COMMON     4     4      0
                                              0 BANK0     14    14      0
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 10 08:21:48 2021

                      pc 0002                       l23 07E2                       l32 0780  
                     l29 07EB                       u40 07A1                       u50 07DC  
                     u51 07DB                       u60 07EB                       u61 07EA  
                     u77 07C6                       fsr 0004                      l650 0794  
                    l660 07B9                      l652 0799                      l670 07DC  
                    l662 07BC                      l654 07AE                      l648 0774  
                    l664 07C2                      l656 07AE                      l666 07CB  
                    l658 07B3                      l668 07D3                      fsr0 0004  
                    indf 0000                     _main 0794                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088     __size_of_declarePort 000D                    main@i 002C  
                  main@j 002A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070                   _ANSELH 0189  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 076A               __pmaintext 0794  
         main@listNumber 0020                  __ptext1 0774            ??_declarePort 0070  
   end_of_initialization 07FC      __end_of_declarePort 0781      start_initialization 07EE  
             init_fetch0 0781              __pdataBANK0 002E              _declarePort 0774  
              ___latbits 0002            __pcstackBANK0 0020                main@F1266 002E  
          __size_of_main 005A             ?_declarePort 0070                 init_ram0 0785  
