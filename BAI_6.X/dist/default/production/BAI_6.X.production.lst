

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 13 00:49:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0007                     _PORTC	set	7
   205  0008                     _PORTD	set	8
   206  0032                     _RB2	set	50
   207  0031                     _RB1	set	49
   208  0030                     _RB0	set	48
   209  0095                     _WPUB	set	149
   210  0087                     _TRISC	set	135
   211  0088                     _TRISD	set	136
   212  040F                     _nRBPU	set	1039
   213  0432                     _TRISB2	set	1074
   214  0431                     _TRISB1	set	1073
   215  0430                     _TRISB0	set	1072
   216  0189                     _ANSELH	set	393
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  07FC                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FC                     __initialization:
   224  07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  07FC                     __end_of__initialization:
   228  07FC  0183               	clrf	3
   229  07FD  120A  118A  2F3B   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:
   233  0070                     ?_declarePort:
   234  0070                     ??_declarePort:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_flashLed:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_stateRace:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_stateCountUp:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     stateCountUp@times:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     stateRace@times:	
   253                           ; 2 bytes @ 0x0
   254                           
   255  0070                     flashLed@times:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 2 bytes @ 0x0
   260  0070                     	ds	2
   261  0072                     ??_flashLed:
   262  0072                     ??_stateRace:	
   263                           ; 1 bytes @ 0x2
   264                           
   265  0072                     ??_stateCountUp:	
   266                           ; 1 bytes @ 0x2
   267                           
   268                           
   269                           ; 1 bytes @ 0x2
   270  0072                     	ds	3
   271  0075                     stateCountUp@index:
   272  0075                     stateRace@index:	
   273                           ; 2 bytes @ 0x5
   274                           
   275                           
   276                           ; 2 bytes @ 0x5
   277  0075                     	ds	2
   278  0077                     stateCountUp@hold:
   279  0077                     stateRace@hold:	
   280                           ; 1 bytes @ 0x7
   281                           
   282                           
   283                           ; 1 bytes @ 0x7
   284  0077                     	ds	1
   285  0078                     ??_main:
   286                           
   287                           	psect	maintext
   288  073B                     __pmaintext:	
   289                           ; 1 bytes @ 0x8
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 41 in file "BTN_SINGLE_LED.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0
   312 ;;      Totals:         0       0       0       0       0
   313 ;;Total ram usage:        0 bytes
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		_declarePort
   317 ;;		_flashLed
   318 ;;		_stateCountUp
   319 ;;		_stateRace
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  073B                     _main:
   328  073B                     l776:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   331                           
   332                           
   333                           ;BTN_SINGLE_LED.c: 42:     declarePort();
   334  073B  120A  118A  26F3  120A  118A  	fcall	_declarePort
   335  0740                     l778:
   336                           
   337                           ;BTN_SINGLE_LED.c: 44:     {;BTN_SINGLE_LED.c: 45:        if(!RB0)
   338  0740  1283               	bcf	3,5	;RP0=0, select bank0
   339  0741  1303               	bcf	3,6	;RP1=0, select bank0
   340  0742  1806               	btfsc	6,0	;volatile
   341  0743  2F45               	goto	u141
   342  0744  2F46               	goto	u140
   343  0745                     u141:
   344  0745  2F50               	goto	l44
   345  0746                     u140:
   346  0746                     l780:
   347                           
   348                           ;BTN_SINGLE_LED.c: 46:        {;BTN_SINGLE_LED.c: 48:           flashLed(4);
   349  0746  3004               	movlw	4
   350  0747  00F0               	movwf	flashLed@times
   351  0748  3000               	movlw	0
   352  0749  00F1               	movwf	flashLed@times+1
   353  074A  120A  118A  270C  120A  118A  	fcall	_flashLed
   354                           
   355                           ;BTN_SINGLE_LED.c: 49:        }else if(!RB1) {
   356  074F  2F40               	goto	l778
   357  0750                     l44:
   358  0750  1886               	btfsc	6,1	;volatile
   359  0751  2F53               	goto	u151
   360  0752  2F54               	goto	u150
   361  0753                     u151:
   362  0753  2F5E               	goto	l46
   363  0754                     u150:
   364  0754                     l782:
   365                           
   366                           ;BTN_SINGLE_LED.c: 51:            stateRace(2);
   367  0754  3002               	movlw	2
   368  0755  00F0               	movwf	stateRace@times
   369  0756  3000               	movlw	0
   370  0757  00F1               	movwf	stateRace@times+1
   371  0758  120A  118A  2770  120A  118A  	fcall	_stateRace
   372                           
   373                           ;BTN_SINGLE_LED.c: 52:        }else if(!RB2) {
   374  075D  2F40               	goto	l778
   375  075E                     l46:
   376  075E  1906               	btfsc	6,2	;volatile
   377  075F  2F61               	goto	u161
   378  0760  2F62               	goto	u160
   379  0761                     u161:
   380  0761  2F6C               	goto	l45
   381  0762                     u160:
   382  0762                     l784:
   383                           
   384                           ;BTN_SINGLE_LED.c: 53:            stateCountUp(2);
   385  0762  3002               	movlw	2
   386  0763  00F0               	movwf	stateCountUp@times
   387  0764  3000               	movlw	0
   388  0765  00F1               	movwf	stateCountUp@times+1
   389  0766  120A  118A  27B1  120A  118A  	fcall	_stateCountUp
   390  076B  2F40               	goto	l778
   391  076C                     l45:
   392  076C  2F40               	goto	l778
   393  076D  120A  118A  2800   	ljmp	start
   394  0770                     __end_of_main:
   395                           
   396                           	psect	text1
   397  0770                     __ptext1:	
   398 ;; *************** function _stateRace *****************
   399 ;; Defined at:
   400 ;;		line 72 in file "BTN_SINGLE_LED.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  times           2    0[COMMON] unsigned int 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  index           2    5[COMMON] unsigned int 
   405 ;;  hold            1    7[COMMON] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         2       0       0       0       0
   416 ;;      Locals:         3       0       0       0       0
   417 ;;      Temps:          3       0       0       0       0
   418 ;;      Totals:         8       0       0       0       0
   419 ;;Total ram usage:        8 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _stateRace
   430  0770                     _stateRace:
   431  0770                     l744:	
   432                           ;incstack = 0
   433                           ; Regs used in _stateRace: [wreg+status,2+status,0]
   434                           
   435                           
   436                           ;BTN_SINGLE_LED.c: 73:     while(times--) {
   437  0770  2FA2               	goto	l756
   438  0771                     l746:
   439                           
   440                           ;BTN_SINGLE_LED.c: 74:         unsigned int index = 8;
   441  0771  3008               	movlw	8
   442  0772  00F5               	movwf	stateRace@index
   443  0773  3000               	movlw	0
   444  0774  00F6               	movwf	stateRace@index+1
   445                           
   446                           ;BTN_SINGLE_LED.c: 75:         unsigned char hold = 0x80;
   447  0775  3080               	movlw	128
   448  0776  00F2               	movwf	??_stateRace
   449  0777  0872               	movf	??_stateRace,w
   450  0778  00F7               	movwf	stateRace@hold
   451                           
   452                           ;BTN_SINGLE_LED.c: 76:         while(index--) {
   453  0779  2F91               	goto	l752
   454  077A                     l748:
   455                           
   456                           ;BTN_SINGLE_LED.c: 77:             PORTD = hold;
   457  077A  0877               	movf	stateRace@hold,w
   458  077B  1283               	bcf	3,5	;RP0=0, select bank0
   459  077C  1303               	bcf	3,6	;RP1=0, select bank0
   460  077D  0088               	movwf	8	;volatile
   461                           
   462                           ;BTN_SINGLE_LED.c: 78:             _delay((unsigned long)((300)*(4000000/4000.0)));
   463  077E  3002               	movlw	2
   464  077F  00F4               	movwf	??_stateRace+2
   465  0780  3086               	movlw	134
   466  0781  00F3               	movwf	??_stateRace+1
   467  0782  3099               	movlw	153
   468  0783  00F2               	movwf	??_stateRace
   469  0784                     u177:
   470  0784  0BF2               	decfsz	??_stateRace,f
   471  0785  2F84               	goto	u177
   472  0786  0BF3               	decfsz	??_stateRace+1,f
   473  0787  2F84               	goto	u177
   474  0788  0BF4               	decfsz	??_stateRace+2,f
   475  0789  2F84               	goto	u177
   476  078A                     l750:
   477                           
   478                           ;BTN_SINGLE_LED.c: 79:             hold = hold >> 1;
   479  078A  0877               	movf	stateRace@hold,w
   480  078B  00F2               	movwf	??_stateRace
   481  078C  1003               	clrc
   482  078D  0C72               	rrf	??_stateRace,w
   483  078E  00F3               	movwf	??_stateRace+1
   484  078F  0873               	movf	??_stateRace+1,w
   485  0790  00F7               	movwf	stateRace@hold
   486  0791                     l752:
   487                           
   488                           ;BTN_SINGLE_LED.c: 76:         while(index--) {
   489  0791  3001               	movlw	1
   490  0792  02F5               	subwf	stateRace@index,f
   491  0793  3000               	movlw	0
   492  0794  1C03               	skipc
   493  0795  03F6               	decf	stateRace@index+1,f
   494  0796  02F6               	subwf	stateRace@index+1,f
   495  0797  0A75               	incf	stateRace@index,w
   496  0798  1D03               	skipz
   497  0799  2F9E               	goto	u101
   498  079A  0A76               	incf	stateRace@index+1,w
   499  079B  1D03               	btfss	3,2
   500  079C  2F9E               	goto	u101
   501  079D  2F9F               	goto	u100
   502  079E                     u101:
   503  079E  2F7A               	goto	l748
   504  079F                     u100:
   505  079F                     l754:
   506                           
   507                           ;BTN_SINGLE_LED.c: 81:         PORTD = 0;
   508  079F  1283               	bcf	3,5	;RP0=0, select bank0
   509  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   510  07A1  0188               	clrf	8	;volatile
   511  07A2                     l756:
   512                           
   513                           ;BTN_SINGLE_LED.c: 73:     while(times--) {
   514  07A2  3001               	movlw	1
   515  07A3  02F0               	subwf	stateRace@times,f
   516  07A4  3000               	movlw	0
   517  07A5  1C03               	skipc
   518  07A6  03F1               	decf	stateRace@times+1,f
   519  07A7  02F1               	subwf	stateRace@times+1,f
   520  07A8  0A70               	incf	stateRace@times,w
   521  07A9  1D03               	skipz
   522  07AA  2FAF               	goto	u111
   523  07AB  0A71               	incf	stateRace@times+1,w
   524  07AC  1D03               	btfss	3,2
   525  07AD  2FAF               	goto	u111
   526  07AE  2FB0               	goto	u110
   527  07AF                     u111:
   528  07AF  2F71               	goto	l746
   529  07B0                     u110:
   530  07B0                     l69:
   531  07B0  0008               	return
   532  07B1                     __end_of_stateRace:
   533                           
   534                           	psect	text2
   535  07B1                     __ptext2:	
   536 ;; *************** function _stateCountUp *****************
   537 ;; Defined at:
   538 ;;		line 58 in file "BTN_SINGLE_LED.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  times           2    0[COMMON] unsigned int 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  index           2    5[COMMON] unsigned int 
   543 ;;  hold            1    7[COMMON] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         2       0       0       0       0
   554 ;;      Locals:         3       0       0       0       0
   555 ;;      Temps:          3       0       0       0       0
   556 ;;      Totals:         8       0       0       0       0
   557 ;;Total ram usage:        8 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _stateCountUp
   568  07B1                     _stateCountUp:
   569  07B1                     l758:	
   570                           ;incstack = 0
   571                           ; Regs used in _stateCountUp: [wreg+status,2+status,0]
   572                           
   573                           
   574                           ;BTN_SINGLE_LED.c: 59:     while(times--) {
   575  07B1  2FED               	goto	l774
   576  07B2                     l760:
   577                           
   578                           ;BTN_SINGLE_LED.c: 60:         unsigned int index = 8;
   579  07B2  3008               	movlw	8
   580  07B3  00F5               	movwf	stateCountUp@index
   581  07B4  3000               	movlw	0
   582  07B5  00F6               	movwf	stateCountUp@index+1
   583  07B6                     l762:
   584                           
   585                           ;BTN_SINGLE_LED.c: 61:         unsigned char hold = 0x00;
   586  07B6  01F7               	clrf	stateCountUp@hold
   587                           
   588                           ;BTN_SINGLE_LED.c: 62:         while(index--) {
   589  07B7  2FD0               	goto	l56
   590  07B8                     l764:
   591                           
   592                           ;BTN_SINGLE_LED.c: 63:             hold = (hold >> 1) | 0x80;
   593  07B8  0877               	movf	stateCountUp@hold,w
   594  07B9  00F2               	movwf	??_stateCountUp
   595  07BA  1003               	clrc
   596  07BB  0C72               	rrf	??_stateCountUp,w
   597  07BC  3880               	iorlw	128
   598  07BD  00F3               	movwf	??_stateCountUp+1
   599  07BE  0873               	movf	??_stateCountUp+1,w
   600  07BF  00F7               	movwf	stateCountUp@hold
   601  07C0                     l766:
   602                           
   603                           ;BTN_SINGLE_LED.c: 64:             PORTD = hold;
   604  07C0  0877               	movf	stateCountUp@hold,w
   605  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   606  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   607  07C3  0088               	movwf	8	;volatile
   608  07C4                     l768:
   609                           
   610                           ;BTN_SINGLE_LED.c: 65:             _delay((unsigned long)((300)*(4000000/4000.0)));
   611  07C4  3002               	movlw	2
   612  07C5  00F4               	movwf	??_stateCountUp+2
   613  07C6  3086               	movlw	134
   614  07C7  00F3               	movwf	??_stateCountUp+1
   615  07C8  3099               	movlw	153
   616  07C9  00F2               	movwf	??_stateCountUp
   617  07CA                     u187:
   618  07CA  0BF2               	decfsz	??_stateCountUp,f
   619  07CB  2FCA               	goto	u187
   620  07CC  0BF3               	decfsz	??_stateCountUp+1,f
   621  07CD  2FCA               	goto	u187
   622  07CE  0BF4               	decfsz	??_stateCountUp+2,f
   623  07CF  2FCA               	goto	u187
   624  07D0                     l56:	
   625                           ;BTN_SINGLE_LED.c: 66:         }
   626                           
   627                           
   628                           ;BTN_SINGLE_LED.c: 62:         while(index--) {
   629  07D0  3001               	movlw	1
   630  07D1  02F5               	subwf	stateCountUp@index,f
   631  07D2  3000               	movlw	0
   632  07D3  1C03               	skipc
   633  07D4  03F6               	decf	stateCountUp@index+1,f
   634  07D5  02F6               	subwf	stateCountUp@index+1,f
   635  07D6  0A75               	incf	stateCountUp@index,w
   636  07D7  1D03               	skipz
   637  07D8  2FDD               	goto	u121
   638  07D9  0A76               	incf	stateCountUp@index+1,w
   639  07DA  1D03               	btfss	3,2
   640  07DB  2FDD               	goto	u121
   641  07DC  2FDE               	goto	u120
   642  07DD                     u121:
   643  07DD  2FB8               	goto	l764
   644  07DE                     u120:
   645  07DE                     l770:
   646                           
   647                           ;BTN_SINGLE_LED.c: 67:         PORTD = 0;
   648  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   649  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   650  07E0  0188               	clrf	8	;volatile
   651  07E1                     l772:
   652                           
   653                           ;BTN_SINGLE_LED.c: 68:         _delay((unsigned long)((300)*(4000000/4000.0)));
   654  07E1  3002               	movlw	2
   655  07E2  00F4               	movwf	??_stateCountUp+2
   656  07E3  3086               	movlw	134
   657  07E4  00F3               	movwf	??_stateCountUp+1
   658  07E5  3099               	movlw	153
   659  07E6  00F2               	movwf	??_stateCountUp
   660  07E7                     u197:
   661  07E7  0BF2               	decfsz	??_stateCountUp,f
   662  07E8  2FE7               	goto	u197
   663  07E9  0BF3               	decfsz	??_stateCountUp+1,f
   664  07EA  2FE7               	goto	u197
   665  07EB  0BF4               	decfsz	??_stateCountUp+2,f
   666  07EC  2FE7               	goto	u197
   667  07ED                     l774:
   668                           
   669                           ;BTN_SINGLE_LED.c: 59:     while(times--) {
   670  07ED  3001               	movlw	1
   671  07EE  02F0               	subwf	stateCountUp@times,f
   672  07EF  3000               	movlw	0
   673  07F0  1C03               	skipc
   674  07F1  03F1               	decf	stateCountUp@times+1,f
   675  07F2  02F1               	subwf	stateCountUp@times+1,f
   676  07F3  0A70               	incf	stateCountUp@times,w
   677  07F4  1D03               	skipz
   678  07F5  2FFA               	goto	u131
   679  07F6  0A71               	incf	stateCountUp@times+1,w
   680  07F7  1D03               	btfss	3,2
   681  07F8  2FFA               	goto	u131
   682  07F9  2FFB               	goto	u130
   683  07FA                     u131:
   684  07FA  2FB2               	goto	l760
   685  07FB                     u130:
   686  07FB                     l60:
   687  07FB  0008               	return
   688  07FC                     __end_of_stateCountUp:
   689                           
   690                           	psect	text3
   691  070C                     __ptext3:	
   692 ;; *************** function _flashLed *****************
   693 ;; Defined at:
   694 ;;		line 85 in file "BTN_SINGLE_LED.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  times           2    0[COMMON] unsigned int 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         2       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          3       0       0       0       0
   711 ;;      Totals:         5       0       0       0       0
   712 ;;Total ram usage:        5 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _flashLed
   723  070C                     _flashLed:
   724  070C                     l734:	
   725                           ;incstack = 0
   726                           ; Regs used in _flashLed: [wreg+status,2+status,0]
   727                           
   728                           
   729                           ;BTN_SINGLE_LED.c: 86:     while(times--) {
   730  070C  2F2C               	goto	l742
   731  070D                     l736:
   732                           
   733                           ;BTN_SINGLE_LED.c: 87:         PORTD = 0xff;
   734  070D  30FF               	movlw	255
   735  070E  1283               	bcf	3,5	;RP0=0, select bank0
   736  070F  1303               	bcf	3,6	;RP1=0, select bank0
   737  0710  0088               	movwf	8	;volatile
   738                           
   739                           ;BTN_SINGLE_LED.c: 88:         _delay((unsigned long)((300)*(4000000/4000.0)));
   740  0711  3002               	movlw	2
   741  0712  00F4               	movwf	??_flashLed+2
   742  0713  3086               	movlw	134
   743  0714  00F3               	movwf	??_flashLed+1
   744  0715  3099               	movlw	153
   745  0716  00F2               	movwf	??_flashLed
   746  0717                     u207:
   747  0717  0BF2               	decfsz	??_flashLed,f
   748  0718  2F17               	goto	u207
   749  0719  0BF3               	decfsz	??_flashLed+1,f
   750  071A  2F17               	goto	u207
   751  071B  0BF4               	decfsz	??_flashLed+2,f
   752  071C  2F17               	goto	u207
   753  071D                     l738:
   754                           
   755                           ;BTN_SINGLE_LED.c: 89:         PORTD = 0x00;
   756  071D  1283               	bcf	3,5	;RP0=0, select bank0
   757  071E  1303               	bcf	3,6	;RP1=0, select bank0
   758  071F  0188               	clrf	8	;volatile
   759  0720                     l740:
   760                           
   761                           ;BTN_SINGLE_LED.c: 90:         _delay((unsigned long)((300)*(4000000/4000.0)));
   762  0720  3002               	movlw	2
   763  0721  00F4               	movwf	??_flashLed+2
   764  0722  3086               	movlw	134
   765  0723  00F3               	movwf	??_flashLed+1
   766  0724  3099               	movlw	153
   767  0725  00F2               	movwf	??_flashLed
   768  0726                     u217:
   769  0726  0BF2               	decfsz	??_flashLed,f
   770  0727  2F26               	goto	u217
   771  0728  0BF3               	decfsz	??_flashLed+1,f
   772  0729  2F26               	goto	u217
   773  072A  0BF4               	decfsz	??_flashLed+2,f
   774  072B  2F26               	goto	u217
   775  072C                     l742:
   776                           
   777                           ;BTN_SINGLE_LED.c: 86:     while(times--) {
   778  072C  3001               	movlw	1
   779  072D  02F0               	subwf	flashLed@times,f
   780  072E  3000               	movlw	0
   781  072F  1C03               	skipc
   782  0730  03F1               	decf	flashLed@times+1,f
   783  0731  02F1               	subwf	flashLed@times+1,f
   784  0732  0A70               	incf	flashLed@times,w
   785  0733  1D03               	skipz
   786  0734  2F39               	goto	u91
   787  0735  0A71               	incf	flashLed@times+1,w
   788  0736  1D03               	btfss	3,2
   789  0737  2F39               	goto	u91
   790  0738  2F3A               	goto	u90
   791  0739                     u91:
   792  0739  2F0D               	goto	l736
   793  073A                     u90:
   794  073A                     l75:
   795  073A  0008               	return
   796  073B                     __end_of_flashLed:
   797                           
   798                           	psect	text4
   799  06F3                     __ptext4:	
   800 ;; *************** function _declarePort *****************
   801 ;; Defined at:
   802 ;;		line 94 in file "BTN_SINGLE_LED.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _declarePort
   831  06F3                     _declarePort:
   832  06F3                     l670:	
   833                           ;incstack = 0
   834                           ; Regs used in _declarePort: [wreg+status,2]
   835                           
   836                           
   837                           ;BTN_SINGLE_LED.c: 95:     ANSEL = ANSELH = 0;
   838  06F3  1683               	bsf	3,5	;RP0=1, select bank3
   839  06F4  1703               	bsf	3,6	;RP1=1, select bank3
   840  06F5  0189               	clrf	9	;volatile
   841  06F6  0188               	clrf	8	;volatile
   842                           
   843                           ;BTN_SINGLE_LED.c: 96:     TRISD = 0;
   844  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   845  06F8  1303               	bcf	3,6	;RP1=0, select bank1
   846  06F9  0188               	clrf	8	;volatile
   847                           
   848                           ;BTN_SINGLE_LED.c: 97:     PORTD = 0;
   849  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   850  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   851  06FC  0188               	clrf	8	;volatile
   852                           
   853                           ;BTN_SINGLE_LED.c: 98:     TRISC = 0;
   854  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   855  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   856  06FF  0187               	clrf	7	;volatile
   857                           
   858                           ;BTN_SINGLE_LED.c: 99:     PORTC = 0;
   859  0700  1283               	bcf	3,5	;RP0=0, select bank0
   860  0701  1303               	bcf	3,6	;RP1=0, select bank0
   861  0702  0187               	clrf	7	;volatile
   862  0703                     l672:
   863                           
   864                           ;BTN_SINGLE_LED.c: 101:     TRISB0 = 1;
   865  0703  1683               	bsf	3,5	;RP0=1, select bank1
   866  0704  1303               	bcf	3,6	;RP1=0, select bank1
   867  0705  1406               	bsf	6,0	;volatile
   868  0706                     l674:
   869                           
   870                           ;BTN_SINGLE_LED.c: 102:     TRISB1 = 1;
   871  0706  1486               	bsf	6,1	;volatile
   872  0707                     l676:
   873                           
   874                           ;BTN_SINGLE_LED.c: 103:     TRISB2 = 1;
   875  0707  1506               	bsf	6,2	;volatile
   876  0708                     l678:
   877                           
   878                           ;BTN_SINGLE_LED.c: 105:     nRBPU = 0;
   879  0708  1381               	bcf	1,7	;volatile
   880  0709                     l680:
   881                           
   882                           ;BTN_SINGLE_LED.c: 106:     WPUB = 0x07;
   883  0709  3007               	movlw	7
   884  070A  0095               	movwf	21	;volatile
   885  070B                     l78:
   886  070B  0008               	return
   887  070C                     __end_of_declarePort:
   888  007E                     btemp	set	126	;btemp
   889  007E                     wtemp0	set	126
   890                           
   891                           	psect	config
   892                           
   893                           ;Config register CONFIG1 @ 0x2007
   894                           ;	Oscillator Selection bits
   895                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   896                           ;	Watchdog Timer Enable bit
   897                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   898                           ;	Power-up Timer Enable bit
   899                           ;	PWRTE = OFF, PWRT disabled
   900                           ;	RE3/MCLR pin function select bit
   901                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   902                           ;	Code Protection bit
   903                           ;	CP = OFF, Program memory code protection is disabled
   904                           ;	Data Code Protection bit
   905                           ;	CPD = OFF, Data memory code protection is disabled
   906                           ;	Brown Out Reset Selection bits
   907                           ;	BOREN = OFF, BOR disabled
   908                           ;	Internal External Switchover bit
   909                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   910                           ;	Fail-Safe Clock Monitor Enabled bit
   911                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   912                           ;	Low Voltage Programming Enable bit
   913                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   914                           ;	In-Circuit Debugger Mode bit
   915                           ;	DEBUG = 0x1, unprogrammed default
   916  2007                     	org	8199
   917  2007  20F2               	dw	8434
   918                           
   919                           ;Config register CONFIG2 @ 0x2008
   920                           ;	Brown-out Reset Selection bit
   921                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   922                           ;	Flash Program Memory Self Write Enable bits
   923                           ;	WRT = OFF, Write protection off
   924  2008                     	org	8200
   925  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_stateCountUp
    _main->_stateRace

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     432
                        _declarePort
                           _flashLed
                       _stateCountUp
                          _stateRace
 ---------------------------------------------------------------------------------
 (1) _stateRace                                            8     6      2     167
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _stateCountUp                                         8     6      2     167
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _flashLed                                             5     3      2      98
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _flashLed
   _stateCountUp
   _stateRace

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 13 00:49:45 2021

           _stateCountUp 07B1                       l60 07FB                       l44 0750  
                     l45 076C                       l46 075E                       l56 07D0  
                     l75 073A                       l69 07B0                       l78 070B  
                     u90 073A                       u91 0739                      l740 0720  
                    l670 06F3                      l742 072C                      l734 070C  
                    l750 078A                      l680 0709                      l672 0703  
                    l736 070D                      l760 07B2                      l752 0791  
                    l744 0770                      l674 0706                      l738 071D  
                    l770 07DE                      l762 07B6                      l754 079F  
                    l746 0771                      l676 0707                      l772 07E1  
                    l764 07B8                      l748 077A                      l756 07A2  
                    l780 0746                      l678 0708                      l766 07C0  
                    l774 07ED                      l758 07B1                      l782 0754  
                    l768 07C4                      l784 0762                      l776 073B  
                    l778 0740                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      u100 079F                      u101 079E  
                    u110 07B0                      u111 07AF                      u120 07DE  
                    u121 07DD                      u130 07FB                      u131 07FA  
                    u140 0746                      u141 0745                      u150 0754  
                    u207 0717                      u151 0753                      u160 0762  
                    u217 0726                      u161 0761                      u177 0784  
                    u187 07CA                      u197 07E7                     _WPUB 0095  
                   _main 073B                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _nRBPU 040F     __size_of_declarePort 0019                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0770  
                 ??_main 0078                   _ANSELH 0189                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB2 0432         __end_of_flashLed 073B  
__end_of__initialization 07FC           __pcstackCOMMON 0070         stateCountUp@hold 0077  
          stateRace@hold 0077               __pmaintext 073B       __size_of_stateRace 0041  
              ?_flashLed 0070                  __ptext1 0770                  __ptext2 07B1  
                __ptext3 070C                  __ptext4 06F3            ??_declarePort 0070  
             ??_flashLed 0072     end_of_initialization 07FC        __end_of_stateRace 07B1  
    __end_of_declarePort 070C            ?_stateCountUp 0070      start_initialization 07FC  
      stateCountUp@index 0075        stateCountUp@times 0070           stateRace@index 0075  
         stateRace@times 0070           ??_stateCountUp 0072              _declarePort 06F3  
              ___latbits 0002        __size_of_flashLed 002F                _stateRace 0770  
   __end_of_stateCountUp 07FC               ?_stateRace 0070                 _flashLed 070C  
          __size_of_main 0035             ?_declarePort 0070              ??_stateRace 0072  
  __size_of_stateCountUp 004B            flashLed@times 0070  
