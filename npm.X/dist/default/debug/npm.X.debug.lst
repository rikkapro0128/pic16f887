

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 09 11:11:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0008                     _PORTD	set	8
   204  0007                     _PORTC	set	7
   205  0087                     _TRISC	set	135
   206  0088                     _TRISD	set	136
   207  0189                     _ANSELH	set	393
   208  0188                     _ANSEL	set	392
   209                           
   210                           	psect	cinit
   211  07FC                     start_initialization:	
   212                           ; #config settings
   213                           
   214  07FC                     __initialization:
   215  07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  07FC                     __end_of__initialization:
   219  07FC  0183               	clrf	3
   220  07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:
   224  0070                     ?_declarePort:
   225  0070                     ??_declarePort:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_tamLedPortC:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 2 bytes @ 0x0
   236  0070                     	ds	2
   237  0072                     ??_tamLedPortC:
   238                           
   239                           ; 1 bytes @ 0x2
   240  0072                     	ds	2
   241  0074                     ??_main:
   242                           
   243                           ; 1 bytes @ 0x4
   244  0074                     	ds	1
   245  0075                     main@state:
   246                           
   247                           ; 1 bytes @ 0x5
   248  0075                     	ds	1
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:
   252  0020                     tamLedPortC@hold_69:
   253                           
   254                           ; 1 bytes @ 0x0
   255  0020                     	ds	1
   256  0021                     tamLedPortC@total:
   257                           
   258                           ; 1 bytes @ 0x1
   259  0021                     	ds	1
   260  0022                     tamLedPortC@numberFlash:
   261                           
   262                           ; 1 bytes @ 0x2
   263  0022                     	ds	1
   264  0023                     tamLedPortC@numberRace:
   265                           
   266                           ; 1 bytes @ 0x3
   267  0023                     	ds	1
   268  0024                     tamLedPortC@numberCountUp:
   269                           
   270                           ; 1 bytes @ 0x4
   271  0024                     	ds	1
   272  0025                     tamLedPortC@pressed:
   273                           
   274                           ; 1 bytes @ 0x5
   275  0025                     	ds	1
   276  0026                     tamLedPortC@index:
   277                           
   278                           ; 1 bytes @ 0x6
   279  0026                     	ds	1
   280  0027                     tamLedPortC@sum:
   281                           
   282                           ; 1 bytes @ 0x7
   283  0027                     	ds	1
   284  0028                     tamLedPortC@score:
   285                           
   286                           ; 1 bytes @ 0x8
   287  0028                     	ds	1
   288  0029                     tamLedPortC@i:
   289                           
   290                           ; 1 bytes @ 0x9
   291  0029                     	ds	1
   292  002A                     tamLedPortC@j:
   293                           
   294                           ; 1 bytes @ 0xA
   295  002A                     	ds	1
   296  002B                     tamLedPortC@hold:
   297                           
   298                           ; 1 bytes @ 0xB
   299  002B                     	ds	1
   300                           
   301                           	psect	maintext
   302  06D1                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 44 in file "BAI_2_SANG_DAN_D7_D0.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  state           1    5[COMMON] unsigned char 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, pclath, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : B00/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         1       0       0       0       0
   324 ;;      Temps:          1       0       0       0       0
   325 ;;      Totals:         2       0       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels required when called: 1
   328 ;; This function calls:
   329 ;;		_declarePort
   330 ;;		_tamLedPortC
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           
   337                           ;psect for function _main
   338  06D1                     _main:
   339  06D1                     l864:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;BAI_2_SANG_DAN_D7_D0.c: 45:     declarePort();
   345  06D1  120A  118A  26C4  120A  118A  	fcall	_declarePort
   346  06D6                     l866:
   347                           
   348                           ;BAI_2_SANG_DAN_D7_D0.c: 46:     unsigned char state = 0;
   349  06D6  01F5               	clrf	main@state
   350  06D7                     l868:
   351                           
   352                           ;BAI_2_SANG_DAN_D7_D0.c: 50:         if(!state) {
   353  06D7  0875               	movf	main@state,w
   354  06D8  1D03               	btfss	3,2
   355  06D9  2EDB               	goto	u281
   356  06DA  2EDC               	goto	u280
   357  06DB                     u281:
   358  06DB  2EE6               	goto	l872
   359  06DC                     u280:
   360  06DC                     l870:
   361                           
   362                           ;BAI_2_SANG_DAN_D7_D0.c: 51:             state = tamLedPortC();
   363  06DC  120A  118A  26EE  120A  118A  	fcall	_tamLedPortC
   364  06E1  0870               	movf	?_tamLedPortC,w
   365  06E2  00F4               	movwf	??_main
   366  06E3  0874               	movf	??_main,w
   367  06E4  00F5               	movwf	main@state
   368                           
   369                           ;BAI_2_SANG_DAN_D7_D0.c: 52:         }else {
   370  06E5  2ED7               	goto	l868
   371  06E6                     l872:
   372                           
   373                           ;BAI_2_SANG_DAN_D7_D0.c: 53:             PORTC = 0xff;
   374  06E6  30FF               	movlw	255
   375  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   376  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   377  06E9  0087               	movwf	7	;volatile
   378  06EA  2ED7               	goto	l868
   379  06EB  120A  118A  2800   	ljmp	start
   380  06EE                     __end_of_main:
   381                           
   382                           	psect	text1
   383  06EE                     __ptext1:	
   384 ;; *************** function _tamLedPortC *****************
   385 ;; Defined at:
   386 ;;		line 92 in file "BAI_2_SANG_DAN_D7_D0.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  j               1   10[BANK0 ] unsigned char 
   391 ;;  i               1    9[BANK0 ] unsigned char 
   392 ;;  sum             1    7[BANK0 ] unsigned char 
   393 ;;  hold            1    0[BANK0 ] unsigned char 
   394 ;;  hold            1   11[BANK0 ] unsigned char 
   395 ;;  index           1    6[BANK0 ] unsigned char 
   396 ;;  score           1    8[BANK0 ] unsigned char 
   397 ;;  pressed         1    5[BANK0 ] unsigned char 
   398 ;;  numberCountU    1    4[BANK0 ] unsigned char 
   399 ;;  numberRace      1    3[BANK0 ] unsigned char 
   400 ;;  numberFlash     1    2[BANK0 ] unsigned char 
   401 ;;  total           1    1[BANK0 ] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  2    0[COMMON] unsigned int 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         2       0       0       0       0
   412 ;;      Locals:         0      12       0       0       0
   413 ;;      Temps:          2       0       0       0       0
   414 ;;      Totals:         4      12       0       0       0
   415 ;;Total ram usage:       16 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _tamLedPortC
   426  06EE                     _tamLedPortC:
   427  06EE                     l788:	
   428                           ;incstack = 0
   429                           ; Regs used in _tamLedPortC: [wreg+status,2+status,0]
   430                           
   431                           
   432                           ;BAI_2_SANG_DAN_D7_D0.c: 93:     unsigned char total = 2, numberFlash = 5, numberRace = 
      +                          2, numberCountUp = 3, pressed = 2;
   433  06EE  3002               	movlw	2
   434  06EF  00F2               	movwf	??_tamLedPortC
   435  06F0  0872               	movf	??_tamLedPortC,w
   436  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   437  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   438  06F3  00A1               	movwf	tamLedPortC@total
   439  06F4  3005               	movlw	5
   440  06F5  00F2               	movwf	??_tamLedPortC
   441  06F6  0872               	movf	??_tamLedPortC,w
   442  06F7  00A2               	movwf	tamLedPortC@numberFlash
   443  06F8  3002               	movlw	2
   444  06F9  00F2               	movwf	??_tamLedPortC
   445  06FA  0872               	movf	??_tamLedPortC,w
   446  06FB  00A3               	movwf	tamLedPortC@numberRace
   447  06FC  3003               	movlw	3
   448  06FD  00F2               	movwf	??_tamLedPortC
   449  06FE  0872               	movf	??_tamLedPortC,w
   450  06FF  00A4               	movwf	tamLedPortC@numberCountUp
   451  0700  3002               	movlw	2
   452  0701  00F2               	movwf	??_tamLedPortC
   453  0702  0872               	movf	??_tamLedPortC,w
   454  0703  00A5               	movwf	tamLedPortC@pressed
   455                           
   456                           ;BAI_2_SANG_DAN_D7_D0.c: 95:     while(total > 0) {
   457  0704  2FF2               	goto	l49
   458  0705                     l790:
   459                           
   460                           ;BAI_2_SANG_DAN_D7_D0.c: 98:              _delay((unsigned long)((50)*(4000000/4000.0)))
      +                          ;
   461  0705  3041               	movlw	65
   462  0706  00F3               	movwf	??_tamLedPortC+1
   463  0707  30EE               	movlw	238
   464  0708  00F2               	movwf	??_tamLedPortC
   465  0709                     u297:
   466  0709  0BF2               	decfsz	??_tamLedPortC,f
   467  070A  2F09               	goto	u297
   468  070B  0BF3               	decfsz	??_tamLedPortC+1,f
   469  070C  2F09               	goto	u297
   470  070D  0000               	nop
   471                           
   472                           ;BAI_2_SANG_DAN_D7_D0.c: 99:             PORTC = 0xff;
   473  070E  30FF               	movlw	255
   474  070F  1283               	bcf	3,5	;RP0=0, select bank0
   475  0710  1303               	bcf	3,6	;RP1=0, select bank0
   476  0711  0087               	movwf	7	;volatile
   477                           
   478                           ;BAI_2_SANG_DAN_D7_D0.c: 100:             _delay((unsigned long)((50)*(4000000/4000.0)))
      +                          ;
   479  0712  3041               	movlw	65
   480  0713  00F3               	movwf	??_tamLedPortC+1
   481  0714  30EE               	movlw	238
   482  0715  00F2               	movwf	??_tamLedPortC
   483  0716                     u307:
   484  0716  0BF2               	decfsz	??_tamLedPortC,f
   485  0717  2F16               	goto	u307
   486  0718  0BF3               	decfsz	??_tamLedPortC+1,f
   487  0719  2F16               	goto	u307
   488  071A  0000               	nop
   489  071B                     l792:
   490                           
   491                           ;BAI_2_SANG_DAN_D7_D0.c: 101:             PORTC = 0x00;
   492  071B  1283               	bcf	3,5	;RP0=0, select bank0
   493  071C  1303               	bcf	3,6	;RP1=0, select bank0
   494  071D  0187               	clrf	7	;volatile
   495  071E                     l794:
   496                           
   497                           ;BAI_2_SANG_DAN_D7_D0.c: 102:             numberFlash--;
   498  071E  3001               	movlw	1
   499  071F  02A2               	subwf	tamLedPortC@numberFlash,f
   500  0720                     l796:
   501                           
   502                           ;BAI_2_SANG_DAN_D7_D0.c: 97:         while(numberFlash > 0) {
   503  0720  0822               	movf	tamLedPortC@numberFlash,w
   504  0721  1D03               	btfss	3,2
   505  0722  2F24               	goto	u171
   506  0723  2F25               	goto	u170
   507  0724                     u171:
   508  0724  2F05               	goto	l790
   509  0725                     u170:
   510  0725  2F56               	goto	l54
   511  0726                     l798:
   512                           
   513                           ;BAI_2_SANG_DAN_D7_D0.c: 106:             PORTC = 0;
   514  0726  0187               	clrf	7	;volatile
   515  0727                     l800:
   516                           
   517                           ;BAI_2_SANG_DAN_D7_D0.c: 107:             _delay((unsigned long)((50)*(4000000/4000.0)))
      +                          ;
   518  0727  3041               	movlw	65
   519  0728  00F3               	movwf	??_tamLedPortC+1
   520  0729  30EE               	movlw	238
   521  072A  00F2               	movwf	??_tamLedPortC
   522  072B                     u317:
   523  072B  0BF2               	decfsz	??_tamLedPortC,f
   524  072C  2F2B               	goto	u317
   525  072D  0BF3               	decfsz	??_tamLedPortC+1,f
   526  072E  2F2B               	goto	u317
   527  072F  0000               	nop
   528  0730                     l802:
   529                           
   530                           ;BAI_2_SANG_DAN_D7_D0.c: 108:             unsigned char score = 0;
   531  0730  1283               	bcf	3,5	;RP0=0, select bank0
   532  0731  1303               	bcf	3,6	;RP1=0, select bank0
   533  0732  01A8               	clrf	tamLedPortC@score
   534                           
   535                           ;BAI_2_SANG_DAN_D7_D0.c: 109:             while(score < 8) {
   536  0733  2F4E               	goto	l56
   537  0734                     l804:
   538                           
   539                           ;BAI_2_SANG_DAN_D7_D0.c: 110:                 PORTC = (0x01 << score);
   540  0734  3001               	movlw	1
   541  0735  00F2               	movwf	??_tamLedPortC
   542  0736  0A28               	incf	tamLedPortC@score,w
   543  0737  2F3A               	goto	u184
   544  0738                     u185:
   545  0738  1003               	clrc
   546  0739  0DF2               	rlf	??_tamLedPortC,f
   547  073A                     u184:
   548  073A  3EFF               	addlw	-1
   549  073B  1D03               	skipz
   550  073C  2F38               	goto	u185
   551  073D  0872               	movf	??_tamLedPortC,w
   552  073E  0087               	movwf	7	;volatile
   553  073F                     l806:
   554                           
   555                           ;BAI_2_SANG_DAN_D7_D0.c: 111:                 _delay((unsigned long)((50)*(4000000/4000.
      +                          0)));
   556  073F  3041               	movlw	65
   557  0740  00F3               	movwf	??_tamLedPortC+1
   558  0741  30EE               	movlw	238
   559  0742  00F2               	movwf	??_tamLedPortC
   560  0743                     u327:
   561  0743  0BF2               	decfsz	??_tamLedPortC,f
   562  0744  2F43               	goto	u327
   563  0745  0BF3               	decfsz	??_tamLedPortC+1,f
   564  0746  2F43               	goto	u327
   565  0747  0000               	nop
   566  0748                     l808:
   567                           
   568                           ;BAI_2_SANG_DAN_D7_D0.c: 112:                 score++;
   569  0748  3001               	movlw	1
   570  0749  00F2               	movwf	??_tamLedPortC
   571  074A  0872               	movf	??_tamLedPortC,w
   572  074B  1283               	bcf	3,5	;RP0=0, select bank0
   573  074C  1303               	bcf	3,6	;RP1=0, select bank0
   574  074D  07A8               	addwf	tamLedPortC@score,f
   575  074E                     l56:	
   576                           ;BAI_2_SANG_DAN_D7_D0.c: 113:             }
   577                           
   578                           
   579                           ;BAI_2_SANG_DAN_D7_D0.c: 109:             while(score < 8) {
   580  074E  3008               	movlw	8
   581  074F  0228               	subwf	tamLedPortC@score,w
   582  0750  1C03               	skipc
   583  0751  2F53               	goto	u191
   584  0752  2F54               	goto	u190
   585  0753                     u191:
   586  0753  2F34               	goto	l804
   587  0754                     u190:
   588  0754                     l810:
   589                           
   590                           ;BAI_2_SANG_DAN_D7_D0.c: 114:             numberRace--;
   591  0754  3001               	movlw	1
   592  0755  02A3               	subwf	tamLedPortC@numberRace,f
   593  0756                     l54:	
   594                           ;BAI_2_SANG_DAN_D7_D0.c: 115:         }
   595                           
   596                           
   597                           ;BAI_2_SANG_DAN_D7_D0.c: 105:         while(numberRace > 0) {
   598  0756  0823               	movf	tamLedPortC@numberRace,w
   599  0757  1D03               	btfss	3,2
   600  0758  2F5A               	goto	u201
   601  0759  2F5B               	goto	u200
   602  075A                     u201:
   603  075A  2F26               	goto	l798
   604  075B                     u200:
   605  075B  2F8F               	goto	l828
   606  075C                     l812:
   607                           
   608                           ;BAI_2_SANG_DAN_D7_D0.c: 118:             unsigned char index = 0;
   609  075C  01A6               	clrf	tamLedPortC@index
   610  075D                     l814:
   611                           
   612                           ;BAI_2_SANG_DAN_D7_D0.c: 119:             unsigned char hold = 0x80;
   613  075D  3080               	movlw	128
   614  075E  00F2               	movwf	??_tamLedPortC
   615  075F  0872               	movf	??_tamLedPortC,w
   616  0760  00AB               	movwf	tamLedPortC@hold
   617  0761                     l816:
   618                           
   619                           ;BAI_2_SANG_DAN_D7_D0.c: 120:             PORTC = 0;
   620  0761  0187               	clrf	7	;volatile
   621                           
   622                           ;BAI_2_SANG_DAN_D7_D0.c: 121:             _delay((unsigned long)((50)*(4000000/4000.0)))
      +                          ;
   623  0762  3041               	movlw	65
   624  0763  00F3               	movwf	??_tamLedPortC+1
   625  0764  30EE               	movlw	238
   626  0765  00F2               	movwf	??_tamLedPortC
   627  0766                     u337:
   628  0766  0BF2               	decfsz	??_tamLedPortC,f
   629  0767  2F66               	goto	u337
   630  0768  0BF3               	decfsz	??_tamLedPortC+1,f
   631  0769  2F66               	goto	u337
   632  076A  0000               	nop
   633                           
   634                           ;BAI_2_SANG_DAN_D7_D0.c: 122:             while(index < 8) {
   635  076B  2F85               	goto	l62
   636  076C                     l818:
   637                           
   638                           ;BAI_2_SANG_DAN_D7_D0.c: 123:                 PORTC = hold;
   639  076C  082B               	movf	tamLedPortC@hold,w
   640  076D  0087               	movwf	7	;volatile
   641                           
   642                           ;BAI_2_SANG_DAN_D7_D0.c: 124:                 _delay((unsigned long)((50)*(4000000/4000.
      +                          0)));
   643  076E  3041               	movlw	65
   644  076F  00F3               	movwf	??_tamLedPortC+1
   645  0770  30EE               	movlw	238
   646  0771  00F2               	movwf	??_tamLedPortC
   647  0772                     u347:
   648  0772  0BF2               	decfsz	??_tamLedPortC,f
   649  0773  2F72               	goto	u347
   650  0774  0BF3               	decfsz	??_tamLedPortC+1,f
   651  0775  2F72               	goto	u347
   652  0776  0000               	nop
   653  0777                     l820:
   654                           
   655                           ;BAI_2_SANG_DAN_D7_D0.c: 125:                 hold = (hold >> 1) | hold;
   656  0777  1283               	bcf	3,5	;RP0=0, select bank0
   657  0778  1303               	bcf	3,6	;RP1=0, select bank0
   658  0779  082B               	movf	tamLedPortC@hold,w
   659  077A  00F2               	movwf	??_tamLedPortC
   660  077B  1003               	clrc
   661  077C  0C72               	rrf	??_tamLedPortC,w
   662  077D  042B               	iorwf	tamLedPortC@hold,w
   663  077E  00F3               	movwf	??_tamLedPortC+1
   664  077F  0873               	movf	??_tamLedPortC+1,w
   665  0780  00AB               	movwf	tamLedPortC@hold
   666  0781                     l822:
   667                           
   668                           ;BAI_2_SANG_DAN_D7_D0.c: 126:                 index++;
   669  0781  3001               	movlw	1
   670  0782  00F2               	movwf	??_tamLedPortC
   671  0783  0872               	movf	??_tamLedPortC,w
   672  0784  07A6               	addwf	tamLedPortC@index,f
   673  0785                     l62:	
   674                           ;BAI_2_SANG_DAN_D7_D0.c: 127:             }
   675                           
   676                           
   677                           ;BAI_2_SANG_DAN_D7_D0.c: 122:             while(index < 8) {
   678  0785  3008               	movlw	8
   679  0786  1283               	bcf	3,5	;RP0=0, select bank0
   680  0787  1303               	bcf	3,6	;RP1=0, select bank0
   681  0788  0226               	subwf	tamLedPortC@index,w
   682  0789  1C03               	skipc
   683  078A  2F8C               	goto	u211
   684  078B  2F8D               	goto	u210
   685  078C                     u211:
   686  078C  2F6C               	goto	l818
   687  078D                     u210:
   688  078D                     l824:
   689  078D                     l826:
   690                           
   691                           ;BAI_2_SANG_DAN_D7_D0.c: 129:             numberCountUp--;
   692  078D  3001               	movlw	1
   693  078E  02A4               	subwf	tamLedPortC@numberCountUp,f
   694  078F                     l828:
   695                           
   696                           ;BAI_2_SANG_DAN_D7_D0.c: 117:         while(numberCountUp > 0) {
   697  078F  0824               	movf	tamLedPortC@numberCountUp,w
   698  0790  1D03               	btfss	3,2
   699  0791  2F93               	goto	u221
   700  0792  2F94               	goto	u220
   701  0793                     u221:
   702  0793  2F5C               	goto	l812
   703  0794                     u220:
   704  0794  2FEB               	goto	l66
   705  0795                     l830:
   706                           
   707                           ;BAI_2_SANG_DAN_D7_D0.c: 133:             PORTC = 0;
   708  0795  0187               	clrf	7	;volatile
   709  0796                     l832:
   710                           
   711                           ;BAI_2_SANG_DAN_D7_D0.c: 134:             _delay((unsigned long)((50)*(4000000/4000.0)))
      +                          ;
   712  0796  3041               	movlw	65
   713  0797  00F3               	movwf	??_tamLedPortC+1
   714  0798  30EE               	movlw	238
   715  0799  00F2               	movwf	??_tamLedPortC
   716  079A                     u357:
   717  079A  0BF2               	decfsz	??_tamLedPortC,f
   718  079B  2F9A               	goto	u357
   719  079C  0BF3               	decfsz	??_tamLedPortC+1,f
   720  079D  2F9A               	goto	u357
   721  079E  0000               	nop
   722  079F                     l834:
   723                           
   724                           ;BAI_2_SANG_DAN_D7_D0.c: 135:             unsigned char sum = 0x00, i = 0, j, hold = 0x8
      +                          0;
   725  079F  1283               	bcf	3,5	;RP0=0, select bank0
   726  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   727  07A1  01A7               	clrf	tamLedPortC@sum
   728  07A2                     l836:
   729  07A2  01A9               	clrf	tamLedPortC@i
   730  07A3                     l838:
   731  07A3  3080               	movlw	128
   732  07A4  00F2               	movwf	??_tamLedPortC
   733  07A5  0872               	movf	??_tamLedPortC,w
   734  07A6  00A0               	movwf	tamLedPortC@hold_69
   735                           
   736                           ;BAI_2_SANG_DAN_D7_D0.c: 136:             while(i < 8) {
   737  07A7  2FE3               	goto	l854
   738  07A8                     l840:
   739                           
   740                           ;BAI_2_SANG_DAN_D7_D0.c: 137:                 j = 0;
   741  07A8  01AA               	clrf	tamLedPortC@j
   742                           
   743                           ;BAI_2_SANG_DAN_D7_D0.c: 138:                 while(j < (8 - i)) {
   744  07A9  2FC7               	goto	l848
   745  07AA                     l842:
   746                           
   747                           ;BAI_2_SANG_DAN_D7_D0.c: 139:                     PORTC = (hold >> j) | sum;
   748  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   749  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   750  07AC  0820               	movf	tamLedPortC@hold_69,w
   751  07AD  00F2               	movwf	??_tamLedPortC
   752  07AE  0A2A               	incf	tamLedPortC@j,w
   753  07AF  2FB2               	goto	u234
   754  07B0                     u235:
   755  07B0  1003               	clrc
   756  07B1  0CF2               	rrf	??_tamLedPortC,f
   757  07B2                     u234:
   758  07B2  3EFF               	addlw	-1
   759  07B3  1D03               	skipz
   760  07B4  2FB0               	goto	u235
   761  07B5  0872               	movf	??_tamLedPortC,w
   762  07B6  0427               	iorwf	tamLedPortC@sum,w
   763  07B7  0087               	movwf	7	;volatile
   764  07B8                     l844:
   765                           
   766                           ;BAI_2_SANG_DAN_D7_D0.c: 140:                     _delay((unsigned long)((50)*(4000000/4
      +                          000.0)));
   767  07B8  3041               	movlw	65
   768  07B9  00F3               	movwf	??_tamLedPortC+1
   769  07BA  30EE               	movlw	238
   770  07BB  00F2               	movwf	??_tamLedPortC
   771  07BC                     u367:
   772  07BC  0BF2               	decfsz	??_tamLedPortC,f
   773  07BD  2FBC               	goto	u367
   774  07BE  0BF3               	decfsz	??_tamLedPortC+1,f
   775  07BF  2FBC               	goto	u367
   776  07C0  0000               	nop
   777  07C1                     l846:
   778                           
   779                           ;BAI_2_SANG_DAN_D7_D0.c: 141:                     j++;
   780  07C1  3001               	movlw	1
   781  07C2  00F2               	movwf	??_tamLedPortC
   782  07C3  0872               	movf	??_tamLedPortC,w
   783  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   784  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   785  07C6  07AA               	addwf	tamLedPortC@j,f
   786  07C7                     l848:
   787                           
   788                           ;BAI_2_SANG_DAN_D7_D0.c: 138:                 while(j < (8 - i)) {
   789  07C7  3000               	movlw	0
   790  07C8  00F3               	movwf	??_tamLedPortC+1
   791  07C9  0829               	movf	tamLedPortC@i,w
   792  07CA  3C08               	sublw	8
   793  07CB  00F2               	movwf	??_tamLedPortC
   794  07CC  1C03               	skipc
   795  07CD  03F3               	decf	??_tamLedPortC+1,f
   796  07CE  0873               	movf	??_tamLedPortC+1,w
   797  07CF  3A80               	xorlw	128
   798  07D0  3C80               	sublw	128
   799  07D1  1D03               	skipz
   800  07D2  2FD5               	goto	u245
   801  07D3  0872               	movf	??_tamLedPortC,w
   802  07D4  022A               	subwf	tamLedPortC@j,w
   803  07D5                     u245:
   804  07D5  1C03               	skipc
   805  07D6  2FD8               	goto	u241
   806  07D7  2FD9               	goto	u240
   807  07D8                     u241:
   808  07D8  2FAA               	goto	l842
   809  07D9                     u240:
   810  07D9                     l850:
   811                           
   812                           ;BAI_2_SANG_DAN_D7_D0.c: 143:                 sum = PORTC;
   813  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   814  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   815  07DB  0807               	movf	7,w	;volatile
   816  07DC  00F2               	movwf	??_tamLedPortC
   817  07DD  0872               	movf	??_tamLedPortC,w
   818  07DE  00A7               	movwf	tamLedPortC@sum
   819  07DF                     l852:
   820                           
   821                           ;BAI_2_SANG_DAN_D7_D0.c: 144:                 i++;
   822  07DF  3001               	movlw	1
   823  07E0  00F2               	movwf	??_tamLedPortC
   824  07E1  0872               	movf	??_tamLedPortC,w
   825  07E2  07A9               	addwf	tamLedPortC@i,f
   826  07E3                     l854:
   827                           
   828                           ;BAI_2_SANG_DAN_D7_D0.c: 136:             while(i < 8) {
   829  07E3  3008               	movlw	8
   830  07E4  0229               	subwf	tamLedPortC@i,w
   831  07E5  1C03               	skipc
   832  07E6  2FE8               	goto	u251
   833  07E7  2FE9               	goto	u250
   834  07E8                     u251:
   835  07E8  2FA8               	goto	l840
   836  07E9                     u250:
   837  07E9                     l856:
   838                           
   839                           ;BAI_2_SANG_DAN_D7_D0.c: 146:             pressed--;
   840  07E9  3001               	movlw	1
   841  07EA  02A5               	subwf	tamLedPortC@pressed,f
   842  07EB                     l66:	
   843                           ;BAI_2_SANG_DAN_D7_D0.c: 147:         }
   844                           
   845                           
   846                           ;BAI_2_SANG_DAN_D7_D0.c: 132:         while(pressed > 0) {
   847  07EB  0825               	movf	tamLedPortC@pressed,w
   848  07EC  1D03               	btfss	3,2
   849  07ED  2FEF               	goto	u261
   850  07EE  2FF0               	goto	u260
   851  07EF                     u261:
   852  07EF  2F95               	goto	l830
   853  07F0                     u260:
   854  07F0                     l858:
   855                           
   856                           ;BAI_2_SANG_DAN_D7_D0.c: 148:         total--;
   857  07F0  3001               	movlw	1
   858  07F1  02A1               	subwf	tamLedPortC@total,f
   859  07F2                     l49:	
   860                           ;BAI_2_SANG_DAN_D7_D0.c: 149:     }
   861                           
   862                           
   863                           ;BAI_2_SANG_DAN_D7_D0.c: 95:     while(total > 0) {
   864  07F2  0821               	movf	tamLedPortC@total,w
   865  07F3  1D03               	btfss	3,2
   866  07F4  2FF6               	goto	u271
   867  07F5  2FF7               	goto	u270
   868  07F6                     u271:
   869  07F6  2F20               	goto	l796
   870  07F7                     u270:
   871  07F7                     l860:
   872                           
   873                           ;BAI_2_SANG_DAN_D7_D0.c: 150:     return 1;
   874  07F7  3001               	movlw	1
   875  07F8  00F0               	movwf	?_tamLedPortC
   876  07F9  3000               	movlw	0
   877  07FA  00F1               	movwf	?_tamLedPortC+1
   878  07FB                     l76:
   879  07FB  0008               	return
   880  07FC                     __end_of_tamLedPortC:
   881                           
   882                           	psect	text2
   883  06C4                     __ptext2:	
   884 ;; *************** function _declarePort *****************
   885 ;; Defined at:
   886 ;;		line 58 in file "BAI_2_SANG_DAN_D7_D0.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _declarePort
   915  06C4                     _declarePort:
   916  06C4                     l786:	
   917                           ;incstack = 0
   918                           ; Regs used in _declarePort: [status,2]
   919                           
   920                           
   921                           ;BAI_2_SANG_DAN_D7_D0.c: 59:     ANSEL = ANSELH = 0;
   922  06C4  1683               	bsf	3,5	;RP0=1, select bank3
   923  06C5  1703               	bsf	3,6	;RP1=1, select bank3
   924  06C6  0189               	clrf	9	;volatile
   925  06C7  0188               	clrf	8	;volatile
   926                           
   927                           ;BAI_2_SANG_DAN_D7_D0.c: 60:     TRISD = 0;
   928  06C8  1683               	bsf	3,5	;RP0=1, select bank1
   929  06C9  1303               	bcf	3,6	;RP1=0, select bank1
   930  06CA  0188               	clrf	8	;volatile
   931                           
   932                           ;BAI_2_SANG_DAN_D7_D0.c: 61:     TRISC = 0;
   933  06CB  0187               	clrf	7	;volatile
   934                           
   935                           ;BAI_2_SANG_DAN_D7_D0.c: 62:     PORTC = 0;
   936  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   937  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   938  06CE  0187               	clrf	7	;volatile
   939                           
   940                           ;BAI_2_SANG_DAN_D7_D0.c: 63:     PORTD = 0;
   941  06CF  0188               	clrf	8	;volatile
   942  06D0                     l31:
   943  06D0  0008               	return
   944  06D1                     __end_of_declarePort:
   945  007E                     btemp	set	126	;btemp
   946  007E                     wtemp0	set	126
   947                           
   948                           	psect	config
   949                           
   950                           ;Config register CONFIG1 @ 0x2007
   951                           ;	Oscillator Selection bits
   952                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   953                           ;	Watchdog Timer Enable bit
   954                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   955                           ;	Power-up Timer Enable bit
   956                           ;	PWRTE = OFF, PWRT disabled
   957                           ;	RE3/MCLR pin function select bit
   958                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   959                           ;	Code Protection bit
   960                           ;	CP = OFF, Program memory code protection is disabled
   961                           ;	Data Code Protection bit
   962                           ;	CPD = OFF, Data memory code protection is disabled
   963                           ;	Brown Out Reset Selection bits
   964                           ;	BOREN = OFF, BOR disabled
   965                           ;	Internal External Switchover bit
   966                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   967                           ;	Fail-Safe Clock Monitor Enabled bit
   968                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   969                           ;	Low Voltage Programming Enable bit
   970                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   971                           ;	In-Circuit Debugger Mode bit
   972                           ;	DEBUG = 0x1, unprogrammed default
   973  2007                     	org	8199
   974  2007  20F2               	dw	8434
   975                           
   976                           ;Config register CONFIG2 @ 0x2008
   977                           ;	Brown-out Reset Selection bit
   978                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   979                           ;	Flash Program Memory Self Write Enable bits
   980                           ;	WRT = OFF, Write protection off
   981  2008                     	org	8200
   982  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tamLedPortC

Critical Paths under _main in BANK0

    _main->_tamLedPortC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     422
                                              4 COMMON     2     2      0
                        _declarePort
                        _tamLedPortC
 ---------------------------------------------------------------------------------
 (1) _tamLedPortC                                         16    14      2     398
                                              0 COMMON     4     2      2
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _tamLedPortC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 09 11:11:57 2021

                      l31 06D0                        l62 0785                        l54 0756  
                      l56 074E                        l49 07F2                        l66 07EB  
                      l76 07FB                       l800 0727                       l810 0754  
                     l802 0730                       l820 0777                       l812 075C  
                     l804 0734                       l830 0795                       l822 0781  
                     l814 075D                       l806 073F                       l840 07A8  
                     l832 0796                       l824 078D                       l816 0761  
                     l808 0748                       l850 07D9                       l842 07AA  
                     l834 079F                       l826 078D                       l818 076C  
                     l860 07F7                       l852 07DF                       l844 07B8  
                     l836 07A2                       l828 078F                       l846 07C1  
                     l854 07E3                       l838 07A3                       l790 0705  
                     l870 06DC                       l856 07E9                       l848 07C7  
                     l792 071B                       l872 06E6                       l864 06D1  
                     l786 06C4                       l858 07F0                       l794 071E  
                     l866 06D6                       l796 0720                       l788 06EE  
                     l868 06D7                       l798 0726                       u200 075B  
                     u201 075A                       u210 078D                       u211 078C  
                     u220 0794                       u221 0793                       u240 07D9  
                     u241 07D8                       u250 07E9                       u234 07B2  
                     u170 0725                       u251 07E8                       u235 07B0  
                     u171 0724                       u307 0716                       u260 07F0  
                     u261 07EF                       u245 07D5                       u317 072B  
                     u270 07F7                       u190 0754                       u271 07F6  
                     u191 0753                       u327 0743                       u184 073A  
                     u280 06DC                       u337 0766                       u185 0738  
                     u281 06DB                       u347 0772                       u357 079A  
                     u367 07BC                       u297 0709                      _main 06D1  
                    btemp 007E                      start 0000                     ?_main 0070  
                   _ANSEL 0188                     _PORTC 0007                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088              ?_tamLedPortC 0070  
    __size_of_declarePort 000D                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 06EE                    ??_main 0074  
                  _ANSELH 0189   __end_of__initialization 07FC            __pcstackCOMMON 0070  
    __size_of_tamLedPortC 010E                __pmaintext 06D1                   __ptext1 06EE  
                 __ptext2 06C4             ??_declarePort 0070          tamLedPortC@index 0026  
        tamLedPortC@score 0028          tamLedPortC@total 0021      end_of_initialization 07FC  
            tamLedPortC@i 0029              tamLedPortC@j 002A       __end_of_declarePort 06D1  
     start_initialization 07FC               _declarePort 06C4             ??_tamLedPortC 0072  
               ___latbits 0002             __pcstackBANK0 0020  tamLedPortC@numberCountUp 0024  
     __end_of_tamLedPortC 07FC           tamLedPortC@hold 002B        tamLedPortC@hold_69 0020  
      tamLedPortC@pressed 0025                 main@state 0075               _tamLedPortC 06EE  
           __size_of_main 001D            tamLedPortC@sum 0027              ?_declarePort 0070  
  tamLedPortC@numberFlash 0022     tamLedPortC@numberRace 0023  
