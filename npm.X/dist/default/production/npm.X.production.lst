

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 09 23:24:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0008                     _PORTD	set	8
   203  0007                     _PORTC	set	7
   204  0087                     _TRISC	set	135
   205  0088                     _TRISD	set	136
   206  0189                     _ANSELH	set	393
   207  0188                     _ANSEL	set	392
   208                           
   209                           	psect	cinit
   210  07FC                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07FC                     __initialization:
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2EB1   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	cstackCOMMON
   222  0070                     __pcstackCOMMON:
   223  0070                     ?_declarePort:
   224  0070                     ??_declarePort:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_muoiSauLed:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ??_muoiSauLed:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238  0070                     	ds	3
   239  0073                     muoiSauLed@numberFlash:
   240                           
   241                           ; 2 bytes @ 0x3
   242  0073                     	ds	2
   243  0075                     muoiSauLed@numberRace:
   244                           
   245                           ; 2 bytes @ 0x5
   246  0075                     	ds	2
   247  0077                     muoiSauLed@numberCountUp:
   248                           
   249                           ; 2 bytes @ 0x7
   250  0077                     	ds	2
   251  0079                     muoiSauLed@index:
   252                           
   253                           ; 1 bytes @ 0x9
   254  0079                     	ds	1
   255  007A                     muoiSauLed@score:
   256                           
   257                           ; 1 bytes @ 0xA
   258  007A                     	ds	1
   259  007B                     muoiSauLed@hold:
   260                           
   261                           ; 1 bytes @ 0xB
   262  007B                     	ds	1
   263  007C                     ??_main:
   264  007C                     main@count:	
   265                           ; 1 bytes @ 0xC
   266                           
   267                           
   268                           ; 2 bytes @ 0xC
   269  007C                     	ds	2
   270                           
   271                           	psect	maintext
   272  06B1                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 46 in file "BAI_2_SANG_DAN_D7_D0.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  count           2   12[COMMON] unsigned int 
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         2       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         2       0       0       0       0
   296 ;;Total ram usage:        2 bytes
   297 ;; Hardware stack levels required when called: 1
   298 ;; This function calls:
   299 ;;		_declarePort
   300 ;;		_muoiSauLed
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  06B1                     _main:
   309  06B1                     l759:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   312                           
   313                           
   314                           ;BAI_2_SANG_DAN_D7_D0.c: 47:     declarePort();
   315  06B1  120A  118A  26A4  120A  118A  	fcall	_declarePort
   316  06B6                     l761:
   317                           
   318                           ;BAI_2_SANG_DAN_D7_D0.c: 48:     unsigned int count = 0;
   319  06B6  01FC               	clrf	main@count
   320  06B7  01FD               	clrf	main@count+1
   321  06B8                     l763:
   322                           
   323                           ;BAI_2_SANG_DAN_D7_D0.c: 70:         if(count < 2) {
   324  06B8  3000               	movlw	0
   325  06B9  027D               	subwf	main@count+1,w
   326  06BA  3002               	movlw	2
   327  06BB  1903               	skipnz
   328  06BC  027C               	subwf	main@count,w
   329  06BD  1803               	skipnc
   330  06BE  2EC0               	goto	u101
   331  06BF  2EC1               	goto	u100
   332  06C0                     u101:
   333  06C0  2ECD               	goto	l769
   334  06C1                     u100:
   335  06C1                     l765:
   336                           
   337                           ;BAI_2_SANG_DAN_D7_D0.c: 71:             muoiSauLed();
   338  06C1  120A  118A  26D5  120A  118A  	fcall	_muoiSauLed
   339  06C6                     l767:
   340                           
   341                           ;BAI_2_SANG_DAN_D7_D0.c: 72:             count++;
   342  06C6  3001               	movlw	1
   343  06C7  07FC               	addwf	main@count,f
   344  06C8  1803               	skipnc
   345  06C9  0AFD               	incf	main@count+1,f
   346  06CA  3000               	movlw	0
   347  06CB  07FD               	addwf	main@count+1,f
   348                           
   349                           ;BAI_2_SANG_DAN_D7_D0.c: 73:         }else {
   350  06CC  2EB8               	goto	l763
   351  06CD                     l769:
   352                           
   353                           ;BAI_2_SANG_DAN_D7_D0.c: 74:             PORTC = 0xff;
   354  06CD  30FF               	movlw	255
   355  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   356  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   357  06D0  0087               	movwf	7	;volatile
   358  06D1  2EB8               	goto	l763
   359  06D2  120A  118A  2800   	ljmp	start
   360  06D5                     __end_of_main:
   361                           
   362                           	psect	text1
   363  06D5                     __ptext1:	
   364 ;; *************** function _muoiSauLed *****************
   365 ;; Defined at:
   366 ;;		line 169 in file "BAI_2_SANG_DAN_D7_D0.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  hold            1   11[COMMON] unsigned char 
   371 ;;  index           1    9[COMMON] unsigned char 
   372 ;;  score           1   10[COMMON] unsigned char 
   373 ;;  numberCountU    2    7[COMMON] unsigned int 
   374 ;;  numberRace      2    5[COMMON] unsigned int 
   375 ;;  numberFlash     2    3[COMMON] unsigned int 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         9       0       0       0       0
   387 ;;      Temps:          3       0       0       0       0
   388 ;;      Totals:        12       0       0       0       0
   389 ;;Total ram usage:       12 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _muoiSauLed
   400  06D5                     _muoiSauLed:
   401  06D5                     l691:	
   402                           ;incstack = 0
   403                           ; Regs used in _muoiSauLed: [wreg+status,2+status,0]
   404                           
   405                           
   406                           ;BAI_2_SANG_DAN_D7_D0.c: 170:     unsigned int numberFlash = 4, numberRace = 2, numberCo
      +                          untUp = 3;
   407  06D5  3004               	movlw	4
   408  06D6  00F3               	movwf	muoiSauLed@numberFlash
   409  06D7  3000               	movlw	0
   410  06D8  00F4               	movwf	muoiSauLed@numberFlash+1
   411  06D9  3002               	movlw	2
   412  06DA  00F5               	movwf	muoiSauLed@numberRace
   413  06DB  3000               	movlw	0
   414  06DC  00F6               	movwf	muoiSauLed@numberRace+1
   415  06DD  3003               	movlw	3
   416  06DE  00F7               	movwf	muoiSauLed@numberCountUp
   417  06DF  3000               	movlw	0
   418  06E0  00F8               	movwf	muoiSauLed@numberCountUp+1
   419                           
   420                           ;BAI_2_SANG_DAN_D7_D0.c: 172:     while(numberFlash > 0) {
   421  06E1  2F0A               	goto	l699
   422  06E2                     l693:
   423                           
   424                           ;BAI_2_SANG_DAN_D7_D0.c: 173:         _delay((unsigned long)((300)*(4000000/4000.0)));
   425  06E2  3002               	movlw	2
   426  06E3  00F2               	movwf	??_muoiSauLed+2
   427  06E4  3086               	movlw	134
   428  06E5  00F1               	movwf	??_muoiSauLed+1
   429  06E6  3099               	movlw	153
   430  06E7  00F0               	movwf	??_muoiSauLed
   431  06E8                     u257:
   432  06E8  0BF0               	decfsz	??_muoiSauLed,f
   433  06E9  2EE8               	goto	u257
   434  06EA  0BF1               	decfsz	??_muoiSauLed+1,f
   435  06EB  2EE8               	goto	u257
   436  06EC  0BF2               	decfsz	??_muoiSauLed+2,f
   437  06ED  2EE8               	goto	u257
   438                           
   439                           ;BAI_2_SANG_DAN_D7_D0.c: 174:         PORTC = 0xff;
   440  06EE  30FF               	movlw	255
   441  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   442  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   443  06F1  0087               	movwf	7	;volatile
   444                           
   445                           ;BAI_2_SANG_DAN_D7_D0.c: 175:         PORTD = 0xff;
   446  06F2  30FF               	movlw	255
   447  06F3  0088               	movwf	8	;volatile
   448                           
   449                           ;BAI_2_SANG_DAN_D7_D0.c: 176:         _delay((unsigned long)((300)*(4000000/4000.0)));
   450  06F4  3002               	movlw	2
   451  06F5  00F2               	movwf	??_muoiSauLed+2
   452  06F6  3086               	movlw	134
   453  06F7  00F1               	movwf	??_muoiSauLed+1
   454  06F8  3099               	movlw	153
   455  06F9  00F0               	movwf	??_muoiSauLed
   456  06FA                     u267:
   457  06FA  0BF0               	decfsz	??_muoiSauLed,f
   458  06FB  2EFA               	goto	u267
   459  06FC  0BF1               	decfsz	??_muoiSauLed+1,f
   460  06FD  2EFA               	goto	u267
   461  06FE  0BF2               	decfsz	??_muoiSauLed+2,f
   462  06FF  2EFA               	goto	u267
   463  0700                     l695:
   464                           
   465                           ;BAI_2_SANG_DAN_D7_D0.c: 177:         PORTC = 0x00;
   466  0700  1283               	bcf	3,5	;RP0=0, select bank0
   467  0701  1303               	bcf	3,6	;RP1=0, select bank0
   468  0702  0187               	clrf	7	;volatile
   469  0703                     l697:
   470                           
   471                           ;BAI_2_SANG_DAN_D7_D0.c: 178:         PORTD = 0x00;
   472  0703  0188               	clrf	8	;volatile
   473                           
   474                           ;BAI_2_SANG_DAN_D7_D0.c: 179:         numberFlash--;
   475  0704  3001               	movlw	1
   476  0705  02F3               	subwf	muoiSauLed@numberFlash,f
   477  0706  3000               	movlw	0
   478  0707  1C03               	skipc
   479  0708  03F4               	decf	muoiSauLed@numberFlash+1,f
   480  0709  02F4               	subwf	muoiSauLed@numberFlash+1,f
   481  070A                     l699:
   482                           
   483                           ;BAI_2_SANG_DAN_D7_D0.c: 172:     while(numberFlash > 0) {
   484  070A  0873               	movf	muoiSauLed@numberFlash,w
   485  070B  0474               	iorwf	muoiSauLed@numberFlash+1,w
   486  070C  1D03               	btfss	3,2
   487  070D  2F0F               	goto	u11
   488  070E  2F10               	goto	u10
   489  070F                     u11:
   490  070F  2EE2               	goto	l693
   491  0710                     u10:
   492  0710  2F7C               	goto	l725
   493  0711                     l701:
   494                           
   495                           ;BAI_2_SANG_DAN_D7_D0.c: 183:         PORTD = 0;
   496  0711  1283               	bcf	3,5	;RP0=0, select bank0
   497  0712  1303               	bcf	3,6	;RP1=0, select bank0
   498  0713  0188               	clrf	8	;volatile
   499  0714                     l703:
   500                           
   501                           ;BAI_2_SANG_DAN_D7_D0.c: 184:         _delay((unsigned long)((300)*(4000000/4000.0)));
   502  0714  3002               	movlw	2
   503  0715  00F2               	movwf	??_muoiSauLed+2
   504  0716  3086               	movlw	134
   505  0717  00F1               	movwf	??_muoiSauLed+1
   506  0718  3099               	movlw	153
   507  0719  00F0               	movwf	??_muoiSauLed
   508  071A                     u277:
   509  071A  0BF0               	decfsz	??_muoiSauLed,f
   510  071B  2F1A               	goto	u277
   511  071C  0BF1               	decfsz	??_muoiSauLed+1,f
   512  071D  2F1A               	goto	u277
   513  071E  0BF2               	decfsz	??_muoiSauLed+2,f
   514  071F  2F1A               	goto	u277
   515  0720                     l705:
   516                           
   517                           ;BAI_2_SANG_DAN_D7_D0.c: 185:         unsigned char score = 0;
   518  0720  01FA               	clrf	muoiSauLed@score
   519                           
   520                           ;BAI_2_SANG_DAN_D7_D0.c: 186:         while(score < 8) {
   521  0721  2F42               	goto	l81
   522  0722                     l707:
   523                           
   524                           ;BAI_2_SANG_DAN_D7_D0.c: 187:             PORTD = (0x80 >> score);
   525  0722  0A7A               	incf	muoiSauLed@score,w
   526  0723  00F0               	movwf	??_muoiSauLed
   527  0724  3080               	movlw	128
   528  0725  00F1               	movwf	??_muoiSauLed+1
   529  0726  3000               	movlw	0
   530  0727  00F2               	movwf	??_muoiSauLed+2
   531  0728  2F2C               	goto	u24
   532  0729                     u25:
   533  0729  0D72               	rlf	??_muoiSauLed+2,w
   534  072A  0CF2               	rrf	??_muoiSauLed+2,f
   535  072B  0CF1               	rrf	??_muoiSauLed+1,f
   536  072C                     u24:
   537  072C  0BF0               	decfsz	??_muoiSauLed,f
   538  072D  2F29               	goto	u25
   539  072E  0871               	movf	??_muoiSauLed+1,w
   540  072F  1283               	bcf	3,5	;RP0=0, select bank0
   541  0730  1303               	bcf	3,6	;RP1=0, select bank0
   542  0731  0088               	movwf	8	;volatile
   543  0732                     l709:
   544                           
   545                           ;BAI_2_SANG_DAN_D7_D0.c: 188:             _delay((unsigned long)((300)*(4000000/4000.0))
      +                          );
   546  0732  3002               	movlw	2
   547  0733  00F2               	movwf	??_muoiSauLed+2
   548  0734  3086               	movlw	134
   549  0735  00F1               	movwf	??_muoiSauLed+1
   550  0736  3099               	movlw	153
   551  0737  00F0               	movwf	??_muoiSauLed
   552  0738                     u287:
   553  0738  0BF0               	decfsz	??_muoiSauLed,f
   554  0739  2F38               	goto	u287
   555  073A  0BF1               	decfsz	??_muoiSauLed+1,f
   556  073B  2F38               	goto	u287
   557  073C  0BF2               	decfsz	??_muoiSauLed+2,f
   558  073D  2F38               	goto	u287
   559  073E                     l711:
   560                           
   561                           ;BAI_2_SANG_DAN_D7_D0.c: 189:             score++;
   562  073E  3001               	movlw	1
   563  073F  00F0               	movwf	??_muoiSauLed
   564  0740  0870               	movf	??_muoiSauLed,w
   565  0741  07FA               	addwf	muoiSauLed@score,f
   566  0742                     l81:	
   567                           ;BAI_2_SANG_DAN_D7_D0.c: 190:         }
   568                           
   569                           
   570                           ;BAI_2_SANG_DAN_D7_D0.c: 186:         while(score < 8) {
   571  0742  3008               	movlw	8
   572  0743  027A               	subwf	muoiSauLed@score,w
   573  0744  1C03               	skipc
   574  0745  2F47               	goto	u31
   575  0746  2F48               	goto	u30
   576  0747                     u31:
   577  0747  2F22               	goto	l707
   578  0748                     u30:
   579  0748                     l713:
   580                           
   581                           ;BAI_2_SANG_DAN_D7_D0.c: 191:         PORTD = 0;
   582  0748  1283               	bcf	3,5	;RP0=0, select bank0
   583  0749  1303               	bcf	3,6	;RP1=0, select bank0
   584  074A  0188               	clrf	8	;volatile
   585                           
   586                           ;BAI_2_SANG_DAN_D7_D0.c: 192:         score = 0;
   587  074B  01FA               	clrf	muoiSauLed@score
   588                           
   589                           ;BAI_2_SANG_DAN_D7_D0.c: 193:         while(score < 8) {
   590  074C  2F6D               	goto	l84
   591  074D                     l715:
   592                           
   593                           ;BAI_2_SANG_DAN_D7_D0.c: 194:             PORTC = (0x80 >> score);
   594  074D  0A7A               	incf	muoiSauLed@score,w
   595  074E  00F0               	movwf	??_muoiSauLed
   596  074F  3080               	movlw	128
   597  0750  00F1               	movwf	??_muoiSauLed+1
   598  0751  3000               	movlw	0
   599  0752  00F2               	movwf	??_muoiSauLed+2
   600  0753  2F57               	goto	u44
   601  0754                     u45:
   602  0754  0D72               	rlf	??_muoiSauLed+2,w
   603  0755  0CF2               	rrf	??_muoiSauLed+2,f
   604  0756  0CF1               	rrf	??_muoiSauLed+1,f
   605  0757                     u44:
   606  0757  0BF0               	decfsz	??_muoiSauLed,f
   607  0758  2F54               	goto	u45
   608  0759  0871               	movf	??_muoiSauLed+1,w
   609  075A  1283               	bcf	3,5	;RP0=0, select bank0
   610  075B  1303               	bcf	3,6	;RP1=0, select bank0
   611  075C  0087               	movwf	7	;volatile
   612  075D                     l717:
   613                           
   614                           ;BAI_2_SANG_DAN_D7_D0.c: 195:             _delay((unsigned long)((300)*(4000000/4000.0))
      +                          );
   615  075D  3002               	movlw	2
   616  075E  00F2               	movwf	??_muoiSauLed+2
   617  075F  3086               	movlw	134
   618  0760  00F1               	movwf	??_muoiSauLed+1
   619  0761  3099               	movlw	153
   620  0762  00F0               	movwf	??_muoiSauLed
   621  0763                     u297:
   622  0763  0BF0               	decfsz	??_muoiSauLed,f
   623  0764  2F63               	goto	u297
   624  0765  0BF1               	decfsz	??_muoiSauLed+1,f
   625  0766  2F63               	goto	u297
   626  0767  0BF2               	decfsz	??_muoiSauLed+2,f
   627  0768  2F63               	goto	u297
   628  0769                     l719:
   629                           
   630                           ;BAI_2_SANG_DAN_D7_D0.c: 196:             score++;
   631  0769  3001               	movlw	1
   632  076A  00F0               	movwf	??_muoiSauLed
   633  076B  0870               	movf	??_muoiSauLed,w
   634  076C  07FA               	addwf	muoiSauLed@score,f
   635  076D                     l84:	
   636                           ;BAI_2_SANG_DAN_D7_D0.c: 197:         }
   637                           
   638                           
   639                           ;BAI_2_SANG_DAN_D7_D0.c: 193:         while(score < 8) {
   640  076D  3008               	movlw	8
   641  076E  027A               	subwf	muoiSauLed@score,w
   642  076F  1C03               	skipc
   643  0770  2F72               	goto	u51
   644  0771  2F73               	goto	u50
   645  0772                     u51:
   646  0772  2F4D               	goto	l715
   647  0773                     u50:
   648  0773                     l721:
   649                           
   650                           ;BAI_2_SANG_DAN_D7_D0.c: 198:         PORTC = 0;
   651  0773  1283               	bcf	3,5	;RP0=0, select bank0
   652  0774  1303               	bcf	3,6	;RP1=0, select bank0
   653  0775  0187               	clrf	7	;volatile
   654  0776                     l723:
   655                           
   656                           ;BAI_2_SANG_DAN_D7_D0.c: 199:         numberRace--;
   657  0776  3001               	movlw	1
   658  0777  02F5               	subwf	muoiSauLed@numberRace,f
   659  0778  3000               	movlw	0
   660  0779  1C03               	skipc
   661  077A  03F6               	decf	muoiSauLed@numberRace+1,f
   662  077B  02F6               	subwf	muoiSauLed@numberRace+1,f
   663  077C                     l725:
   664                           
   665                           ;BAI_2_SANG_DAN_D7_D0.c: 182:     while(numberRace > 0) {
   666  077C  0875               	movf	muoiSauLed@numberRace,w
   667  077D  0476               	iorwf	muoiSauLed@numberRace+1,w
   668  077E  1D03               	btfss	3,2
   669  077F  2F81               	goto	u61
   670  0780  2F82               	goto	u60
   671  0781                     u61:
   672  0781  2F11               	goto	l701
   673  0782                     u60:
   674  0782  2FEF               	goto	l755
   675  0783                     l727:
   676                           
   677                           ;BAI_2_SANG_DAN_D7_D0.c: 202:         unsigned char index = 0;
   678  0783  01F9               	clrf	muoiSauLed@index
   679  0784                     l729:
   680                           
   681                           ;BAI_2_SANG_DAN_D7_D0.c: 203:         unsigned char hold = 0x80;
   682  0784  3080               	movlw	128
   683  0785  00F0               	movwf	??_muoiSauLed
   684  0786  0870               	movf	??_muoiSauLed,w
   685  0787  00FB               	movwf	muoiSauLed@hold
   686  0788                     l731:
   687                           
   688                           ;BAI_2_SANG_DAN_D7_D0.c: 204:         PORTD = 0;
   689  0788  1283               	bcf	3,5	;RP0=0, select bank0
   690  0789  1303               	bcf	3,6	;RP1=0, select bank0
   691  078A  0188               	clrf	8	;volatile
   692                           
   693                           ;BAI_2_SANG_DAN_D7_D0.c: 205:         _delay((unsigned long)((300)*(4000000/4000.0)));
   694  078B  3002               	movlw	2
   695  078C  00F2               	movwf	??_muoiSauLed+2
   696  078D  3086               	movlw	134
   697  078E  00F1               	movwf	??_muoiSauLed+1
   698  078F  3099               	movlw	153
   699  0790  00F0               	movwf	??_muoiSauLed
   700  0791                     u307:
   701  0791  0BF0               	decfsz	??_muoiSauLed,f
   702  0792  2F91               	goto	u307
   703  0793  0BF1               	decfsz	??_muoiSauLed+1,f
   704  0794  2F91               	goto	u307
   705  0795  0BF2               	decfsz	??_muoiSauLed+2,f
   706  0796  2F91               	goto	u307
   707                           
   708                           ;BAI_2_SANG_DAN_D7_D0.c: 206:         while(index < 8) {
   709  0797  2FB4               	goto	l90
   710  0798                     l733:
   711                           
   712                           ;BAI_2_SANG_DAN_D7_D0.c: 207:             PORTD = hold;
   713  0798  087B               	movf	muoiSauLed@hold,w
   714  0799  1283               	bcf	3,5	;RP0=0, select bank0
   715  079A  1303               	bcf	3,6	;RP1=0, select bank0
   716  079B  0088               	movwf	8	;volatile
   717                           
   718                           ;BAI_2_SANG_DAN_D7_D0.c: 208:             _delay((unsigned long)((300)*(4000000/4000.0))
      +                          );
   719  079C  3002               	movlw	2
   720  079D  00F2               	movwf	??_muoiSauLed+2
   721  079E  3086               	movlw	134
   722  079F  00F1               	movwf	??_muoiSauLed+1
   723  07A0  3099               	movlw	153
   724  07A1  00F0               	movwf	??_muoiSauLed
   725  07A2                     u317:
   726  07A2  0BF0               	decfsz	??_muoiSauLed,f
   727  07A3  2FA2               	goto	u317
   728  07A4  0BF1               	decfsz	??_muoiSauLed+1,f
   729  07A5  2FA2               	goto	u317
   730  07A6  0BF2               	decfsz	??_muoiSauLed+2,f
   731  07A7  2FA2               	goto	u317
   732  07A8                     l735:
   733                           
   734                           ;BAI_2_SANG_DAN_D7_D0.c: 209:             hold = (hold >> 1) | hold;
   735  07A8  087B               	movf	muoiSauLed@hold,w
   736  07A9  00F0               	movwf	??_muoiSauLed
   737  07AA  1003               	clrc
   738  07AB  0C70               	rrf	??_muoiSauLed,w
   739  07AC  047B               	iorwf	muoiSauLed@hold,w
   740  07AD  00F1               	movwf	??_muoiSauLed+1
   741  07AE  0871               	movf	??_muoiSauLed+1,w
   742  07AF  00FB               	movwf	muoiSauLed@hold
   743  07B0                     l737:
   744                           
   745                           ;BAI_2_SANG_DAN_D7_D0.c: 210:             index++;
   746  07B0  3001               	movlw	1
   747  07B1  00F0               	movwf	??_muoiSauLed
   748  07B2  0870               	movf	??_muoiSauLed,w
   749  07B3  07F9               	addwf	muoiSauLed@index,f
   750  07B4                     l90:	
   751                           ;BAI_2_SANG_DAN_D7_D0.c: 211:         }
   752                           
   753                           
   754                           ;BAI_2_SANG_DAN_D7_D0.c: 206:         while(index < 8) {
   755  07B4  3008               	movlw	8
   756  07B5  0279               	subwf	muoiSauLed@index,w
   757  07B6  1C03               	skipc
   758  07B7  2FB9               	goto	u71
   759  07B8  2FBA               	goto	u70
   760  07B9                     u71:
   761  07B9  2F98               	goto	l733
   762  07BA                     u70:
   763  07BA                     l739:
   764                           
   765                           ;BAI_2_SANG_DAN_D7_D0.c: 212:         index = 0;
   766  07BA  01F9               	clrf	muoiSauLed@index
   767  07BB                     l741:
   768                           
   769                           ;BAI_2_SANG_DAN_D7_D0.c: 213:         hold = 0x80;
   770  07BB  3080               	movlw	128
   771  07BC  00F0               	movwf	??_muoiSauLed
   772  07BD  0870               	movf	??_muoiSauLed,w
   773  07BE  00FB               	movwf	muoiSauLed@hold
   774  07BF                     l743:
   775                           
   776                           ;BAI_2_SANG_DAN_D7_D0.c: 214:         PORTC = 0;
   777  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   778  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   779  07C1  0187               	clrf	7	;volatile
   780                           
   781                           ;BAI_2_SANG_DAN_D7_D0.c: 215:         while(index < 8) {
   782  07C2  2FDF               	goto	l93
   783  07C3                     l745:
   784                           
   785                           ;BAI_2_SANG_DAN_D7_D0.c: 216:             PORTC = hold;
   786  07C3  087B               	movf	muoiSauLed@hold,w
   787  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   788  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   789  07C6  0087               	movwf	7	;volatile
   790                           
   791                           ;BAI_2_SANG_DAN_D7_D0.c: 217:             _delay((unsigned long)((300)*(4000000/4000.0))
      +                          );
   792  07C7  3002               	movlw	2
   793  07C8  00F2               	movwf	??_muoiSauLed+2
   794  07C9  3086               	movlw	134
   795  07CA  00F1               	movwf	??_muoiSauLed+1
   796  07CB  3099               	movlw	153
   797  07CC  00F0               	movwf	??_muoiSauLed
   798  07CD                     u327:
   799  07CD  0BF0               	decfsz	??_muoiSauLed,f
   800  07CE  2FCD               	goto	u327
   801  07CF  0BF1               	decfsz	??_muoiSauLed+1,f
   802  07D0  2FCD               	goto	u327
   803  07D1  0BF2               	decfsz	??_muoiSauLed+2,f
   804  07D2  2FCD               	goto	u327
   805  07D3                     l747:
   806                           
   807                           ;BAI_2_SANG_DAN_D7_D0.c: 218:             hold = (hold >> 1) | hold;
   808  07D3  087B               	movf	muoiSauLed@hold,w
   809  07D4  00F0               	movwf	??_muoiSauLed
   810  07D5  1003               	clrc
   811  07D6  0C70               	rrf	??_muoiSauLed,w
   812  07D7  047B               	iorwf	muoiSauLed@hold,w
   813  07D8  00F1               	movwf	??_muoiSauLed+1
   814  07D9  0871               	movf	??_muoiSauLed+1,w
   815  07DA  00FB               	movwf	muoiSauLed@hold
   816  07DB                     l749:
   817                           
   818                           ;BAI_2_SANG_DAN_D7_D0.c: 219:             index++;
   819  07DB  3001               	movlw	1
   820  07DC  00F0               	movwf	??_muoiSauLed
   821  07DD  0870               	movf	??_muoiSauLed,w
   822  07DE  07F9               	addwf	muoiSauLed@index,f
   823  07DF                     l93:	
   824                           ;BAI_2_SANG_DAN_D7_D0.c: 220:         }
   825                           
   826                           
   827                           ;BAI_2_SANG_DAN_D7_D0.c: 215:         while(index < 8) {
   828  07DF  3008               	movlw	8
   829  07E0  0279               	subwf	muoiSauLed@index,w
   830  07E1  1C03               	skipc
   831  07E2  2FE4               	goto	u81
   832  07E3  2FE5               	goto	u80
   833  07E4                     u81:
   834  07E4  2FC3               	goto	l745
   835  07E5                     u80:
   836  07E5                     l751:
   837                           
   838                           ;BAI_2_SANG_DAN_D7_D0.c: 221:         PORTC = 0;
   839  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   840  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   841  07E7  0187               	clrf	7	;volatile
   842                           
   843                           ;BAI_2_SANG_DAN_D7_D0.c: 222:         PORTD = 0;
   844  07E8  0188               	clrf	8	;volatile
   845  07E9                     l753:
   846                           
   847                           ;BAI_2_SANG_DAN_D7_D0.c: 223:         numberCountUp--;
   848  07E9  3001               	movlw	1
   849  07EA  02F7               	subwf	muoiSauLed@numberCountUp,f
   850  07EB  3000               	movlw	0
   851  07EC  1C03               	skipc
   852  07ED  03F8               	decf	muoiSauLed@numberCountUp+1,f
   853  07EE  02F8               	subwf	muoiSauLed@numberCountUp+1,f
   854  07EF                     l755:
   855                           
   856                           ;BAI_2_SANG_DAN_D7_D0.c: 201:     while(numberCountUp > 0) {
   857  07EF  0877               	movf	muoiSauLed@numberCountUp,w
   858  07F0  0478               	iorwf	muoiSauLed@numberCountUp+1,w
   859  07F1  1D03               	btfss	3,2
   860  07F2  2FF4               	goto	u91
   861  07F3  2FF5               	goto	u90
   862  07F4                     u91:
   863  07F4  2F83               	goto	l727
   864  07F5                     u90:
   865  07F5                     l757:
   866                           
   867                           ;BAI_2_SANG_DAN_D7_D0.c: 225:     PORTC = 0xff;
   868  07F5  30FF               	movlw	255
   869  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   870  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   871  07F8  0087               	movwf	7	;volatile
   872                           
   873                           ;BAI_2_SANG_DAN_D7_D0.c: 226:     PORTD = 0xff;
   874  07F9  30FF               	movlw	255
   875  07FA  0088               	movwf	8	;volatile
   876  07FB                     l97:
   877  07FB  0008               	return
   878  07FC                     __end_of_muoiSauLed:
   879                           
   880                           	psect	text2
   881  06A4                     __ptext2:	
   882 ;; *************** function _declarePort *****************
   883 ;; Defined at:
   884 ;;		line 79 in file "BAI_2_SANG_DAN_D7_D0.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _declarePort
   913  06A4                     _declarePort:
   914  06A4                     l689:	
   915                           ;incstack = 0
   916                           ; Regs used in _declarePort: [status,2]
   917                           
   918                           
   919                           ;BAI_2_SANG_DAN_D7_D0.c: 80:     ANSEL = ANSELH = 0;
   920  06A4  1683               	bsf	3,5	;RP0=1, select bank3
   921  06A5  1703               	bsf	3,6	;RP1=1, select bank3
   922  06A6  0189               	clrf	9	;volatile
   923  06A7  0188               	clrf	8	;volatile
   924                           
   925                           ;BAI_2_SANG_DAN_D7_D0.c: 81:     TRISD = 0;
   926  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   927  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   928  06AA  0188               	clrf	8	;volatile
   929                           
   930                           ;BAI_2_SANG_DAN_D7_D0.c: 82:     TRISC = 0;
   931  06AB  0187               	clrf	7	;volatile
   932                           
   933                           ;BAI_2_SANG_DAN_D7_D0.c: 83:     PORTC = 0;
   934  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   935  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   936  06AE  0187               	clrf	7	;volatile
   937                           
   938                           ;BAI_2_SANG_DAN_D7_D0.c: 84:     PORTD = 0;
   939  06AF  0188               	clrf	8	;volatile
   940  06B0                     l31:
   941  06B0  0008               	return
   942  06B1                     __end_of_declarePort:
   943  007E                     btemp	set	126	;btemp
   944  007E                     wtemp0	set	126
   945                           
   946                           	psect	config
   947                           
   948                           ;Config register CONFIG1 @ 0x2007
   949                           ;	Oscillator Selection bits
   950                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   951                           ;	Watchdog Timer Enable bit
   952                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   953                           ;	Power-up Timer Enable bit
   954                           ;	PWRTE = OFF, PWRT disabled
   955                           ;	RE3/MCLR pin function select bit
   956                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   957                           ;	Code Protection bit
   958                           ;	CP = OFF, Program memory code protection is disabled
   959                           ;	Data Code Protection bit
   960                           ;	CPD = OFF, Data memory code protection is disabled
   961                           ;	Brown Out Reset Selection bits
   962                           ;	BOREN = OFF, BOR disabled
   963                           ;	Internal External Switchover bit
   964                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   965                           ;	Fail-Safe Clock Monitor Enabled bit
   966                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   967                           ;	Low Voltage Programming Enable bit
   968                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   969                           ;	In-Circuit Debugger Mode bit
   970                           ;	DEBUG = 0x1, unprogrammed default
   971  2007                     	org	8199
   972  2007  20F2               	dw	8434
   973                           
   974                           ;Config register CONFIG2 @ 0x2008
   975                           ;	Brown-out Reset Selection bit
   976                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   977                           ;	Flash Program Memory Self Write Enable bits
   978                           ;	WRT = OFF, Write protection off
   979  2008                     	org	8200
   980  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_muoiSauLed

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     240
                                             12 COMMON     2     2      0
                        _declarePort
                         _muoiSauLed
 ---------------------------------------------------------------------------------
 (1) _muoiSauLed                                          12    12      0     225
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _muoiSauLed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 09 23:24:57 2021

                     l31 06B0                       l81 0742                       l90 07B4  
                     l84 076D                       l93 07DF                       l97 07FB  
                     u10 0710                       u11 070F                       u30 0748  
                     u31 0747                       u24 072C                       u25 0729  
                     u50 0773                       u51 0772                       u60 0782  
                     u44 0757                       u61 0781                       u45 0754  
                     u70 07BA                       u71 07B9                       u80 07E5  
                     u81 07E4                       u90 07F5                       u91 07F4  
                    l701 0711                      l711 073E                      l703 0714  
                    l721 0773                      l713 0748                      l705 0720  
                    l731 0788                      l723 0776                      l715 074D  
                    l707 0722                      l741 07BB                      l733 0798  
                    l717 075D                      l709 0732                      l725 077C  
                    l751 07E5                      l743 07BF                      l735 07A8  
                    l727 0783                      l719 0769                      l753 07E9  
                    l745 07C3                      l737 07B0                      l729 0784  
                    l761 06B6                      l747 07D3                      l739 07BA  
                    l755 07EF                      l691 06D5                      l763 06B8  
                    l757 07F5                      l749 07DB                      l693 06E2  
                    l765 06C1                      l695 0700                      l767 06C6  
                    l759 06B1                      l689 06A4                      l697 0703  
                    l769 06CD                      l699 070A                      u100 06C1  
                    u101 06C0                      u307 0791                      u317 07A2  
                    u327 07CD                      u257 06E8                      u267 06FA  
                    u277 071A                      u287 0738                      u297 0763  
        muoiSauLed@index 0079          muoiSauLed@score 007A                     _main 06B1  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088     __size_of_declarePort 000D  
  muoiSauLed@numberFlash 0073                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 06D5                   ??_main 007C  
                 _ANSELH 0189  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 06B1                  __ptext1 06D5                  __ptext2 06A4  
          ??_declarePort 0070     end_of_initialization 07FC  muoiSauLed@numberCountUp 0077  
             _muoiSauLed 06D5      __end_of_declarePort 06B1           muoiSauLed@hold 007B  
   muoiSauLed@numberRace 0075      start_initialization 07FC              ?_muoiSauLed 0070  
            _declarePort 06A4                ___latbits 0002      __size_of_muoiSauLed 0127  
              main@count 007C            __size_of_main 0024             ??_muoiSauLed 0070  
           ?_declarePort 0070       __end_of_muoiSauLed 07FC  
