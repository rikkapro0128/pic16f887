

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 07 01:09:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0031                     _RB1	set	49
   205  0030                     _RB0	set	48
   206  0058                     _RBIF	set	88
   207  005B                     _RBIE	set	91
   208  005F                     _GIE	set	95
   209  003A                     _RC2	set	58
   210  0096                     _IOCB	set	150
   211  0095                     _WPUB	set	149
   212  0086                     _TRISB	set	134
   213  040F                     _nRBPU	set	1039
   214  043A                     _TRISC2	set	1082
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  000F                     start_initialization:	
   220                           ; #config settings
   221                           
   222  000F                     __initialization:
   223                           
   224                           ; Clear objects allocated to COMMON
   225  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   226  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   227  0011                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  0011                     __end_of__initialization:
   231  0011  0183               	clrf	3
   232  0012  120A  118A  2861   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0074                     __pbssCOMMON:
   236  0074                     _count:
   237  0074                     	ds	2
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:
   241  0070                     ?_declarePort:
   242  0070                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_myIsr:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ??_myIsr:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253  0070                     	ds	4
   254  0074                     ??_declarePort:
   255  0074                     ??_main:	
   256                           ; 1 bytes @ 0x4
   257                           
   258                           
   259                           	psect	maintext
   260  0061                     __pmaintext:	
   261                           ; 1 bytes @ 0x4
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 40 in file "newmain.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels required when called: 2
   287 ;; This function calls:
   288 ;;		_declarePort
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           
   295                           ;psect for function _main
   296  0061                     _main:
   297  0061                     l667:	
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   300                           
   301                           
   302                           ;newmain.c: 41:     declarePort();
   303  0061  120A  118A  204B  120A  118A  	fcall	_declarePort
   304  0066                     l37:	
   305                           ;newmain.c: 42:     while(1);
   306                           
   307  0066                     l38:
   308  0066  2866               	goto	l37
   309  0067  120A  118A  280C   	ljmp	start
   310  006A                     __end_of_main:
   311                           
   312                           	psect	text1
   313  004B                     __ptext1:	
   314 ;; *************** function _declarePort *****************
   315 ;; Defined at:
   316 ;;		line 45 in file "newmain.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used: 1
   336 ;; Hardware stack levels required when called: 1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _declarePort
   346  004B                     _declarePort:
   347  004B                     l649:	
   348                           ;incstack = 0
   349                           ; Regs used in _declarePort: [wreg+status,2]
   350                           
   351                           
   352                           ;newmain.c: 46:     ANSEL = ANSELH = 0;
   353  004B  1683               	bsf	3,5	;RP0=1, select bank3
   354  004C  1703               	bsf	3,6	;RP1=1, select bank3
   355  004D  0189               	clrf	9	;volatile
   356  004E  0188               	clrf	8	;volatile
   357  004F                     l651:
   358                           
   359                           ;newmain.c: 47:     TRISC2 = 0;
   360  004F  1683               	bsf	3,5	;RP0=1, select bank1
   361  0050  1303               	bcf	3,6	;RP1=0, select bank1
   362  0051  1107               	bcf	7,2	;volatile
   363  0052                     l653:
   364                           
   365                           ;newmain.c: 48:     RC2 = 0;
   366  0052  1283               	bcf	3,5	;RP0=0, select bank0
   367  0053  1303               	bcf	3,6	;RP1=0, select bank0
   368  0054  1107               	bcf	7,2	;volatile
   369  0055                     l655:
   370                           
   371                           ;newmain.c: 49:     TRISB = 0x03;
   372  0055  3003               	movlw	3
   373  0056  1683               	bsf	3,5	;RP0=1, select bank1
   374  0057  1303               	bcf	3,6	;RP1=0, select bank1
   375  0058  0086               	movwf	6	;volatile
   376  0059                     l657:
   377                           
   378                           ;newmain.c: 50:     WPUB = 0x03;
   379  0059  3003               	movlw	3
   380  005A  0095               	movwf	21	;volatile
   381  005B                     l659:
   382                           
   383                           ;newmain.c: 51:     nRBPU = 0;
   384  005B  1381               	bcf	1,7	;volatile
   385  005C                     l661:
   386                           
   387                           ;newmain.c: 52:     GIE = 1;
   388  005C  178B               	bsf	11,7	;volatile
   389  005D                     l663:
   390                           
   391                           ;newmain.c: 54:     RBIE = 1;
   392  005D  158B               	bsf	11,3	;volatile
   393  005E                     l665:
   394                           
   395                           ;newmain.c: 55:     IOCB = 0x03;
   396  005E  3003               	movlw	3
   397  005F  0096               	movwf	22	;volatile
   398  0060                     l43:
   399  0060  0008               	return
   400  0061                     __end_of_declarePort:
   401                           
   402                           	psect	text2
   403  0015                     __ptext2:	
   404 ;; *************** function _myIsr *****************
   405 ;; Defined at:
   406 ;;		line 58 in file "newmain.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          4       0       0       0       0
   423 ;;      Totals:         4       0       0       0       0
   424 ;;Total ram usage:        4 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		Interrupt level 1
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _myIsr
   435  0015                     _myIsr:
   436  0015                     i1l669:
   437                           
   438                           ;newmain.c: 59:     if(RBIF) {
   439  0015  1C0B               	btfss	11,0	;volatile
   440  0016  2818               	goto	u1_21
   441  0017  2819               	goto	u1_20
   442  0018                     u1_21:
   443  0018  2844               	goto	i1l57
   444  0019                     u1_20:
   445  0019                     i1l671:
   446                           
   447                           ;newmain.c: 60:         if(!RB0) {
   448  0019  1283               	bcf	3,5	;RP0=0, select bank0
   449  001A  1303               	bcf	3,6	;RP1=0, select bank0
   450  001B  1806               	btfsc	6,0	;volatile
   451  001C  281E               	goto	u2_21
   452  001D  281F               	goto	u2_20
   453  001E                     u2_21:
   454  001E  282F               	goto	i1l49
   455  001F                     u2_20:
   456  001F                     i1l673:
   457                           
   458                           ;newmain.c: 61:             _delay((unsigned long)((50)*(4000000/4000.0)));
   459  001F  3041               	movlw	65
   460  0020  00F1               	movwf	??_myIsr+1
   461  0021  30EE               	movlw	238
   462  0022  00F0               	movwf	??_myIsr
   463  0023                     u6_27:
   464  0023  0BF0               	decfsz	??_myIsr,f
   465  0024  2823               	goto	u6_27
   466  0025  0BF1               	decfsz	??_myIsr+1,f
   467  0026  2823               	goto	u6_27
   468  0027  0000               	nop
   469  0028                     i1l50:	
   470                           ;newmain.c: 62:             while(!RB0);
   471                           
   472  0028  1283               	bcf	3,5	;RP0=0, select bank0
   473  0029  1303               	bcf	3,6	;RP1=0, select bank0
   474  002A  1C06               	btfss	6,0	;volatile
   475  002B  282D               	goto	u3_21
   476  002C  282E               	goto	u3_20
   477  002D                     u3_21:
   478  002D  2828               	goto	i1l50
   479  002E                     u3_20:
   480  002E                     i1l52:
   481                           
   482                           ;newmain.c: 63:             RC2 = 0;
   483  002E  1107               	bcf	7,2	;volatile
   484  002F                     i1l49:	
   485                           ;newmain.c: 64:         }
   486                           
   487                           
   488                           ;newmain.c: 65:         if(!RB1) {
   489  002F  1886               	btfsc	6,1	;volatile
   490  0030  2832               	goto	u4_21
   491  0031  2833               	goto	u4_20
   492  0032                     u4_21:
   493  0032  2843               	goto	i1l53
   494  0033                     u4_20:
   495  0033                     i1l675:
   496                           
   497                           ;newmain.c: 66:             _delay((unsigned long)((50)*(4000000/4000.0)));
   498  0033  3041               	movlw	65
   499  0034  00F1               	movwf	??_myIsr+1
   500  0035  30EE               	movlw	238
   501  0036  00F0               	movwf	??_myIsr
   502  0037                     u7_27:
   503  0037  0BF0               	decfsz	??_myIsr,f
   504  0038  2837               	goto	u7_27
   505  0039  0BF1               	decfsz	??_myIsr+1,f
   506  003A  2837               	goto	u7_27
   507  003B  0000               	nop
   508  003C                     i1l54:	
   509                           ;newmain.c: 67:             while(!RB1);
   510                           
   511  003C  1283               	bcf	3,5	;RP0=0, select bank0
   512  003D  1303               	bcf	3,6	;RP1=0, select bank0
   513  003E  1C86               	btfss	6,1	;volatile
   514  003F  2841               	goto	u5_21
   515  0040  2842               	goto	u5_20
   516  0041                     u5_21:
   517  0041  283C               	goto	i1l54
   518  0042                     u5_20:
   519  0042                     i1l56:
   520                           
   521                           ;newmain.c: 68:             RC2 = 1;
   522  0042  1507               	bsf	7,2	;volatile
   523  0043                     i1l53:	
   524                           ;newmain.c: 69:         }
   525                           
   526                           
   527                           ;newmain.c: 70:         RBIF = 0;
   528  0043  100B               	bcf	11,0	;volatile
   529  0044                     i1l57:
   530  0044  0873               	movf	??_myIsr+3,w
   531  0045  008A               	movwf	10
   532  0046  0E72               	swapf	??_myIsr+2,w
   533  0047  0083               	movwf	3
   534  0048  0EFE               	swapf	btemp,f
   535  0049  0E7E               	swapf	btemp,w
   536  004A  0009               	retfie
   537  004B                     __end_of_myIsr:
   538  007E                     btemp	set	126	;btemp
   539  007E                     wtemp0	set	126
   540                           
   541                           	psect	intentry
   542  0004                     __pintentry:	
   543                           ;incstack = 0
   544                           ; Regs used in _myIsr: [wreg]
   545                           
   546  0004                     interrupt_function:
   547  007E                     saved_w	set	btemp
   548  0004  00FE               	movwf	btemp
   549  0005  0E03               	swapf	3,w
   550  0006  00F2               	movwf	??_myIsr+2
   551  0007  080A               	movf	10,w
   552  0008  00F3               	movwf	??_myIsr+3
   553  0009  120A  118A  2815   	ljmp	_myIsr
   554                           
   555                           	psect	config
   556                           
   557                           ;Config register CONFIG1 @ 0x2007
   558                           ;	Oscillator Selection bits
   559                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   560                           ;	Watchdog Timer Enable bit
   561                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   562                           ;	Power-up Timer Enable bit
   563                           ;	PWRTE = OFF, PWRT disabled
   564                           ;	RE3/MCLR pin function select bit
   565                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   566                           ;	Code Protection bit
   567                           ;	CP = OFF, Program memory code protection is disabled
   568                           ;	Data Code Protection bit
   569                           ;	CPD = OFF, Data memory code protection is disabled
   570                           ;	Brown Out Reset Selection bits
   571                           ;	BOREN = OFF, BOR disabled
   572                           ;	Internal External Switchover bit
   573                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   574                           ;	Fail-Safe Clock Monitor Enabled bit
   575                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   576                           ;	Low Voltage Programming Enable bit
   577                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   578                           ;	In-Circuit Debugger Mode bit
   579                           ;	DEBUG = 0x1, unprogrammed default
   580  2007                     	org	8199
   581  2007  20F2               	dw	8434
   582                           
   583                           ;Config register CONFIG2 @ 0x2008
   584                           ;	Brown-out Reset Selection bit
   585                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   586                           ;	Flash Program Memory Self Write Enable bits
   587                           ;	WRT = OFF, Write protection off
   588  2008                     	org	8200
   589  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 07 01:09:10 2021

                     l43 0060                       l37 0066                       l38 0066  
                    l651 004F                      l661 005C                      l653 0052  
                    l663 005D                      l655 0055                      l665 005E  
                    l657 0059                      l649 004B                      l659 005B  
                    l667 0061                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RC2 003A                     _IOCB 0096  
                   _RBIE 005B                     _RBIF 0058                     i1l50 0028  
                   i1l52 002E                     i1l53 0043                     i1l54 003C  
                   i1l56 0042                     i1l49 002F                     i1l57 0044  
                   _WPUB 0095                     u1_20 0019                     u1_21 0018  
                   u2_20 001F                     u2_21 001E                     u3_20 002E  
                   u3_21 002D                     u4_20 0033                     u4_21 0032  
                   u5_20 0042                     u5_21 0041                     u6_27 0023  
                   u7_27 0037                     _main 0061                     btemp 007E  
                   start 000C                    ?_main 0070                    _ANSEL 0188  
                  i1l671 0019                    i1l673 001F                    i1l675 0033  
                  i1l669 0015                    _TRISB 0086                    _nRBPU 040F  
   __size_of_declarePort 0016                    _count 0074                    _myIsr 0015  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006A                   ??_main 0074  
                 ?_myIsr 0070                   _ANSELH 0189                   _TRISC2 043A  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_myIsr 004B                  ??_myIsr 0070               __pmaintext 0061  
             __pintentry 0004                  __ptext1 004B                  __ptext2 0015  
          ??_declarePort 0074     end_of_initialization 0011      __end_of_declarePort 0061  
    start_initialization 000F              _declarePort 004B              __pbssCOMMON 0074  
              ___latbits 0002           __size_of_myIsr 0036        interrupt_function 0004  
          __size_of_main 0009             ?_declarePort 0070                 intlevel1 0000  
