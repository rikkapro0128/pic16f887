

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 13 14:51:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0007                     _PORTC	set	7
   203  0006                     _PORTB	set	6
   204  0008                     _PORTD	set	8
   205  0086                     _TRISB	set	134
   206  0087                     _TRISC	set	135
   207  0088                     _TRISD	set	136
   208  0189                     _ANSELH	set	393
   209  0188                     _ANSEL	set	392
   210                           
   211                           	psect	cinit
   212  07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215  07FC                     __initialization:
   216  07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  07FC                     __end_of__initialization:
   220  07FC  0183               	clrf	3
   221  07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:
   225  0070                     ?_declarePort:
   226  0070                     ??_declarePort:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_flashCountUp:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_flashCountUp:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 1 bytes @ 0x0
   240  0070                     	ds	2
   241  0072                     flashCountUp@index:
   242                           
   243                           ; 2 bytes @ 0x2
   244  0072                     	ds	2
   245  0074                     flashCountUp@hold:
   246                           
   247                           ; 2 bytes @ 0x4
   248  0074                     	ds	2
   249  0076                     ??_main:
   250                           
   251                           	psect	maintext
   252  079E                     __pmaintext:	
   253                           ; 1 bytes @ 0x6
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 39 in file "BAI_2.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : B00/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 1
   279 ;; This function calls:
   280 ;;		_declarePort
   281 ;;		_flashCountUp
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _main
   289  079E                     _main:
   290  079E                     l645:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   293                           
   294                           
   295                           ;BAI_2.c: 40:     declarePort();
   296  079E  120A  118A  27AC  120A  118A  	fcall	_declarePort
   297  07A3                     l647:
   298                           
   299                           ;BAI_2.c: 42:     {;BAI_2.c: 43:        flashCountUp();
   300  07A3  120A  118A  27BB  120A  118A  	fcall	_flashCountUp
   301  07A8  2FA3               	goto	l647
   302  07A9  120A  118A  2800   	ljmp	start
   303  07AC                     __end_of_main:
   304                           
   305                           	psect	text1
   306  07BB                     __ptext1:	
   307 ;; *************** function _flashCountUp *****************
   308 ;; Defined at:
   309 ;;		line 47 in file "BAI_2.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  hold            2    4[COMMON] int 
   314 ;;  index           2    2[COMMON] int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, btemp+1
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         0       0       0       0       0
   325 ;;      Locals:         4       0       0       0       0
   326 ;;      Temps:          2       0       0       0       0
   327 ;;      Totals:         6       0       0       0       0
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _flashCountUp
   339  07BB                     _flashCountUp:
   340  07BB                     l633:	
   341                           ;incstack = 0
   342                           ; Regs used in _flashCountUp: [wreg+status,2+btemp+1]
   343                           
   344                           
   345                           ;BAI_2.c: 48:     int index = 0;
   346  07BB  01F2               	clrf	flashCountUp@index
   347  07BC  01F3               	clrf	flashCountUp@index+1
   348  07BD                     l635:
   349                           
   350                           ;BAI_2.c: 49:     int hold = 0x80;
   351  07BD  3080               	movlw	128
   352  07BE  00F4               	movwf	flashCountUp@hold
   353  07BF  3000               	movlw	0
   354  07C0  00F5               	movwf	flashCountUp@hold+1
   355  07C1                     l637:
   356                           
   357                           ;BAI_2.c: 50:     _delay((unsigned long)((50)*(4000000/4000.0)));
   358  07C1  3041               	movlw	65
   359  07C2  00F1               	movwf	??_flashCountUp+1
   360  07C3  30EE               	movlw	238
   361  07C4  00F0               	movwf	??_flashCountUp
   362  07C5                     u27:
   363  07C5  0BF0               	decfsz	??_flashCountUp,f
   364  07C6  2FC5               	goto	u27
   365  07C7  0BF1               	decfsz	??_flashCountUp+1,f
   366  07C8  2FC5               	goto	u27
   367  07C9  0000               	nop
   368                           
   369                           ;BAI_2.c: 51:     while(index < 8) {
   370  07CA  2FEB               	goto	l641
   371  07CB                     l639:
   372                           
   373                           ;BAI_2.c: 52:         PORTD = hold;
   374  07CB  0874               	movf	flashCountUp@hold,w
   375  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   376  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   377  07CE  0088               	movwf	8	;volatile
   378                           
   379                           ;BAI_2.c: 53:         _delay((unsigned long)((50)*(4000000/4000.0)));
   380  07CF  3041               	movlw	65
   381  07D0  00F1               	movwf	??_flashCountUp+1
   382  07D1  30EE               	movlw	238
   383  07D2  00F0               	movwf	??_flashCountUp
   384  07D3                     u37:
   385  07D3  0BF0               	decfsz	??_flashCountUp,f
   386  07D4  2FD3               	goto	u37
   387  07D5  0BF1               	decfsz	??_flashCountUp+1,f
   388  07D6  2FD3               	goto	u37
   389  07D7  0000               	nop
   390                           
   391                           ;BAI_2.c: 54:         hold = (hold >> 1) | hold;
   392  07D8  0875               	movf	flashCountUp@hold+1,w
   393  07D9  00F1               	movwf	??_flashCountUp+1
   394  07DA  0874               	movf	flashCountUp@hold,w
   395  07DB  00F0               	movwf	??_flashCountUp
   396  07DC  0D71               	rlf	??_flashCountUp+1,w
   397  07DD  0CF1               	rrf	??_flashCountUp+1,f
   398  07DE  0CF0               	rrf	??_flashCountUp,f
   399  07DF  0874               	movf	flashCountUp@hold,w
   400  07E0  0470               	iorwf	??_flashCountUp,w
   401  07E1  00F4               	movwf	flashCountUp@hold
   402  07E2  0875               	movf	flashCountUp@hold+1,w
   403  07E3  0471               	iorwf	??_flashCountUp+1,w
   404  07E4  00F5               	movwf	flashCountUp@hold+1
   405                           
   406                           ;BAI_2.c: 55:         index++;
   407  07E5  3001               	movlw	1
   408  07E6  07F2               	addwf	flashCountUp@index,f
   409  07E7  1803               	skipnc
   410  07E8  0AF3               	incf	flashCountUp@index+1,f
   411  07E9  3000               	movlw	0
   412  07EA  07F3               	addwf	flashCountUp@index+1,f
   413  07EB                     l641:
   414                           
   415                           ;BAI_2.c: 51:     while(index < 8) {
   416  07EB  0873               	movf	flashCountUp@index+1,w
   417  07EC  3A80               	xorlw	128
   418  07ED  00FF               	movwf	btemp+1
   419  07EE  3080               	movlw	128
   420  07EF  027F               	subwf	btemp+1,w
   421  07F0  1D03               	skipz
   422  07F1  2FF4               	goto	u15
   423  07F2  3008               	movlw	8
   424  07F3  0272               	subwf	flashCountUp@index,w
   425  07F4                     u15:
   426  07F4  1C03               	skipc
   427  07F5  2FF7               	goto	u11
   428  07F6  2FF8               	goto	u10
   429  07F7                     u11:
   430  07F7  2FCB               	goto	l639
   431  07F8                     u10:
   432  07F8                     l643:
   433                           
   434                           ;BAI_2.c: 57:     PORTD = 0;
   435  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   436  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   437  07FA  0188               	clrf	8	;volatile
   438  07FB                     l36:
   439  07FB  0008               	return
   440  07FC                     __end_of_flashCountUp:
   441                           
   442                           	psect	text2
   443  07AC                     __ptext2:	
   444 ;; *************** function _declarePort *****************
   445 ;; Defined at:
   446 ;;		line 60 in file "BAI_2.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _declarePort
   475  07AC                     _declarePort:
   476  07AC                     l631:	
   477                           ;incstack = 0
   478                           ; Regs used in _declarePort: [status,2]
   479                           
   480                           
   481                           ;BAI_2.c: 61:     ANSEL = ANSELH = 0;
   482  07AC  1683               	bsf	3,5	;RP0=1, select bank3
   483  07AD  1703               	bsf	3,6	;RP1=1, select bank3
   484  07AE  0189               	clrf	9	;volatile
   485  07AF  0188               	clrf	8	;volatile
   486                           
   487                           ;BAI_2.c: 62:     TRISD = 0;
   488  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   489  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   490  07B2  0188               	clrf	8	;volatile
   491                           
   492                           ;BAI_2.c: 63:     TRISC = 0;
   493  07B3  0187               	clrf	7	;volatile
   494                           
   495                           ;BAI_2.c: 64:     TRISB = 0;
   496  07B4  0186               	clrf	6	;volatile
   497                           
   498                           ;BAI_2.c: 65:     PORTB = 0;
   499  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   500  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   501  07B7  0186               	clrf	6	;volatile
   502                           
   503                           ;BAI_2.c: 66:     PORTC = 0;
   504  07B8  0187               	clrf	7	;volatile
   505                           
   506                           ;BAI_2.c: 67:     PORTD = 0;
   507  07B9  0188               	clrf	8	;volatile
   508  07BA                     l39:
   509  07BA  0008               	return
   510  07BB                     __end_of_declarePort:
   511  007E                     btemp	set	126	;btemp
   512  007E                     wtemp0	set	126
   513                           
   514                           	psect	config
   515                           
   516                           ;Config register CONFIG1 @ 0x2007
   517                           ;	Oscillator Selection bits
   518                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   519                           ;	Watchdog Timer Enable bit
   520                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   521                           ;	Power-up Timer Enable bit
   522                           ;	PWRTE = OFF, PWRT disabled
   523                           ;	RE3/MCLR pin function select bit
   524                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   525                           ;	Code Protection bit
   526                           ;	CP = OFF, Program memory code protection is disabled
   527                           ;	Data Code Protection bit
   528                           ;	CPD = OFF, Data memory code protection is disabled
   529                           ;	Brown Out Reset Selection bits
   530                           ;	BOREN = OFF, BOR disabled
   531                           ;	Internal External Switchover bit
   532                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   533                           ;	Fail-Safe Clock Monitor Enabled bit
   534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   535                           ;	Low Voltage Programming Enable bit
   536                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   537                           ;	In-Circuit Debugger Mode bit
   538                           ;	DEBUG = 0x1, unprogrammed default
   539  2007                     	org	8199
   540  2007  20F2               	dw	8434
   541                           
   542                           ;Config register CONFIG2 @ 0x2008
   543                           ;	Brown-out Reset Selection bit
   544                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   545                           ;	Flash Program Memory Self Write Enable bits
   546                           ;	WRT = OFF, Write protection off
   547  2008                     	org	8200
   548  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_flashCountUp

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                        _declarePort
                       _flashCountUp
 ---------------------------------------------------------------------------------
 (1) _flashCountUp                                         6     6      0      60
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _flashCountUp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 13 14:51:37 2021

                     l36 07FB                       l39 07BA                       u10 07F8  
                     u11 07F7                       u15 07F4                       u27 07C5  
                     u37 07D3                      l631 07AC                      l641 07EB  
                    l633 07BB                      l643 07F8                      l635 07BD  
                    l637 07C1                      l645 079E                      l639 07CB  
                    l647 07A3           ??_flashCountUp 0070                     _main 079E  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088     __size_of_declarePort 000F                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07AC  
                 ??_main 0076                   _ANSELH 0189     __end_of_flashCountUp 07FC  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 079E  
  __size_of_flashCountUp 0041                  __ptext1 07BB                  __ptext2 07AC  
          ??_declarePort 0070             _flashCountUp 07BB     end_of_initialization 07FC  
    __end_of_declarePort 07BB      start_initialization 07FC              _declarePort 07AC  
              ___latbits 0002            __size_of_main 000E        flashCountUp@index 0072  
           ?_declarePort 0070         flashCountUp@hold 0074            ?_flashCountUp 0070  
