

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 06 15:44:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0008                     _PORTD	set	8
   205  0037                     _RB7	set	55
   206  0036                     _RB6	set	54
   207  0035                     _RB5	set	53
   208  0034                     _RB4	set	52
   209  0033                     _RB3	set	51
   210  0032                     _RB2	set	50
   211  0031                     _RB1	set	49
   212  0030                     _RB0	set	48
   213  0058                     _RBIF	set	88
   214  005B                     _RBIE	set	91
   215  005F                     _GIE	set	95
   216  0096                     _IOCB	set	150
   217  0095                     _WPUB	set	149
   218  0086                     _TRISB	set	134
   219  0088                     _TRISD	set	136
   220  040F                     _nRBPU	set	1039
   221  0189                     _ANSELH	set	393
   222  0188                     _ANSEL	set	392
   223                           
   224                           	psect	cinit
   225  000F                     start_initialization:	
   226                           ; #config settings
   227                           
   228  000F                     __initialization:
   229                           
   230                           ; Clear objects allocated to COMMON
   231  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   232  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   233  0011                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0011                     __end_of__initialization:
   237  0011  0183               	clrf	3
   238  0012  120A  118A  286A   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0070                     __pbssCOMMON:
   242  0070                     _count:
   243  0070                     	ds	2
   244                           
   245                           	psect	cstackCOMMON
   246  0072                     __pcstackCOMMON:
   247  0072                     ?_declarePort:
   248  0072                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0072                     ?_myIsr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0072                     ??_myIsr:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0072                     	ds	2
   260  0074                     ??_declarePort:
   261  0074                     ??_main:	
   262                           ; 1 bytes @ 0x2
   263                           
   264                           
   265                           	psect	maintext
   266  006A                     __pmaintext:	
   267                           ; 1 bytes @ 0x2
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 40 in file "newmain.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0
   290 ;;      Totals:         0       0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels required when called: 2
   293 ;; This function calls:
   294 ;;		_declarePort
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _main
   302  006A                     _main:
   303  006A                     l670:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   306                           
   307                           
   308                           ;newmain.c: 41:     declarePort();
   309  006A  120A  118A  2055  120A  118A  	fcall	_declarePort
   310  006F                     l672:
   311                           
   312                           ;newmain.c: 43:         PORTD = count;
   313  006F  0870               	movf	_count,w
   314  0070  1283               	bcf	3,5	;RP0=0, select bank0
   315  0071  1303               	bcf	3,6	;RP1=0, select bank0
   316  0072  0088               	movwf	8	;volatile
   317  0073  286F               	goto	l672
   318  0074  120A  118A  280C   	ljmp	start
   319  0077                     __end_of_main:
   320                           
   321                           	psect	text1
   322  0055                     __ptext1:	
   323 ;; *************** function _declarePort *****************
   324 ;; Defined at:
   325 ;;		line 47 in file "newmain.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; Hardware stack levels required when called: 1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           
   354                           ;psect for function _declarePort
   355  0055                     _declarePort:
   356  0055                     l658:	
   357                           ;incstack = 0
   358                           ; Regs used in _declarePort: [wreg+status,2]
   359                           
   360                           
   361                           ;newmain.c: 48:     ANSEL = ANSELH = 0;
   362  0055  1683               	bsf	3,5	;RP0=1, select bank3
   363  0056  1703               	bsf	3,6	;RP1=1, select bank3
   364  0057  0189               	clrf	9	;volatile
   365  0058  0188               	clrf	8	;volatile
   366                           
   367                           ;newmain.c: 49:     TRISD = 0;
   368  0059  1683               	bsf	3,5	;RP0=1, select bank1
   369  005A  1303               	bcf	3,6	;RP1=0, select bank1
   370  005B  0188               	clrf	8	;volatile
   371                           
   372                           ;newmain.c: 50:     PORTD = 0;
   373  005C  1283               	bcf	3,5	;RP0=0, select bank0
   374  005D  1303               	bcf	3,6	;RP1=0, select bank0
   375  005E  0188               	clrf	8	;volatile
   376  005F                     l660:
   377                           
   378                           ;newmain.c: 51:     TRISB = WPUB = 0xff;
   379  005F  30FF               	movlw	255
   380  0060  1683               	bsf	3,5	;RP0=1, select bank1
   381  0061  1303               	bcf	3,6	;RP1=0, select bank1
   382  0062  0095               	movwf	21	;volatile
   383  0063  0086               	movwf	6	;volatile
   384  0064                     l662:
   385                           
   386                           ;newmain.c: 52:     nRBPU = 0;
   387  0064  1381               	bcf	1,7	;volatile
   388  0065                     l664:
   389                           
   390                           ;newmain.c: 53:     GIE = 1;
   391  0065  178B               	bsf	11,7	;volatile
   392  0066                     l666:
   393                           
   394                           ;newmain.c: 55:     RBIE = 1;
   395  0066  158B               	bsf	11,3	;volatile
   396  0067                     l668:
   397                           
   398                           ;newmain.c: 56:     IOCB = 0xff;
   399  0067  30FF               	movlw	255
   400  0068  0096               	movwf	22	;volatile
   401  0069                     l53:
   402  0069  0008               	return
   403  006A                     __end_of_declarePort:
   404                           
   405                           	psect	text2
   406  0015                     __ptext2:	
   407 ;; *************** function _myIsr *****************
   408 ;; Defined at:
   409 ;;		line 59 in file "newmain.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          2       0       0       0       0
   426 ;;      Totals:         2       0       0       0       0
   427 ;;Total ram usage:        2 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		Interrupt level 1
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _myIsr
   438  0015                     _myIsr:
   439  0015                     i1l674:
   440                           
   441                           ;newmain.c: 60:     if(RBIF) {
   442  0015  1C0B               	btfss	11,0	;volatile
   443  0016  2818               	goto	u1_21
   444  0017  2819               	goto	u1_20
   445  0018                     u1_21:
   446  0018  284E               	goto	i1l66
   447  0019                     u1_20:
   448  0019                     i1l676:
   449                           
   450                           ;newmain.c: 61:         if(!RB0 || !RB1 || !RB2 || !RB3 || !RB4 || !RB5 || !RB6 || !RB7)
      +                           {
   451  0019  1283               	bcf	3,5	;RP0=0, select bank0
   452  001A  1303               	bcf	3,6	;RP1=0, select bank0
   453  001B  1C06               	btfss	6,0	;volatile
   454  001C  281E               	goto	u2_21
   455  001D  281F               	goto	u2_20
   456  001E                     u2_21:
   457  001E  283B               	goto	i1l692
   458  001F                     u2_20:
   459  001F                     i1l678:
   460  001F  1C86               	btfss	6,1	;volatile
   461  0020  2822               	goto	u3_21
   462  0021  2823               	goto	u3_20
   463  0022                     u3_21:
   464  0022  283B               	goto	i1l692
   465  0023                     u3_20:
   466  0023                     i1l680:
   467  0023  1D06               	btfss	6,2	;volatile
   468  0024  2826               	goto	u4_21
   469  0025  2827               	goto	u4_20
   470  0026                     u4_21:
   471  0026  283B               	goto	i1l692
   472  0027                     u4_20:
   473  0027                     i1l682:
   474  0027  1D86               	btfss	6,3	;volatile
   475  0028  282A               	goto	u5_21
   476  0029  282B               	goto	u5_20
   477  002A                     u5_21:
   478  002A  283B               	goto	i1l692
   479  002B                     u5_20:
   480  002B                     i1l684:
   481  002B  1E06               	btfss	6,4	;volatile
   482  002C  282E               	goto	u6_21
   483  002D  282F               	goto	u6_20
   484  002E                     u6_21:
   485  002E  283B               	goto	i1l692
   486  002F                     u6_20:
   487  002F                     i1l686:
   488  002F  1E86               	btfss	6,5	;volatile
   489  0030  2832               	goto	u7_21
   490  0031  2833               	goto	u7_20
   491  0032                     u7_21:
   492  0032  283B               	goto	i1l692
   493  0033                     u7_20:
   494  0033                     i1l688:
   495  0033  1F06               	btfss	6,6	;volatile
   496  0034  2836               	goto	u8_21
   497  0035  2837               	goto	u8_20
   498  0036                     u8_21:
   499  0036  283B               	goto	i1l692
   500  0037                     u8_20:
   501  0037                     i1l690:
   502  0037  1B86               	btfsc	6,7	;volatile
   503  0038  283A               	goto	u9_21
   504  0039  283B               	goto	u9_20
   505  003A                     u9_21:
   506  003A  284D               	goto	i1l698
   507  003B                     u9_20:
   508  003B                     i1l692:
   509                           
   510                           ;newmain.c: 62:             count = count == 5 ? 0 : count + 1;
   511  003B  3005               	movlw	5
   512  003C  0670               	xorwf	_count,w
   513  003D  0471               	iorwf	_count+1,w
   514  003E  1903               	btfsc	3,2
   515  003F  2841               	goto	u10_21
   516  0040  2842               	goto	u10_20
   517  0041                     u10_21:
   518  0041  284B               	goto	i1l696
   519  0042                     u10_20:
   520  0042                     i1l694:
   521  0042  0870               	movf	_count,w
   522  0043  3E01               	addlw	1
   523  0044  00F0               	movwf	_count
   524  0045  0871               	movf	_count+1,w
   525  0046  1803               	skipnc
   526  0047  3E01               	addlw	1
   527  0048  3E00               	addlw	0
   528  0049  00F1               	movwf	_count+1
   529  004A  284D               	goto	i1l698
   530  004B                     i1l696:
   531  004B  01F0               	clrf	_count
   532  004C  01F1               	clrf	_count+1
   533  004D                     i1l698:
   534                           
   535                           ;newmain.c: 64:         RBIF = 0;
   536  004D  100B               	bcf	11,0	;volatile
   537  004E                     i1l66:
   538  004E  0873               	movf	??_myIsr+1,w
   539  004F  008A               	movwf	10
   540  0050  0E72               	swapf	??_myIsr,w
   541  0051  0083               	movwf	3
   542  0052  0EFE               	swapf	btemp,f
   543  0053  0E7E               	swapf	btemp,w
   544  0054  0009               	retfie
   545  0055                     __end_of_myIsr:
   546  007E                     btemp	set	126	;btemp
   547  007E                     wtemp0	set	126
   548                           
   549                           	psect	intentry
   550  0004                     __pintentry:	
   551                           ;incstack = 0
   552                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   553                           
   554  0004                     interrupt_function:
   555  007E                     saved_w	set	btemp
   556  0004  00FE               	movwf	btemp
   557  0005  0E03               	swapf	3,w
   558  0006  00F2               	movwf	??_myIsr
   559  0007  080A               	movf	10,w
   560  0008  00F3               	movwf	??_myIsr+1
   561  0009  120A  118A  2815   	ljmp	_myIsr
   562                           
   563                           	psect	config
   564                           
   565                           ;Config register CONFIG1 @ 0x2007
   566                           ;	Oscillator Selection bits
   567                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   568                           ;	Watchdog Timer Enable bit
   569                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   570                           ;	Power-up Timer Enable bit
   571                           ;	PWRTE = OFF, PWRT disabled
   572                           ;	RE3/MCLR pin function select bit
   573                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   574                           ;	Code Protection bit
   575                           ;	CP = OFF, Program memory code protection is disabled
   576                           ;	Data Code Protection bit
   577                           ;	CPD = OFF, Data memory code protection is disabled
   578                           ;	Brown Out Reset Selection bits
   579                           ;	BOREN = OFF, BOR disabled
   580                           ;	Internal External Switchover bit
   581                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   582                           ;	Fail-Safe Clock Monitor Enabled bit
   583                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   584                           ;	Low Voltage Programming Enable bit
   585                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   586                           ;	In-Circuit Debugger Mode bit
   587                           ;	DEBUG = 0x1, unprogrammed default
   588  2007                     	org	8199
   589  2007  20F2               	dw	8434
   590                           
   591                           ;Config register CONFIG2 @ 0x2008
   592                           ;	Brown-out Reset Selection bit
   593                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   594                           ;	Flash Program Memory Self Write Enable bits
   595                           ;	WRT = OFF, Write protection off
   596  2008                     	org	8200
   597  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 06 15:44:11 2021

                     l53 0069                      l660 005F                      l662 0064  
                    l670 006A                      l664 0065                      l672 006F  
                    l666 0066                      l658 0055                      l668 0067  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                   _IOCB 0096                     _RBIE 005B                     _RBIF 0058  
                   i1l66 004E                     _WPUB 0095                     u1_20 0019  
                   u1_21 0018                     u2_20 001F                     u2_21 001E  
                   u3_20 0023                     u3_21 0022                     u4_20 0027  
                   u4_21 0026                     u5_20 002B                     u5_21 002A  
                   u6_20 002F                     u6_21 002E                     u7_20 0033  
                   u7_21 0032                     u8_20 0037                     u8_21 0036  
                   u9_20 003B                     u9_21 003A                     _main 006A  
                   btemp 007E                     start 000C                    ?_main 0072  
                  _ANSEL 0188                    i1l680 0023                    i1l690 0037  
                  i1l682 0027                    i1l674 0015                    i1l684 002B  
                  i1l692 003B                    i1l676 0019                    i1l694 0042  
                  i1l686 002F                    i1l678 001F                    i1l696 004B  
                  i1l688 0033                    i1l698 004D                    u10_20 0042  
                  u10_21 0041                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _nRBPU 040F     __size_of_declarePort 0015  
                  _count 0070                    _myIsr 0015                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0077                   ??_main 0074                   ?_myIsr 0072  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0072            __end_of_myIsr 0055                  ??_myIsr 0072  
             __pmaintext 006A               __pintentry 0004                  __ptext1 0055  
                __ptext2 0015            ??_declarePort 0074     end_of_initialization 0011  
    __end_of_declarePort 006A      start_initialization 000F              _declarePort 0055  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_myIsr 0040  
      interrupt_function 0004            __size_of_main 000D             ?_declarePort 0072  
               intlevel1 0000  
