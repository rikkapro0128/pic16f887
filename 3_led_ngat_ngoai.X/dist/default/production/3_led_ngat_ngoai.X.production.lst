

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 08 23:33:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  006B                     __pidataCOMMON:
   209                           
   210                           ;initializer for _isOn
   211  006B  3401               	retlw	1
   212  006C  3400               	retlw	0
   213  0009                     _PORTE	set	9
   214  0058                     _RBIF	set	88
   215  0030                     _RB0	set	48
   216  005B                     _RBIE	set	91
   217  005F                     _GIE	set	95
   218  003A                     _RC2	set	58
   219  0096                     _IOCB	set	150
   220  0095                     _WPUB	set	149
   221  0086                     _TRISB	set	134
   222  0089                     _TRISE	set	137
   223  040F                     _nRBPU	set	1039
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           	psect	cinit
   228  000F                     start_initialization:	
   229                           ; #config settings
   230                           
   231  000F                     __initialization:
   232                           
   233                           ; Initialize objects allocated to COMMON
   234  000F  120A  118A  206B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   235  0014  00F6               	movwf	__pdataCOMMON& (0+127)
   236  0015  120A  118A  206C  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   237  001A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   238                           
   239                           ; Clear objects allocated to COMMON
   240  001B  01F4               	clrf	__pbssCOMMON& (0+127)
   241  001C  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   242  001D                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  001D                     __end_of__initialization:
   246  001D  0183               	clrf	3
   247  001E  120A  118A  2862   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMMON
   250  0074                     __pbssCOMMON:
   251  0074                     _count:
   252  0074                     	ds	2
   253                           
   254                           	psect	dataCOMMON
   255  0076                     __pdataCOMMON:
   256  0076                     _isOn:
   257  0076                     	ds	2
   258                           
   259                           	psect	cstackCOMMON
   260  0070                     __pcstackCOMMON:
   261  0070                     ?_declarePort:
   262  0070                     ?_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_myIsr:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ??_myIsr:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0070                     	ds	4
   274  0074                     ??_declarePort:
   275  0074                     ??_main:	
   276                           ; 1 bytes @ 0x4
   277                           
   278                           
   279                           	psect	maintext
   280  0062                     __pmaintext:	
   281                           ; 1 bytes @ 0x4
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 40 in file "newmain.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels required when called: 2
   307 ;; This function calls:
   308 ;;		_declarePort
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  0062                     _main:
   317  0062                     l660:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   320                           
   321                           
   322                           ;newmain.c: 41:     declarePort();
   323  0062  120A  118A  204C  120A  118A  	fcall	_declarePort
   324  0067                     l37:	
   325                           ;newmain.c: 42:     while(1);
   326                           
   327  0067                     l38:
   328  0067  2867               	goto	l37
   329  0068  120A  118A  280C   	ljmp	start
   330  006B                     __end_of_main:
   331                           
   332                           	psect	text1
   333  004C                     __ptext1:	
   334 ;; *************** function _declarePort *****************
   335 ;; Defined at:
   336 ;;		line 45 in file "newmain.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _declarePort
   366  004C                     _declarePort:
   367  004C                     l646:	
   368                           ;incstack = 0
   369                           ; Regs used in _declarePort: [wreg+status,2]
   370                           
   371                           
   372                           ;newmain.c: 46:     ANSEL = ANSELH = 0;
   373  004C  1683               	bsf	3,5	;RP0=1, select bank3
   374  004D  1703               	bsf	3,6	;RP1=1, select bank3
   375  004E  0189               	clrf	9	;volatile
   376  004F  0188               	clrf	8	;volatile
   377                           
   378                           ;newmain.c: 47:     TRISE = 0;
   379  0050  1683               	bsf	3,5	;RP0=1, select bank1
   380  0051  1303               	bcf	3,6	;RP1=0, select bank1
   381  0052  0189               	clrf	9	;volatile
   382                           
   383                           ;newmain.c: 48:     PORTE = 0;
   384  0053  1283               	bcf	3,5	;RP0=0, select bank0
   385  0054  1303               	bcf	3,6	;RP1=0, select bank0
   386  0055  0189               	clrf	9	;volatile
   387  0056                     l648:
   388                           
   389                           ;newmain.c: 49:     RC2 = 0;
   390  0056  1107               	bcf	7,2	;volatile
   391  0057                     l650:
   392                           
   393                           ;newmain.c: 50:     TRISB = WPUB = 0x01;
   394  0057  3001               	movlw	1
   395  0058  1683               	bsf	3,5	;RP0=1, select bank1
   396  0059  1303               	bcf	3,6	;RP1=0, select bank1
   397  005A  0095               	movwf	21	;volatile
   398  005B  0086               	movwf	6	;volatile
   399  005C                     l652:
   400                           
   401                           ;newmain.c: 51:     nRBPU = 0;
   402  005C  1381               	bcf	1,7	;volatile
   403  005D                     l654:
   404                           
   405                           ;newmain.c: 52:     GIE = 1;
   406  005D  178B               	bsf	11,7	;volatile
   407  005E                     l656:
   408                           
   409                           ;newmain.c: 53:     RBIE = 1;
   410  005E  158B               	bsf	11,3	;volatile
   411  005F                     l658:
   412                           
   413                           ;newmain.c: 54:     IOCB = 0x01;
   414  005F  3001               	movlw	1
   415  0060  0096               	movwf	22	;volatile
   416  0061                     l43:
   417  0061  0008               	return
   418  0062                     __end_of_declarePort:
   419                           
   420                           	psect	text2
   421  0021                     __ptext2:	
   422 ;; *************** function _myIsr *****************
   423 ;; Defined at:
   424 ;;		line 57 in file "newmain.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          4       0       0       0       0
   441 ;;      Totals:         4       0       0       0       0
   442 ;;Total ram usage:        4 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		Interrupt level 1
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _myIsr
   453  0021                     _myIsr:
   454  0021                     i1l662:
   455                           
   456                           ;newmain.c: 58:     if(!RB0) {
   457  0021  1283               	bcf	3,5	;RP0=0, select bank0
   458  0022  1303               	bcf	3,6	;RP1=0, select bank0
   459  0023  1806               	btfsc	6,0	;volatile
   460  0024  2826               	goto	u1_21
   461  0025  2827               	goto	u1_20
   462  0026                     u1_21:
   463  0026  2844               	goto	i1l676
   464  0027                     u1_20:
   465  0027                     i1l49:
   466  0027  1C06               	btfss	6,0	;volatile
   467  0028  282A               	goto	u2_21
   468  0029  282B               	goto	u2_20
   469  002A                     u2_21:
   470  002A  2827               	goto	i1l49
   471  002B                     u2_20:
   472  002B                     i1l666:
   473                           
   474                           ;newmain.c: 60:         if(isOn) {
   475  002B  0876               	movf	_isOn,w
   476  002C  0477               	iorwf	_isOn+1,w
   477  002D  1903               	btfsc	3,2
   478  002E  2830               	goto	u3_21
   479  002F  2831               	goto	u3_20
   480  0030                     u3_21:
   481  0030  2842               	goto	i1l672
   482  0031                     u3_20:
   483  0031                     i1l668:
   484                           
   485                           ;newmain.c: 61:             PORTE = 0xff;
   486  0031  30FF               	movlw	255
   487  0032  0089               	movwf	9	;volatile
   488  0033                     i1l670:
   489                           
   490                           ;newmain.c: 62:             isOn = !isOn;
   491  0033  0876               	movf	_isOn,w
   492  0034  0477               	iorwf	_isOn+1,w
   493  0035  1903               	btfsc	3,2
   494  0036  2838               	goto	u4_21
   495  0037  283A               	goto	u4_20
   496  0038                     u4_21:
   497  0038  3001               	movlw	1
   498  0039  283B               	goto	u5_20
   499  003A                     u4_20:
   500  003A  3000               	movlw	0
   501  003B                     u5_20:
   502  003B  00F0               	movwf	??_myIsr
   503  003C  01F1               	clrf	??_myIsr+1
   504  003D  0870               	movf	??_myIsr,w
   505  003E  00F6               	movwf	_isOn
   506  003F  0871               	movf	??_myIsr+1,w
   507  0040  00F7               	movwf	_isOn+1
   508                           
   509                           ;newmain.c: 63:         }else {
   510  0041  2844               	goto	i1l676
   511  0042                     i1l672:
   512                           
   513                           ;newmain.c: 64:             PORTE = 0;
   514  0042  0189               	clrf	9	;volatile
   515  0043  2833               	goto	i1l670
   516  0044                     i1l676:
   517                           
   518                           ;newmain.c: 68:     RBIF = 0;
   519  0044  100B               	bcf	11,0	;volatile
   520  0045                     i1l54:
   521  0045  0873               	movf	??_myIsr+3,w
   522  0046  008A               	movwf	10
   523  0047  0E72               	swapf	??_myIsr+2,w
   524  0048  0083               	movwf	3
   525  0049  0EFE               	swapf	btemp,f
   526  004A  0E7E               	swapf	btemp,w
   527  004B  0009               	retfie
   528  004C                     __end_of_myIsr:
   529  007E                     btemp	set	126	;btemp
   530  007E                     wtemp0	set	126
   531                           
   532                           	psect	intentry
   533  0004                     __pintentry:	
   534                           ;incstack = 0
   535                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   536                           
   537  0004                     interrupt_function:
   538  007E                     saved_w	set	btemp
   539  0004  00FE               	movwf	btemp
   540  0005  0E03               	swapf	3,w
   541  0006  00F2               	movwf	??_myIsr+2
   542  0007  080A               	movf	10,w
   543  0008  00F3               	movwf	??_myIsr+3
   544  0009  120A  118A  2821   	ljmp	_myIsr
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG1 @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = OFF, PWRT disabled
   555                           ;	RE3/MCLR pin function select bit
   556                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   557                           ;	Code Protection bit
   558                           ;	CP = OFF, Program memory code protection is disabled
   559                           ;	Data Code Protection bit
   560                           ;	CPD = OFF, Data memory code protection is disabled
   561                           ;	Brown Out Reset Selection bits
   562                           ;	BOREN = OFF, BOR disabled
   563                           ;	Internal External Switchover bit
   564                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   565                           ;	Fail-Safe Clock Monitor Enabled bit
   566                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   567                           ;	Low Voltage Programming Enable bit
   568                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   569                           ;	In-Circuit Debugger Mode bit
   570                           ;	DEBUG = 0x1, unprogrammed default
   571  2007                     	org	8199
   572  2007  20F2               	dw	8434
   573                           
   574                           ;Config register CONFIG2 @ 0x2008
   575                           ;	Brown-out Reset Selection bit
   576                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   577                           ;	Flash Program Memory Self Write Enable bits
   578                           ;	WRT = OFF, Write protection off
   579  2008                     	org	8200
   580  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 08 23:33:01 2021

                     l43 0061                       l37 0067                       l38 0067  
                    l650 0057                      l652 005C                      l660 0062  
                    l654 005D                      l646 004C                      l656 005E  
                    l648 0056                      l658 005F                      _GIE 005F  
                    _RB0 0030                      _RC2 003A                     _IOCB 0096  
                   _RBIE 005B                     _RBIF 0058                     i1l54 0045  
                   i1l49 0027                     _WPUB 0095                     u1_20 0027  
                   u1_21 0026                     u2_20 002B                     u2_21 002A  
                   u3_20 0031                     u3_21 0030                     u4_20 003A  
                   u4_21 0038                     u5_20 003B                     _isOn 0076  
                   _main 0062                     btemp 007E                     start 000C  
                  ?_main 0070                    _ANSEL 0188                    i1l670 0033  
                  i1l662 0021                    i1l672 0042                    i1l666 002B  
                  i1l668 0031                    i1l676 0044                    _PORTE 0009  
                  _TRISB 0086                    _TRISE 0089                    _nRBPU 040F  
   __size_of_declarePort 0016                    _count 0074                    _myIsr 0021  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006B                   ??_main 0074  
                 ?_myIsr 0070                   _ANSELH 0189             __pdataCOMMON 0076  
                 saved_w 007E  __end_of__initialization 001D           __pcstackCOMMON 0070  
          __end_of_myIsr 004C                  ??_myIsr 0070               __pmaintext 0062  
             __pintentry 0004                  __ptext1 004C                  __ptext2 0021  
          ??_declarePort 0074     end_of_initialization 001D      __end_of_declarePort 0062  
          __pidataCOMMON 006B      start_initialization 000F              _declarePort 004C  
            __pbssCOMMON 0074                ___latbits 0002           __size_of_myIsr 002B  
      interrupt_function 0004            __size_of_main 0009             ?_declarePort 0070  
               intlevel1 0000  
