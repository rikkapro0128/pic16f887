

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 13 15:11:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0006                     _PORTB	set	6
   203  0008                     _PORTD	set	8
   204  0007                     _PORTC	set	7
   205  0086                     _TRISB	set	134
   206  0087                     _TRISC	set	135
   207  0088                     _TRISD	set	136
   208  0189                     _ANSELH	set	393
   209  0188                     _ANSEL	set	392
   210                           
   211                           	psect	cinit
   212  07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215  07FC                     __initialization:
   216  07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  07FC                     __end_of__initialization:
   220  07FC  0183               	clrf	3
   221  07FD  120A  118A  2EC9   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:
   225  0070                     ?_declarePort:
   226  0070                     ??_declarePort:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_muoiSauLed:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_muoiSauLed:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 1 bytes @ 0x0
   240  0070                     	ds	3
   241  0073                     muoiSauLed@numberFlash:
   242                           
   243                           ; 2 bytes @ 0x3
   244  0073                     	ds	2
   245  0075                     muoiSauLed@numberRace:
   246                           
   247                           ; 2 bytes @ 0x5
   248  0075                     	ds	2
   249  0077                     muoiSauLed@numberCountUp:
   250                           
   251                           ; 2 bytes @ 0x7
   252  0077                     	ds	2
   253  0079                     muoiSauLed@index:
   254                           
   255                           ; 1 bytes @ 0x9
   256  0079                     	ds	1
   257  007A                     muoiSauLed@score:
   258                           
   259                           ; 1 bytes @ 0xA
   260  007A                     	ds	1
   261  007B                     muoiSauLed@hold:
   262                           
   263                           ; 1 bytes @ 0xB
   264  007B                     	ds	1
   265  007C                     ??_main:
   266  007C                     main@count:	
   267                           ; 1 bytes @ 0xC
   268                           
   269                           
   270                           ; 2 bytes @ 0xC
   271  007C                     	ds	2
   272                           
   273                           	psect	maintext
   274  06C9                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 39 in file "BAI_5.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  count           2   12[COMMON] unsigned int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         2       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0
   297 ;;      Totals:         2       0       0       0       0
   298 ;;Total ram usage:        2 bytes
   299 ;; Hardware stack levels required when called: 1
   300 ;; This function calls:
   301 ;;		_declarePort
   302 ;;		_muoiSauLed
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           
   309                           ;psect for function _main
   310  06C9                     _main:
   311  06C9                     l721:	
   312                           ;incstack = 0
   313                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   314                           
   315                           
   316                           ;BAI_5.c: 40:     declarePort();
   317  06C9  120A  118A  26BA  120A  118A  	fcall	_declarePort
   318  06CE                     l723:
   319                           
   320                           ;BAI_5.c: 41:     unsigned int count = 0;
   321  06CE  01FC               	clrf	main@count
   322  06CF  01FD               	clrf	main@count+1
   323  06D0                     l725:
   324                           
   325                           ;BAI_5.c: 43:     {;BAI_5.c: 44:         if(count < 2) {
   326  06D0  3000               	movlw	0
   327  06D1  027D               	subwf	main@count+1,w
   328  06D2  3002               	movlw	2
   329  06D3  1903               	skipnz
   330  06D4  027C               	subwf	main@count,w
   331  06D5  1803               	skipnc
   332  06D6  2ED8               	goto	u101
   333  06D7  2ED9               	goto	u100
   334  06D8                     u101:
   335  06D8  2EE5               	goto	l731
   336  06D9                     u100:
   337  06D9                     l727:
   338                           
   339                           ;BAI_5.c: 45:             muoiSauLed();
   340  06D9  120A  118A  26ED  120A  118A  	fcall	_muoiSauLed
   341  06DE                     l729:
   342                           
   343                           ;BAI_5.c: 46:             count++;
   344  06DE  3001               	movlw	1
   345  06DF  07FC               	addwf	main@count,f
   346  06E0  1803               	skipnc
   347  06E1  0AFD               	incf	main@count+1,f
   348  06E2  3000               	movlw	0
   349  06E3  07FD               	addwf	main@count+1,f
   350                           
   351                           ;BAI_5.c: 47:         }else {
   352  06E4  2ED0               	goto	l725
   353  06E5                     l731:
   354                           
   355                           ;BAI_5.c: 48:             PORTC = 0xff;
   356  06E5  30FF               	movlw	255
   357  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   358  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   359  06E8  0087               	movwf	7	;volatile
   360  06E9  2ED0               	goto	l725
   361  06EA  120A  118A  2800   	ljmp	start
   362  06ED                     __end_of_main:
   363                           
   364                           	psect	text1
   365  06ED                     __ptext1:	
   366 ;; *************** function _muoiSauLed *****************
   367 ;; Defined at:
   368 ;;		line 53 in file "BAI_5.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  hold            1   11[COMMON] unsigned char 
   373 ;;  index           1    9[COMMON] unsigned char 
   374 ;;  score           1   10[COMMON] unsigned char 
   375 ;;  numberCountU    2    7[COMMON] unsigned int 
   376 ;;  numberRace      2    5[COMMON] unsigned int 
   377 ;;  numberFlash     2    3[COMMON] unsigned int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         9       0       0       0       0
   389 ;;      Temps:          3       0       0       0       0
   390 ;;      Totals:        12       0       0       0       0
   391 ;;Total ram usage:       12 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _muoiSauLed
   402  06ED                     _muoiSauLed:
   403  06ED                     l653:	
   404                           ;incstack = 0
   405                           ; Regs used in _muoiSauLed: [wreg+status,2+status,0]
   406                           
   407                           
   408                           ;BAI_5.c: 54:     unsigned int numberFlash = 4, numberRace = 2, numberCountUp = 3;
   409  06ED  3004               	movlw	4
   410  06EE  00F3               	movwf	muoiSauLed@numberFlash
   411  06EF  3000               	movlw	0
   412  06F0  00F4               	movwf	muoiSauLed@numberFlash+1
   413  06F1  3002               	movlw	2
   414  06F2  00F5               	movwf	muoiSauLed@numberRace
   415  06F3  3000               	movlw	0
   416  06F4  00F6               	movwf	muoiSauLed@numberRace+1
   417  06F5  3003               	movlw	3
   418  06F6  00F7               	movwf	muoiSauLed@numberCountUp
   419  06F7  3000               	movlw	0
   420  06F8  00F8               	movwf	muoiSauLed@numberCountUp+1
   421                           
   422                           ;BAI_5.c: 56:     while(numberFlash > 0) {
   423  06F9  2F1C               	goto	l661
   424  06FA                     l655:
   425                           
   426                           ;BAI_5.c: 57:         _delay((unsigned long)((50)*(4000000/4000.0)));
   427  06FA  3041               	movlw	65
   428  06FB  00F1               	movwf	??_muoiSauLed+1
   429  06FC  30EE               	movlw	238
   430  06FD  00F0               	movwf	??_muoiSauLed
   431  06FE                     u117:
   432  06FE  0BF0               	decfsz	??_muoiSauLed,f
   433  06FF  2EFE               	goto	u117
   434  0700  0BF1               	decfsz	??_muoiSauLed+1,f
   435  0701  2EFE               	goto	u117
   436  0702  0000               	nop
   437                           
   438                           ;BAI_5.c: 58:         PORTC = 0xff;
   439  0703  30FF               	movlw	255
   440  0704  1283               	bcf	3,5	;RP0=0, select bank0
   441  0705  1303               	bcf	3,6	;RP1=0, select bank0
   442  0706  0087               	movwf	7	;volatile
   443                           
   444                           ;BAI_5.c: 59:         PORTD = 0xff;
   445  0707  30FF               	movlw	255
   446  0708  0088               	movwf	8	;volatile
   447                           
   448                           ;BAI_5.c: 60:         _delay((unsigned long)((50)*(4000000/4000.0)));
   449  0709  3041               	movlw	65
   450  070A  00F1               	movwf	??_muoiSauLed+1
   451  070B  30EE               	movlw	238
   452  070C  00F0               	movwf	??_muoiSauLed
   453  070D                     u127:
   454  070D  0BF0               	decfsz	??_muoiSauLed,f
   455  070E  2F0D               	goto	u127
   456  070F  0BF1               	decfsz	??_muoiSauLed+1,f
   457  0710  2F0D               	goto	u127
   458  0711  0000               	nop
   459  0712                     l657:
   460                           
   461                           ;BAI_5.c: 61:         PORTC = 0x00;
   462  0712  1283               	bcf	3,5	;RP0=0, select bank0
   463  0713  1303               	bcf	3,6	;RP1=0, select bank0
   464  0714  0187               	clrf	7	;volatile
   465  0715                     l659:
   466                           
   467                           ;BAI_5.c: 62:         PORTD = 0x00;
   468  0715  0188               	clrf	8	;volatile
   469                           
   470                           ;BAI_5.c: 63:         numberFlash--;
   471  0716  3001               	movlw	1
   472  0717  02F3               	subwf	muoiSauLed@numberFlash,f
   473  0718  3000               	movlw	0
   474  0719  1C03               	skipc
   475  071A  03F4               	decf	muoiSauLed@numberFlash+1,f
   476  071B  02F4               	subwf	muoiSauLed@numberFlash+1,f
   477  071C                     l661:
   478                           
   479                           ;BAI_5.c: 56:     while(numberFlash > 0) {
   480  071C  0873               	movf	muoiSauLed@numberFlash,w
   481  071D  0474               	iorwf	muoiSauLed@numberFlash+1,w
   482  071E  1D03               	btfss	3,2
   483  071F  2F21               	goto	u11
   484  0720  2F22               	goto	u10
   485  0721                     u11:
   486  0721  2EFA               	goto	l655
   487  0722                     u10:
   488  0722  2F85               	goto	l687
   489  0723                     l663:
   490                           
   491                           ;BAI_5.c: 67:         PORTD = 0;
   492  0723  1283               	bcf	3,5	;RP0=0, select bank0
   493  0724  1303               	bcf	3,6	;RP1=0, select bank0
   494  0725  0188               	clrf	8	;volatile
   495  0726                     l665:
   496                           
   497                           ;BAI_5.c: 68:         _delay((unsigned long)((50)*(4000000/4000.0)));
   498  0726  3041               	movlw	65
   499  0727  00F1               	movwf	??_muoiSauLed+1
   500  0728  30EE               	movlw	238
   501  0729  00F0               	movwf	??_muoiSauLed
   502  072A                     u137:
   503  072A  0BF0               	decfsz	??_muoiSauLed,f
   504  072B  2F2A               	goto	u137
   505  072C  0BF1               	decfsz	??_muoiSauLed+1,f
   506  072D  2F2A               	goto	u137
   507  072E  0000               	nop
   508  072F                     l667:
   509                           
   510                           ;BAI_5.c: 69:         unsigned char score = 0;
   511  072F  01FA               	clrf	muoiSauLed@score
   512                           
   513                           ;BAI_5.c: 70:         while(score < 8) {
   514  0730  2F4E               	goto	l40
   515  0731                     l669:
   516                           
   517                           ;BAI_5.c: 71:             PORTD = (0x80 >> score);
   518  0731  0A7A               	incf	muoiSauLed@score,w
   519  0732  00F0               	movwf	??_muoiSauLed
   520  0733  3080               	movlw	128
   521  0734  00F1               	movwf	??_muoiSauLed+1
   522  0735  3000               	movlw	0
   523  0736  00F2               	movwf	??_muoiSauLed+2
   524  0737  2F3B               	goto	u24
   525  0738                     u25:
   526  0738  0D72               	rlf	??_muoiSauLed+2,w
   527  0739  0CF2               	rrf	??_muoiSauLed+2,f
   528  073A  0CF1               	rrf	??_muoiSauLed+1,f
   529  073B                     u24:
   530  073B  0BF0               	decfsz	??_muoiSauLed,f
   531  073C  2F38               	goto	u25
   532  073D  0871               	movf	??_muoiSauLed+1,w
   533  073E  1283               	bcf	3,5	;RP0=0, select bank0
   534  073F  1303               	bcf	3,6	;RP1=0, select bank0
   535  0740  0088               	movwf	8	;volatile
   536  0741                     l671:
   537                           
   538                           ;BAI_5.c: 72:             _delay((unsigned long)((50)*(4000000/4000.0)));
   539  0741  3041               	movlw	65
   540  0742  00F1               	movwf	??_muoiSauLed+1
   541  0743  30EE               	movlw	238
   542  0744  00F0               	movwf	??_muoiSauLed
   543  0745                     u147:
   544  0745  0BF0               	decfsz	??_muoiSauLed,f
   545  0746  2F45               	goto	u147
   546  0747  0BF1               	decfsz	??_muoiSauLed+1,f
   547  0748  2F45               	goto	u147
   548  0749  0000               	nop
   549  074A                     l673:
   550                           
   551                           ;BAI_5.c: 73:             score++;
   552  074A  3001               	movlw	1
   553  074B  00F0               	movwf	??_muoiSauLed
   554  074C  0870               	movf	??_muoiSauLed,w
   555  074D  07FA               	addwf	muoiSauLed@score,f
   556  074E                     l40:	
   557                           ;BAI_5.c: 74:         }
   558                           
   559                           
   560                           ;BAI_5.c: 70:         while(score < 8) {
   561  074E  3008               	movlw	8
   562  074F  027A               	subwf	muoiSauLed@score,w
   563  0750  1C03               	skipc
   564  0751  2F53               	goto	u31
   565  0752  2F54               	goto	u30
   566  0753                     u31:
   567  0753  2F31               	goto	l669
   568  0754                     u30:
   569  0754                     l675:
   570                           
   571                           ;BAI_5.c: 75:         PORTD = 0;
   572  0754  1283               	bcf	3,5	;RP0=0, select bank0
   573  0755  1303               	bcf	3,6	;RP1=0, select bank0
   574  0756  0188               	clrf	8	;volatile
   575                           
   576                           ;BAI_5.c: 76:         score = 0;
   577  0757  01FA               	clrf	muoiSauLed@score
   578                           
   579                           ;BAI_5.c: 77:         while(score < 8) {
   580  0758  2F76               	goto	l43
   581  0759                     l677:
   582                           
   583                           ;BAI_5.c: 78:             PORTC = (0x80 >> score);
   584  0759  0A7A               	incf	muoiSauLed@score,w
   585  075A  00F0               	movwf	??_muoiSauLed
   586  075B  3080               	movlw	128
   587  075C  00F1               	movwf	??_muoiSauLed+1
   588  075D  3000               	movlw	0
   589  075E  00F2               	movwf	??_muoiSauLed+2
   590  075F  2F63               	goto	u44
   591  0760                     u45:
   592  0760  0D72               	rlf	??_muoiSauLed+2,w
   593  0761  0CF2               	rrf	??_muoiSauLed+2,f
   594  0762  0CF1               	rrf	??_muoiSauLed+1,f
   595  0763                     u44:
   596  0763  0BF0               	decfsz	??_muoiSauLed,f
   597  0764  2F60               	goto	u45
   598  0765  0871               	movf	??_muoiSauLed+1,w
   599  0766  1283               	bcf	3,5	;RP0=0, select bank0
   600  0767  1303               	bcf	3,6	;RP1=0, select bank0
   601  0768  0087               	movwf	7	;volatile
   602  0769                     l679:
   603                           
   604                           ;BAI_5.c: 79:             _delay((unsigned long)((50)*(4000000/4000.0)));
   605  0769  3041               	movlw	65
   606  076A  00F1               	movwf	??_muoiSauLed+1
   607  076B  30EE               	movlw	238
   608  076C  00F0               	movwf	??_muoiSauLed
   609  076D                     u157:
   610  076D  0BF0               	decfsz	??_muoiSauLed,f
   611  076E  2F6D               	goto	u157
   612  076F  0BF1               	decfsz	??_muoiSauLed+1,f
   613  0770  2F6D               	goto	u157
   614  0771  0000               	nop
   615  0772                     l681:
   616                           
   617                           ;BAI_5.c: 80:             score++;
   618  0772  3001               	movlw	1
   619  0773  00F0               	movwf	??_muoiSauLed
   620  0774  0870               	movf	??_muoiSauLed,w
   621  0775  07FA               	addwf	muoiSauLed@score,f
   622  0776                     l43:	
   623                           ;BAI_5.c: 81:         }
   624                           
   625                           
   626                           ;BAI_5.c: 77:         while(score < 8) {
   627  0776  3008               	movlw	8
   628  0777  027A               	subwf	muoiSauLed@score,w
   629  0778  1C03               	skipc
   630  0779  2F7B               	goto	u51
   631  077A  2F7C               	goto	u50
   632  077B                     u51:
   633  077B  2F59               	goto	l677
   634  077C                     u50:
   635  077C                     l683:
   636                           
   637                           ;BAI_5.c: 82:         PORTC = 0;
   638  077C  1283               	bcf	3,5	;RP0=0, select bank0
   639  077D  1303               	bcf	3,6	;RP1=0, select bank0
   640  077E  0187               	clrf	7	;volatile
   641  077F                     l685:
   642                           
   643                           ;BAI_5.c: 83:         numberRace--;
   644  077F  3001               	movlw	1
   645  0780  02F5               	subwf	muoiSauLed@numberRace,f
   646  0781  3000               	movlw	0
   647  0782  1C03               	skipc
   648  0783  03F6               	decf	muoiSauLed@numberRace+1,f
   649  0784  02F6               	subwf	muoiSauLed@numberRace+1,f
   650  0785                     l687:
   651                           
   652                           ;BAI_5.c: 66:     while(numberRace > 0) {
   653  0785  0875               	movf	muoiSauLed@numberRace,w
   654  0786  0476               	iorwf	muoiSauLed@numberRace+1,w
   655  0787  1D03               	btfss	3,2
   656  0788  2F8A               	goto	u61
   657  0789  2F8B               	goto	u60
   658  078A                     u61:
   659  078A  2F23               	goto	l663
   660  078B                     u60:
   661  078B  2FEF               	goto	l717
   662  078C                     l689:
   663                           
   664                           ;BAI_5.c: 86:         unsigned char index = 0;
   665  078C  01F9               	clrf	muoiSauLed@index
   666  078D                     l691:
   667                           
   668                           ;BAI_5.c: 87:         unsigned char hold = 0x80;
   669  078D  3080               	movlw	128
   670  078E  00F0               	movwf	??_muoiSauLed
   671  078F  0870               	movf	??_muoiSauLed,w
   672  0790  00FB               	movwf	muoiSauLed@hold
   673  0791                     l693:
   674                           
   675                           ;BAI_5.c: 88:         PORTD = 0;
   676  0791  1283               	bcf	3,5	;RP0=0, select bank0
   677  0792  1303               	bcf	3,6	;RP1=0, select bank0
   678  0793  0188               	clrf	8	;volatile
   679                           
   680                           ;BAI_5.c: 89:         _delay((unsigned long)((50)*(4000000/4000.0)));
   681  0794  3041               	movlw	65
   682  0795  00F1               	movwf	??_muoiSauLed+1
   683  0796  30EE               	movlw	238
   684  0797  00F0               	movwf	??_muoiSauLed
   685  0798                     u167:
   686  0798  0BF0               	decfsz	??_muoiSauLed,f
   687  0799  2F98               	goto	u167
   688  079A  0BF1               	decfsz	??_muoiSauLed+1,f
   689  079B  2F98               	goto	u167
   690  079C  0000               	nop
   691                           
   692                           ;BAI_5.c: 90:         while(index < 8) {
   693  079D  2FB7               	goto	l49
   694  079E                     l695:
   695                           
   696                           ;BAI_5.c: 91:             PORTD = hold;
   697  079E  087B               	movf	muoiSauLed@hold,w
   698  079F  1283               	bcf	3,5	;RP0=0, select bank0
   699  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   700  07A1  0088               	movwf	8	;volatile
   701                           
   702                           ;BAI_5.c: 92:             _delay((unsigned long)((50)*(4000000/4000.0)));
   703  07A2  3041               	movlw	65
   704  07A3  00F1               	movwf	??_muoiSauLed+1
   705  07A4  30EE               	movlw	238
   706  07A5  00F0               	movwf	??_muoiSauLed
   707  07A6                     u177:
   708  07A6  0BF0               	decfsz	??_muoiSauLed,f
   709  07A7  2FA6               	goto	u177
   710  07A8  0BF1               	decfsz	??_muoiSauLed+1,f
   711  07A9  2FA6               	goto	u177
   712  07AA  0000               	nop
   713  07AB                     l697:
   714                           
   715                           ;BAI_5.c: 93:             hold = (hold >> 1) | hold;
   716  07AB  087B               	movf	muoiSauLed@hold,w
   717  07AC  00F0               	movwf	??_muoiSauLed
   718  07AD  1003               	clrc
   719  07AE  0C70               	rrf	??_muoiSauLed,w
   720  07AF  047B               	iorwf	muoiSauLed@hold,w
   721  07B0  00F1               	movwf	??_muoiSauLed+1
   722  07B1  0871               	movf	??_muoiSauLed+1,w
   723  07B2  00FB               	movwf	muoiSauLed@hold
   724  07B3                     l699:
   725                           
   726                           ;BAI_5.c: 94:             index++;
   727  07B3  3001               	movlw	1
   728  07B4  00F0               	movwf	??_muoiSauLed
   729  07B5  0870               	movf	??_muoiSauLed,w
   730  07B6  07F9               	addwf	muoiSauLed@index,f
   731  07B7                     l49:	
   732                           ;BAI_5.c: 95:         }
   733                           
   734                           
   735                           ;BAI_5.c: 90:         while(index < 8) {
   736  07B7  3008               	movlw	8
   737  07B8  0279               	subwf	muoiSauLed@index,w
   738  07B9  1C03               	skipc
   739  07BA  2FBC               	goto	u71
   740  07BB  2FBD               	goto	u70
   741  07BC                     u71:
   742  07BC  2F9E               	goto	l695
   743  07BD                     u70:
   744  07BD                     l701:
   745                           
   746                           ;BAI_5.c: 96:         index = 0;
   747  07BD  01F9               	clrf	muoiSauLed@index
   748  07BE                     l703:
   749                           
   750                           ;BAI_5.c: 97:         hold = 0x80;
   751  07BE  3080               	movlw	128
   752  07BF  00F0               	movwf	??_muoiSauLed
   753  07C0  0870               	movf	??_muoiSauLed,w
   754  07C1  00FB               	movwf	muoiSauLed@hold
   755  07C2                     l705:
   756                           
   757                           ;BAI_5.c: 98:         PORTC = 0;
   758  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   759  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   760  07C4  0187               	clrf	7	;volatile
   761                           
   762                           ;BAI_5.c: 99:         while(index < 8) {
   763  07C5  2FDF               	goto	l52
   764  07C6                     l707:
   765                           
   766                           ;BAI_5.c: 100:             PORTC = hold;
   767  07C6  087B               	movf	muoiSauLed@hold,w
   768  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   769  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   770  07C9  0087               	movwf	7	;volatile
   771                           
   772                           ;BAI_5.c: 101:             _delay((unsigned long)((50)*(4000000/4000.0)));
   773  07CA  3041               	movlw	65
   774  07CB  00F1               	movwf	??_muoiSauLed+1
   775  07CC  30EE               	movlw	238
   776  07CD  00F0               	movwf	??_muoiSauLed
   777  07CE                     u187:
   778  07CE  0BF0               	decfsz	??_muoiSauLed,f
   779  07CF  2FCE               	goto	u187
   780  07D0  0BF1               	decfsz	??_muoiSauLed+1,f
   781  07D1  2FCE               	goto	u187
   782  07D2  0000               	nop
   783  07D3                     l709:
   784                           
   785                           ;BAI_5.c: 102:             hold = (hold >> 1) | hold;
   786  07D3  087B               	movf	muoiSauLed@hold,w
   787  07D4  00F0               	movwf	??_muoiSauLed
   788  07D5  1003               	clrc
   789  07D6  0C70               	rrf	??_muoiSauLed,w
   790  07D7  047B               	iorwf	muoiSauLed@hold,w
   791  07D8  00F1               	movwf	??_muoiSauLed+1
   792  07D9  0871               	movf	??_muoiSauLed+1,w
   793  07DA  00FB               	movwf	muoiSauLed@hold
   794  07DB                     l711:
   795                           
   796                           ;BAI_5.c: 103:             index++;
   797  07DB  3001               	movlw	1
   798  07DC  00F0               	movwf	??_muoiSauLed
   799  07DD  0870               	movf	??_muoiSauLed,w
   800  07DE  07F9               	addwf	muoiSauLed@index,f
   801  07DF                     l52:	
   802                           ;BAI_5.c: 104:         }
   803                           
   804                           
   805                           ;BAI_5.c: 99:         while(index < 8) {
   806  07DF  3008               	movlw	8
   807  07E0  0279               	subwf	muoiSauLed@index,w
   808  07E1  1C03               	skipc
   809  07E2  2FE4               	goto	u81
   810  07E3  2FE5               	goto	u80
   811  07E4                     u81:
   812  07E4  2FC6               	goto	l707
   813  07E5                     u80:
   814  07E5                     l713:
   815                           
   816                           ;BAI_5.c: 105:         PORTC = 0;
   817  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   818  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   819  07E7  0187               	clrf	7	;volatile
   820                           
   821                           ;BAI_5.c: 106:         PORTD = 0;
   822  07E8  0188               	clrf	8	;volatile
   823  07E9                     l715:
   824                           
   825                           ;BAI_5.c: 107:         numberCountUp--;
   826  07E9  3001               	movlw	1
   827  07EA  02F7               	subwf	muoiSauLed@numberCountUp,f
   828  07EB  3000               	movlw	0
   829  07EC  1C03               	skipc
   830  07ED  03F8               	decf	muoiSauLed@numberCountUp+1,f
   831  07EE  02F8               	subwf	muoiSauLed@numberCountUp+1,f
   832  07EF                     l717:
   833                           
   834                           ;BAI_5.c: 85:     while(numberCountUp > 0) {
   835  07EF  0877               	movf	muoiSauLed@numberCountUp,w
   836  07F0  0478               	iorwf	muoiSauLed@numberCountUp+1,w
   837  07F1  1D03               	btfss	3,2
   838  07F2  2FF4               	goto	u91
   839  07F3  2FF5               	goto	u90
   840  07F4                     u91:
   841  07F4  2F8C               	goto	l689
   842  07F5                     u90:
   843  07F5                     l719:
   844                           
   845                           ;BAI_5.c: 109:     PORTC = 0xff;
   846  07F5  30FF               	movlw	255
   847  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   848  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   849  07F8  0087               	movwf	7	;volatile
   850                           
   851                           ;BAI_5.c: 110:     PORTD = 0xff;
   852  07F9  30FF               	movlw	255
   853  07FA  0088               	movwf	8	;volatile
   854  07FB                     l56:
   855  07FB  0008               	return
   856  07FC                     __end_of_muoiSauLed:
   857                           
   858                           	psect	text2
   859  06BA                     __ptext2:	
   860 ;; *************** function _declarePort *****************
   861 ;; Defined at:
   862 ;;		line 113 in file "BAI_5.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		status,2
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _declarePort
   891  06BA                     _declarePort:
   892  06BA                     l651:	
   893                           ;incstack = 0
   894                           ; Regs used in _declarePort: [status,2]
   895                           
   896                           
   897                           ;BAI_5.c: 114:     ANSEL = ANSELH = 0;
   898  06BA  1683               	bsf	3,5	;RP0=1, select bank3
   899  06BB  1703               	bsf	3,6	;RP1=1, select bank3
   900  06BC  0189               	clrf	9	;volatile
   901  06BD  0188               	clrf	8	;volatile
   902                           
   903                           ;BAI_5.c: 115:     TRISD = 0;
   904  06BE  1683               	bsf	3,5	;RP0=1, select bank1
   905  06BF  1303               	bcf	3,6	;RP1=0, select bank1
   906  06C0  0188               	clrf	8	;volatile
   907                           
   908                           ;BAI_5.c: 116:     TRISC = 0;
   909  06C1  0187               	clrf	7	;volatile
   910                           
   911                           ;BAI_5.c: 117:     TRISB = 0;
   912  06C2  0186               	clrf	6	;volatile
   913                           
   914                           ;BAI_5.c: 118:     PORTB = 0;
   915  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   916  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   917  06C5  0186               	clrf	6	;volatile
   918                           
   919                           ;BAI_5.c: 119:     PORTC = 0;
   920  06C6  0187               	clrf	7	;volatile
   921                           
   922                           ;BAI_5.c: 120:     PORTD = 0;
   923  06C7  0188               	clrf	8	;volatile
   924  06C8                     l59:
   925  06C8  0008               	return
   926  06C9                     __end_of_declarePort:
   927  007E                     btemp	set	126	;btemp
   928  007E                     wtemp0	set	126
   929                           
   930                           	psect	config
   931                           
   932                           ;Config register CONFIG1 @ 0x2007
   933                           ;	Oscillator Selection bits
   934                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   935                           ;	Watchdog Timer Enable bit
   936                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   937                           ;	Power-up Timer Enable bit
   938                           ;	PWRTE = OFF, PWRT disabled
   939                           ;	RE3/MCLR pin function select bit
   940                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   941                           ;	Code Protection bit
   942                           ;	CP = OFF, Program memory code protection is disabled
   943                           ;	Data Code Protection bit
   944                           ;	CPD = OFF, Data memory code protection is disabled
   945                           ;	Brown Out Reset Selection bits
   946                           ;	BOREN = OFF, BOR disabled
   947                           ;	Internal External Switchover bit
   948                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   949                           ;	Fail-Safe Clock Monitor Enabled bit
   950                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   951                           ;	Low Voltage Programming Enable bit
   952                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   953                           ;	In-Circuit Debugger Mode bit
   954                           ;	DEBUG = 0x1, unprogrammed default
   955  2007                     	org	8199
   956  2007  20F2               	dw	8434
   957                           
   958                           ;Config register CONFIG2 @ 0x2008
   959                           ;	Brown-out Reset Selection bit
   960                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   961                           ;	Flash Program Memory Self Write Enable bits
   962                           ;	WRT = OFF, Write protection off
   963  2008                     	org	8200
   964  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_muoiSauLed

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     240
                                             12 COMMON     2     2      0
                        _declarePort
                         _muoiSauLed
 ---------------------------------------------------------------------------------
 (1) _muoiSauLed                                          12    12      0     225
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _declarePort
   _muoiSauLed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 13 15:11:15 2021

                     l40 074E                       l43 0776                       l52 07DF  
                     l56 07FB                       l49 07B7                       l59 06C8  
                     u10 0722                       u11 0721                       u30 0754  
                     u31 0753                       u24 073B                       u25 0738  
                     u50 077C                       u51 077B                       u60 078B  
                     u44 0763                       u61 078A                       u45 0760  
                     u70 07BD                       u71 07BC                       u80 07E5  
                     u81 07E4                       u90 07F5                       u91 07F4  
                    l701 07BD                      l711 07DB                      l703 07BE  
                    l713 07E5                      l705 07C2                      l721 06C9  
                    l651 06BA                      l715 07E9                      l707 07C6  
                    l731 06E5                      l723 06CE                      l709 07D3  
                    l717 07EF                      l661 071C                      l653 06ED  
                    l725 06D0                      l719 07F5                      l671 0741  
                    l663 0723                      l655 06FA                      l727 06D9  
                    l681 0772                      l673 074A                      l665 0726  
                    l657 0712                      l729 06DE                      l691 078D  
                    l683 077C                      l675 0754                      l667 072F  
                    l659 0715                      l693 0791                      l685 077F  
                    l677 0759                      l669 0731                      l695 079E  
                    l679 0769                      l687 0785                      l697 07AB  
                    l689 078C                      l699 07B3                      u100 06D9  
                    u101 06D8                      u117 06FE                      u127 070D  
                    u137 072A                      u147 0745                      u157 076D  
                    u167 0798                      u177 07A6                      u187 07CE  
        muoiSauLed@index 0079          muoiSauLed@score 007A                     _main 06C9  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088     __size_of_declarePort 000F    muoiSauLed@numberFlash 0073  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 06ED                   ??_main 007C                   _ANSELH 0189  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 06C9  
                __ptext1 06ED                  __ptext2 06BA            ??_declarePort 0070  
   end_of_initialization 07FC  muoiSauLed@numberCountUp 0077               _muoiSauLed 06ED  
    __end_of_declarePort 06C9           muoiSauLed@hold 007B     muoiSauLed@numberRace 0075  
    start_initialization 07FC              ?_muoiSauLed 0070              _declarePort 06BA  
              ___latbits 0002      __size_of_muoiSauLed 010F                main@count 007C  
          __size_of_main 0024             ??_muoiSauLed 0070             ?_declarePort 0070  
     __end_of_muoiSauLed 07FC  
